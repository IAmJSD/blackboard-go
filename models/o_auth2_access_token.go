// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OAuth2AccessToken o auth2 access token
//
// swagger:model OAuth2AccessToken
type OAuth2AccessToken struct {

	// The access token issued by the authorization server.
	AccessToken string `json:"access_token,omitempty"`

	// The lifetime in seconds of the access token.
	// Required: true
	ExpiresIn *int32 `json:"expires_in"`

	// The refresh token issued by the authorization server during OAuth2 authorization code workflow if 'offline' scope was granted.
	RefreshToken string `json:"refresh_token,omitempty"`

	// The scope of the access granted by this token.
	Scope string `json:"scope,omitempty"`

	// The type of the token issued.  Value is case insensitive.
	TokenType string `json:"token_type,omitempty"`

	// The ID of the user granted access via token
	UserID string `json:"user_id,omitempty"`
}

// Validate validates this o auth2 access token
func (m *OAuth2AccessToken) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExpiresIn(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OAuth2AccessToken) validateExpiresIn(formats strfmt.Registry) error {

	if err := validate.Required("expires_in", "body", m.ExpiresIn); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OAuth2AccessToken) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OAuth2AccessToken) UnmarshalBinary(b []byte) error {
	var res OAuth2AccessToken
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
