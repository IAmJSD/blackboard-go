// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ContentHandler content handler
//
// swagger:model ContentHandler
type ContentHandler struct {

	// The content handler's ID.
	//
	// Publicly supported handlers:
	//
	//  | ID                                 | Documentation                   | Since     |
	//  |------------------------------------|---------------------------------|-----------|
	//  | resource/x-bb-document             | ContentItemTOPubV1              |  3000.1.0 |
	//  | resource/x-bb-externallink         | ExternalLinkTOPubV1             |  3000.1.0 |
	//  | resource/x-bb-folder               | ContentFolderTOPubV1            |  3000.1.0 |
	//  | resource/x-bb-courselink           | CourseLinkTOPubV1               |  3100.5.0 |
	//  | resource/x-bb-forumlink            | DiscussionLinkTOPubV1           |  3100.6.0 |
	//  | resource/x-bb-blti-link            | BasicLTITOPubV1                 |  3200.6.0 |
	//  | resource/x-bb-file                 | ContentFileTOPubV1              |  3200.6.0 |
	//  | resource/x-bb-asmt-test-link       | TestLinkTOPubV1                 |  3300.5.0 |
	//  | resource/x-bb-assignment           | AssignmentTOPubV1               |  3400.9.0 |
	//  | resource/x-bb-blti-bltiplacement-* | BasicLTIPlacementContentTOPubV1 |  3600.0.0 |
	//
	//
	// For handlers that are not publicly supported yet, their ID will be shown here, and updates to common content attributes are allowed, but extended handler-specific attributes will not be visible.
	// Required: true
	// Read Only: true
	ID string `json:"id"`
}

// Validate validates this content handler
func (m *ContentHandler) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ContentHandler) validateID(formats strfmt.Registry) error {

	if err := validate.RequiredString("id", "body", string(m.ID)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ContentHandler) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ContentHandler) UnmarshalBinary(b []byte) error {
	var res ContentHandler
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
