// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// SystemRoleEnum system role enum
//
// swagger:model SystemRoleEnum
type SystemRoleEnum string

const (

	// SystemRoleEnumSystemAdmin captures enum value "SystemAdmin"
	SystemRoleEnumSystemAdmin SystemRoleEnum = "SystemAdmin"

	// SystemRoleEnumSystemSupport captures enum value "SystemSupport"
	SystemRoleEnumSystemSupport SystemRoleEnum = "SystemSupport"

	// SystemRoleEnumCourseCreator captures enum value "CourseCreator"
	SystemRoleEnumCourseCreator SystemRoleEnum = "CourseCreator"

	// SystemRoleEnumCourseSupport captures enum value "CourseSupport"
	SystemRoleEnumCourseSupport SystemRoleEnum = "CourseSupport"

	// SystemRoleEnumAccountAdmin captures enum value "AccountAdmin"
	SystemRoleEnumAccountAdmin SystemRoleEnum = "AccountAdmin"

	// SystemRoleEnumGuest captures enum value "Guest"
	SystemRoleEnumGuest SystemRoleEnum = "Guest"

	// SystemRoleEnumUser captures enum value "User"
	SystemRoleEnumUser SystemRoleEnum = "User"

	// SystemRoleEnumObserver captures enum value "Observer"
	SystemRoleEnumObserver SystemRoleEnum = "Observer"

	// SystemRoleEnumIntegration captures enum value "Integration"
	SystemRoleEnumIntegration SystemRoleEnum = "Integration"

	// SystemRoleEnumPortal captures enum value "Portal"
	SystemRoleEnumPortal SystemRoleEnum = "Portal"
)

// for schema
var systemRoleEnumEnum []interface{}

func init() {
	var res []SystemRoleEnum
	if err := json.Unmarshal([]byte(`["SystemAdmin","SystemSupport","CourseCreator","CourseSupport","AccountAdmin","Guest","User","Observer","Integration","Portal"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		systemRoleEnumEnum = append(systemRoleEnumEnum, v)
	}
}

func (m SystemRoleEnum) validateSystemRoleEnumEnum(path, location string, value SystemRoleEnum) error {
	if err := validate.EnumCase(path, location, value, systemRoleEnumEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this system role enum
func (m SystemRoleEnum) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSystemRoleEnumEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
