// Code generated by go-swagger; DO NOT EDIT.

package content_group_assignments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/jakemakesstuff/blackboard-go/models"
)

// PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDReader is a Reader for the PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupID structure.
type PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDCreated creates a PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDCreated with default headers values
func NewPutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDCreated() *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDCreated {
	return &PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDCreated{}
}

/*PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDCreated handles this case with default header values.

Created
*/
type PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDCreated struct {
	Payload *models.ContentGroup
}

func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDCreated) Error() string {
	return fmt.Sprintf("[PUT /learn/api/public/v1/courses/{courseId}/contents/{contentId}/groups/{groupId}][%d] putLearnApiPublicV1CoursesCourseIdContentsContentIdGroupsGroupIdCreated  %+v", 201, o.Payload)
}

func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDCreated) GetPayload() *models.ContentGroup {
	return o.Payload
}

func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContentGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDBadRequest creates a PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDBadRequest with default headers values
func NewPutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDBadRequest() *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDBadRequest {
	return &PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDBadRequest{}
}

/*PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDBadRequest handles this case with default header values.

Invalid Course in body of request; or Invalid association data
*/
type PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDBadRequest struct {
	Payload *models.RestException
}

func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /learn/api/public/v1/courses/{courseId}/contents/{contentId}/groups/{groupId}][%d] putLearnApiPublicV1CoursesCourseIdContentsContentIdGroupsGroupIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDBadRequest) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDForbidden creates a PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDForbidden with default headers values
func NewPutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDForbidden() *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDForbidden {
	return &PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDForbidden{}
}

/*PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDForbidden handles this case with default header values.

Logged-on User has insufficient privileges
*/
type PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDForbidden struct {
	Payload *models.RestException
}

func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDForbidden) Error() string {
	return fmt.Sprintf("[PUT /learn/api/public/v1/courses/{courseId}/contents/{contentId}/groups/{groupId}][%d] putLearnApiPublicV1CoursesCourseIdContentsContentIdGroupsGroupIdForbidden  %+v", 403, o.Payload)
}

func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDForbidden) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDNotFound creates a PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDNotFound with default headers values
func NewPutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDNotFound() *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDNotFound {
	return &PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDNotFound{}
}

/*PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDNotFound handles this case with default header values.

Content does not exist; or Group does not exist
*/
type PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDNotFound struct {
	Payload *models.RestException
}

func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /learn/api/public/v1/courses/{courseId}/contents/{contentId}/groups/{groupId}][%d] putLearnApiPublicV1CoursesCourseIdContentsContentIdGroupsGroupIdNotFound  %+v", 404, o.Payload)
}

func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDNotFound) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDConflict creates a PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDConflict with default headers values
func NewPutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDConflict() *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDConflict {
	return &PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDConflict{}
}

/*PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDConflict handles this case with default header values.

Group already associated; or Cannot associate individual groups, and groups in a set to the same content item
*/
type PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDConflict struct {
	Payload *models.RestException
}

func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDConflict) Error() string {
	return fmt.Sprintf("[PUT /learn/api/public/v1/courses/{courseId}/contents/{contentId}/groups/{groupId}][%d] putLearnApiPublicV1CoursesCourseIdContentsContentIdGroupsGroupIdConflict  %+v", 409, o.Payload)
}

func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDConflict) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDBody put learn API public v1 courses course ID contents content ID groups group ID body
swagger:model PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDBody
*/
type PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDBody struct {

	// The ID of the associated content.
	ContentID string `json:"contentId,omitempty"`

	// The ID of the association of content and group.
	GroupID string `json:"groupId,omitempty"`
}

// Validate validates this put learn API public v1 courses course ID contents content ID groups group ID body
func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDBody) UnmarshalBinary(b []byte) error {
	var res PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
