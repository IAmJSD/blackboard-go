// Code generated by go-swagger; DO NOT EDIT.

package content_group_assignments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams creates a new PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams object
// with the default values initialized.
func NewPutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams() *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams {
	var ()
	return &PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParamsWithTimeout creates a new PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParamsWithTimeout(timeout time.Duration) *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams {
	var ()
	return &PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams{

		timeout: timeout,
	}
}

// NewPutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParamsWithContext creates a new PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParamsWithContext(ctx context.Context) *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams {
	var ()
	return &PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams{

		Context: ctx,
	}
}

// NewPutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParamsWithHTTPClient creates a new PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParamsWithHTTPClient(client *http.Client) *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams {
	var ()
	return &PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams{
		HTTPClient: client,
	}
}

/*PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams contains all the parameters to send to the API endpoint
for the put learn API public v1 courses course ID contents content ID groups group ID operation typically these are written to a http.Request
*/
type PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams struct {

	/*AllowChildCourseContent
	  By default, child courses of a cross listed course can not have their contents modified.  The allowChildCourseContent parameter can be sent as true in order to bypass this validation.

	*/
	AllowChildCourseContent *bool
	/*ContentID*/
	ContentID string
	/*CourseID
	 The course or organization ID.  This may be the primary ID, or any of the secondary IDs prefixed with the ID type.

	| ID type    | Example                               |
	|------------|---------------------------------------|
	| primary    | _123_1                                |
	| externalId | externalId:math101                    |
	| courseId   | courseId:math101                      |
	| uuid       | uuid:915c7567d76d444abf1eed56aad3beb5 |


	*/
	CourseID string
	/*Fields
	  A comma-delimited list of fields to include in the response. If not specified, all fields will be returned.

	*/
	Fields *string
	/*GroupID
	 The group ID.  This may be the primary ID, or any of the secondary IDs prefixed with the ID type.

	| ID type    | Example                               |
	|------------|---------------------------------------|
	| primary    | _123_1                                |
	| externalId | externalId:breakfastClub              |


	*/
	GroupID string
	/*Input*/
	Input PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put learn API public v1 courses course ID contents content ID groups group ID params
func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) WithTimeout(timeout time.Duration) *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put learn API public v1 courses course ID contents content ID groups group ID params
func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put learn API public v1 courses course ID contents content ID groups group ID params
func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) WithContext(ctx context.Context) *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put learn API public v1 courses course ID contents content ID groups group ID params
func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put learn API public v1 courses course ID contents content ID groups group ID params
func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) WithHTTPClient(client *http.Client) *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put learn API public v1 courses course ID contents content ID groups group ID params
func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAllowChildCourseContent adds the allowChildCourseContent to the put learn API public v1 courses course ID contents content ID groups group ID params
func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) WithAllowChildCourseContent(allowChildCourseContent *bool) *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams {
	o.SetAllowChildCourseContent(allowChildCourseContent)
	return o
}

// SetAllowChildCourseContent adds the allowChildCourseContent to the put learn API public v1 courses course ID contents content ID groups group ID params
func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) SetAllowChildCourseContent(allowChildCourseContent *bool) {
	o.AllowChildCourseContent = allowChildCourseContent
}

// WithContentID adds the contentID to the put learn API public v1 courses course ID contents content ID groups group ID params
func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) WithContentID(contentID string) *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams {
	o.SetContentID(contentID)
	return o
}

// SetContentID adds the contentId to the put learn API public v1 courses course ID contents content ID groups group ID params
func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) SetContentID(contentID string) {
	o.ContentID = contentID
}

// WithCourseID adds the courseID to the put learn API public v1 courses course ID contents content ID groups group ID params
func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) WithCourseID(courseID string) *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams {
	o.SetCourseID(courseID)
	return o
}

// SetCourseID adds the courseId to the put learn API public v1 courses course ID contents content ID groups group ID params
func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) SetCourseID(courseID string) {
	o.CourseID = courseID
}

// WithFields adds the fields to the put learn API public v1 courses course ID contents content ID groups group ID params
func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) WithFields(fields *string) *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the put learn API public v1 courses course ID contents content ID groups group ID params
func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) SetFields(fields *string) {
	o.Fields = fields
}

// WithGroupID adds the groupID to the put learn API public v1 courses course ID contents content ID groups group ID params
func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) WithGroupID(groupID string) *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams {
	o.SetGroupID(groupID)
	return o
}

// SetGroupID adds the groupId to the put learn API public v1 courses course ID contents content ID groups group ID params
func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) SetGroupID(groupID string) {
	o.GroupID = groupID
}

// WithInput adds the input to the put learn API public v1 courses course ID contents content ID groups group ID params
func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) WithInput(input PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDBody) *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams {
	o.SetInput(input)
	return o
}

// SetInput adds the input to the put learn API public v1 courses course ID contents content ID groups group ID params
func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) SetInput(input PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDBody) {
	o.Input = input
}

// WriteToRequest writes these params to a swagger request
func (o *PutLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AllowChildCourseContent != nil {

		// query param allowChildCourseContent
		var qrAllowChildCourseContent bool
		if o.AllowChildCourseContent != nil {
			qrAllowChildCourseContent = *o.AllowChildCourseContent
		}
		qAllowChildCourseContent := swag.FormatBool(qrAllowChildCourseContent)
		if qAllowChildCourseContent != "" {
			if err := r.SetQueryParam("allowChildCourseContent", qAllowChildCourseContent); err != nil {
				return err
			}
		}

	}

	// path param contentId
	if err := r.SetPathParam("contentId", o.ContentID); err != nil {
		return err
	}

	// path param courseId
	if err := r.SetPathParam("courseId", o.CourseID); err != nil {
		return err
	}

	if o.Fields != nil {

		// query param fields
		var qrFields string
		if o.Fields != nil {
			qrFields = *o.Fields
		}
		qFields := qrFields
		if qFields != "" {
			if err := r.SetQueryParam("fields", qFields); err != nil {
				return err
			}
		}

	}

	// path param groupId
	if err := r.SetPathParam("groupId", o.GroupID); err != nil {
		return err
	}

	if err := r.SetBodyParam(o.Input); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
