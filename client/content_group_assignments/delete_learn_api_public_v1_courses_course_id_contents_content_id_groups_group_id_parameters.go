// Code generated by go-swagger; DO NOT EDIT.

package content_group_assignments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams creates a new DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams object
// with the default values initialized.
func NewDeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams() *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams {
	var ()
	return &DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParamsWithTimeout creates a new DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParamsWithTimeout(timeout time.Duration) *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams {
	var ()
	return &DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams{

		timeout: timeout,
	}
}

// NewDeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParamsWithContext creates a new DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParamsWithContext(ctx context.Context) *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams {
	var ()
	return &DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams{

		Context: ctx,
	}
}

// NewDeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParamsWithHTTPClient creates a new DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParamsWithHTTPClient(client *http.Client) *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams {
	var ()
	return &DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams{
		HTTPClient: client,
	}
}

/*DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams contains all the parameters to send to the API endpoint
for the delete learn API public v1 courses course ID contents content ID groups group ID operation typically these are written to a http.Request
*/
type DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams struct {

	/*AllowChildCourseContent
	  By default, child courses of a cross listed course can not have their contents modified.  The allowChildCourseContent parameter can be sent as true in order to bypass this validation.

	*/
	AllowChildCourseContent *bool
	/*ContentID*/
	ContentID string
	/*CourseID
	 The course or organization ID.  This may be the primary ID, or any of the secondary IDs prefixed with the ID type.

	| ID type    | Example                               |
	|------------|---------------------------------------|
	| primary    | _123_1                                |
	| externalId | externalId:math101                    |
	| courseId   | courseId:math101                      |
	| uuid       | uuid:915c7567d76d444abf1eed56aad3beb5 |


	*/
	CourseID string
	/*GroupID
	 The group ID.  This may be the primary ID, or any of the secondary IDs prefixed with the ID type.

	| ID type    | Example                               |
	|------------|---------------------------------------|
	| primary    | _123_1                                |
	| externalId | externalId:breakfastClub              |


	*/
	GroupID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete learn API public v1 courses course ID contents content ID groups group ID params
func (o *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) WithTimeout(timeout time.Duration) *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete learn API public v1 courses course ID contents content ID groups group ID params
func (o *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete learn API public v1 courses course ID contents content ID groups group ID params
func (o *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) WithContext(ctx context.Context) *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete learn API public v1 courses course ID contents content ID groups group ID params
func (o *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete learn API public v1 courses course ID contents content ID groups group ID params
func (o *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) WithHTTPClient(client *http.Client) *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete learn API public v1 courses course ID contents content ID groups group ID params
func (o *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAllowChildCourseContent adds the allowChildCourseContent to the delete learn API public v1 courses course ID contents content ID groups group ID params
func (o *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) WithAllowChildCourseContent(allowChildCourseContent *bool) *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams {
	o.SetAllowChildCourseContent(allowChildCourseContent)
	return o
}

// SetAllowChildCourseContent adds the allowChildCourseContent to the delete learn API public v1 courses course ID contents content ID groups group ID params
func (o *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) SetAllowChildCourseContent(allowChildCourseContent *bool) {
	o.AllowChildCourseContent = allowChildCourseContent
}

// WithContentID adds the contentID to the delete learn API public v1 courses course ID contents content ID groups group ID params
func (o *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) WithContentID(contentID string) *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams {
	o.SetContentID(contentID)
	return o
}

// SetContentID adds the contentId to the delete learn API public v1 courses course ID contents content ID groups group ID params
func (o *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) SetContentID(contentID string) {
	o.ContentID = contentID
}

// WithCourseID adds the courseID to the delete learn API public v1 courses course ID contents content ID groups group ID params
func (o *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) WithCourseID(courseID string) *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams {
	o.SetCourseID(courseID)
	return o
}

// SetCourseID adds the courseId to the delete learn API public v1 courses course ID contents content ID groups group ID params
func (o *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) SetCourseID(courseID string) {
	o.CourseID = courseID
}

// WithGroupID adds the groupID to the delete learn API public v1 courses course ID contents content ID groups group ID params
func (o *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) WithGroupID(groupID string) *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams {
	o.SetGroupID(groupID)
	return o
}

// SetGroupID adds the groupId to the delete learn API public v1 courses course ID contents content ID groups group ID params
func (o *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) SetGroupID(groupID string) {
	o.GroupID = groupID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDGroupsGroupIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AllowChildCourseContent != nil {

		// query param allowChildCourseContent
		var qrAllowChildCourseContent bool
		if o.AllowChildCourseContent != nil {
			qrAllowChildCourseContent = *o.AllowChildCourseContent
		}
		qAllowChildCourseContent := swag.FormatBool(qrAllowChildCourseContent)
		if qAllowChildCourseContent != "" {
			if err := r.SetQueryParam("allowChildCourseContent", qAllowChildCourseContent); err != nil {
				return err
			}
		}

	}

	// path param contentId
	if err := r.SetPathParam("contentId", o.ContentID); err != nil {
		return err
	}

	// path param courseId
	if err := r.SetPathParam("courseId", o.CourseID); err != nil {
		return err
	}

	// path param groupId
	if err := r.SetPathParam("groupId", o.GroupID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
