// Code generated by go-swagger; DO NOT EDIT.

package course_grade_attempts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new course grade attempts API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for course grade attempts API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileID(params *DeleteLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileIDNoContent, error)

	GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFiles(params *GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesOK, error)

	GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileID(params *GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileIDOK, error)

	GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileIDDownload(params *GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileIDDownloadParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileIDDownloadOK, error)

	PostLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFiles(params *PostLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesParams, authInfo runtime.ClientAuthInfoWriter) (*PostLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesCreated, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileID deletes attachment

  Delete the file for a Student Submission associated to an attempt.

The student who owns the file can delete it while the attempt is in progress.

**Since**: 3500.2.0
*/
func (a *Client) DeleteLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileID(params *DeleteLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileIDNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileID",
		Method:             "DELETE",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/gradebook/attempts/{attemptId}/files/{attemptFileId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileIDNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFiles gets attempt file meta data list

  Get the list of file metadata for a Student Submission associated to the course and attempt.

- Id
- Name

**Since**: 3400.6.0
*/
func (a *Client) GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFiles(params *GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFiles",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/gradebook/attempts/{attemptId}/files",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFiles: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileID gets attempt file meta data

  Get the file metadata for a Student Submission associated to the course and attempt.

- Id
- Name

**Since**: 3400.6.0
*/
func (a *Client) GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileID(params *GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileID",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/gradebook/attempts/{attemptId}/files/{attemptFileId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileIDDownload downloads

  Download the contents of the file for a Student Submission.

**Since**: 3400.6.0
*/
func (a *Client) GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileIDDownload(params *GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileIDDownloadParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileIDDownloadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileIDDownloadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileIDDownload",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/gradebook/attempts/{attemptId}/files/{attemptFileId}/download",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileIDDownloadReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileIDDownloadOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesAttemptFileIDDownload: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFiles attaches file



Attach a file to an Attempt for a Student Submission. Currently only supports Classic/9.1 Course Assignments. </p>

**Since**: 3500.7.0
*/
func (a *Client) PostLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFiles(params *PostLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesParams, authInfo runtime.ClientAuthInfoWriter) (*PostLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFiles",
		Method:             "POST",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/gradebook/attempts/{attemptId}/files",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFilesCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostLearnAPIPublicV1CoursesCourseIDGradebookAttemptsAttemptIDFiles: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
