// Code generated by go-swagger; DO NOT EDIT.

package deprecated_course_grades

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams creates a new DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams object
// with the default values initialized.
func NewDeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams() *DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams {
	var ()
	return &DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParamsWithTimeout creates a new DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParamsWithTimeout(timeout time.Duration) *DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams {
	var ()
	return &DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams{

		timeout: timeout,
	}
}

// NewDeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParamsWithContext creates a new DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParamsWithContext(ctx context.Context) *DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams {
	var ()
	return &DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams{

		Context: ctx,
	}
}

// NewDeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParamsWithHTTPClient creates a new DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParamsWithHTTPClient(client *http.Client) *DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams {
	var ()
	return &DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams{
		HTTPClient: client,
	}
}

/*DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams contains all the parameters to send to the API endpoint
for the delete learn API public v1 courses course ID gradebook columns column ID operation typically these are written to a http.Request
*/
type DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams struct {

	/*ColumnID
	 The grade column ID.  This may be the primary ID, or any of the secondary IDs prefixed with the ID type.  The ID may also be the keyword 'finalGrade', which indicates that the course's final grade column is specified.

	| ID type    | Example                               |
	|------------|---------------------------------------|
	| primary    | _123_1                                |
	| externalId | externalId:column1                    |
	| finalGrade | finalGrade                            |


	*/
	ColumnID string
	/*CourseID
	 The course or organization ID.  This may be the primary ID, or any of the secondary IDs prefixed with the ID type.

	| ID type    | Example                               |
	|------------|---------------------------------------|
	| primary    | _123_1                                |
	| externalId | externalId:math101                    |
	| courseId   | courseId:math101                      |
	| uuid       | uuid:915c7567d76d444abf1eed56aad3beb5 |


	*/
	CourseID string
	/*OnlyIfEmpty*/
	OnlyIfEmpty *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete learn API public v1 courses course ID gradebook columns column ID params
func (o *DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams) WithTimeout(timeout time.Duration) *DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete learn API public v1 courses course ID gradebook columns column ID params
func (o *DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete learn API public v1 courses course ID gradebook columns column ID params
func (o *DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams) WithContext(ctx context.Context) *DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete learn API public v1 courses course ID gradebook columns column ID params
func (o *DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete learn API public v1 courses course ID gradebook columns column ID params
func (o *DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams) WithHTTPClient(client *http.Client) *DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete learn API public v1 courses course ID gradebook columns column ID params
func (o *DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithColumnID adds the columnID to the delete learn API public v1 courses course ID gradebook columns column ID params
func (o *DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams) WithColumnID(columnID string) *DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams {
	o.SetColumnID(columnID)
	return o
}

// SetColumnID adds the columnId to the delete learn API public v1 courses course ID gradebook columns column ID params
func (o *DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams) SetColumnID(columnID string) {
	o.ColumnID = columnID
}

// WithCourseID adds the courseID to the delete learn API public v1 courses course ID gradebook columns column ID params
func (o *DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams) WithCourseID(courseID string) *DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams {
	o.SetCourseID(courseID)
	return o
}

// SetCourseID adds the courseId to the delete learn API public v1 courses course ID gradebook columns column ID params
func (o *DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams) SetCourseID(courseID string) {
	o.CourseID = courseID
}

// WithOnlyIfEmpty adds the onlyIfEmpty to the delete learn API public v1 courses course ID gradebook columns column ID params
func (o *DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams) WithOnlyIfEmpty(onlyIfEmpty *bool) *DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams {
	o.SetOnlyIfEmpty(onlyIfEmpty)
	return o
}

// SetOnlyIfEmpty adds the onlyIfEmpty to the delete learn API public v1 courses course ID gradebook columns column ID params
func (o *DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams) SetOnlyIfEmpty(onlyIfEmpty *bool) {
	o.OnlyIfEmpty = onlyIfEmpty
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param columnId
	if err := r.SetPathParam("columnId", o.ColumnID); err != nil {
		return err
	}

	// path param courseId
	if err := r.SetPathParam("courseId", o.CourseID); err != nil {
		return err
	}

	if o.OnlyIfEmpty != nil {

		// query param onlyIfEmpty
		var qrOnlyIfEmpty bool
		if o.OnlyIfEmpty != nil {
			qrOnlyIfEmpty = *o.OnlyIfEmpty
		}
		qOnlyIfEmpty := swag.FormatBool(qrOnlyIfEmpty)
		if qOnlyIfEmpty != "" {
			if err := r.SetQueryParam("onlyIfEmpty", qOnlyIfEmpty); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
