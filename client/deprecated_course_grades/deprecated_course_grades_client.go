// Code generated by go-swagger; DO NOT EDIT.

package deprecated_course_grades

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new deprecated course grades API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for deprecated course grades API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnID(params *DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDOK, error)

	GetLearnAPIPublicV1CoursesCourseIDGradebookColumns(params *GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsOK, error)

	GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnID(params *GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDOK, error)

	GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDAttempts(params *GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDAttemptsParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDAttemptsOK, error)

	GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptID(params *GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDOK, error)

	GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsers(params *GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersOK, error)

	GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersUserID(params *GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersUserIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersUserIDOK, error)

	GetLearnAPIPublicV1CoursesCourseIDGradebookUsersUserID(params *GetLearnAPIPublicV1CoursesCourseIDGradebookUsersUserIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookUsersUserIDOK, error)

	PatchLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnID(params *PatchLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams, authInfo runtime.ClientAuthInfoWriter) (*PatchLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDOK, error)

	PatchLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersUserID(params *PatchLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersUserIDParams, authInfo runtime.ClientAuthInfoWriter) (*PatchLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersUserIDOK, error)

	PostLearnAPIPublicV1CoursesCourseIDGradebookColumns(params *PostLearnAPIPublicV1CoursesCourseIDGradebookColumnsParams, authInfo runtime.ClientAuthInfoWriter) (*PostLearnAPIPublicV1CoursesCourseIDGradebookColumnsCreated, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnID deletes grade column

  Delete a specific grade column. The entitlement "course.gradebook.MODIFY" is needed.

**Since**: 3000.7.0

**Deprecated**: since 3200.10.0; use the v2 end-point instead
*/
func (a *Client) DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnID(params *DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnID",
		Method:             "DELETE",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/gradebook/columns/{columnId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV1CoursesCourseIDGradebookColumns gets grade columns

  Returns a list of grade columns.

The entitlement "course.gradebook.MODIFY" is needed. Alternatively, student users may view the grade columns if they are enrolled in the course, and the mygrade tool is available in the course, and the columns are visible to the student. Observers may view grade columns if course access is allowed for observers and the associated observee is a student that satisfies all conditions required by a student user to view grade columns.

Student or observer users may view a limited subset of grade column fields:

- id
- name
- description
- externalGrade
- contentId
- score.possible
- grading.type
- grading.due
- grading.attemptsAllowed
- grading.scoringModel

**Since**: 3000.3.0

**Deprecated**: since 3200.10.0; use the v2 end-point instead
*/
func (a *Client) GetLearnAPIPublicV1CoursesCourseIDGradebookColumns(params *GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1CoursesCourseIDGradebookColumnsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1CoursesCourseIDGradebookColumns",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/gradebook/columns",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1CoursesCourseIDGradebookColumns: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnID gets grade column

  Loads a specific grade column.

The entitlement "course.gradebook.MODIFY" is needed. Alternatively, student users may view the grade column if they are enrolled in the course, and the mygrade tool is available in the course, and the column is visible to the student. Observers may view the grade column if course access is allowed for observers and the associated observee is a student that satisfies all conditions required by a student user to view grade columns.

Student or observer users may view a limited subset of grade column fields:

- id
- name
- description
- externalGrade
- contentId
- score.possible
- grading.type
- grading.due
- grading.attemptsAllowed
- grading.scoringModel

**Since**: 3000.3.0

**Deprecated**: since 3200.10.0; use the v2 end-point instead
*/
func (a *Client) GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnID(params *GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnID",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/gradebook/columns/{columnId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDAttempts gets column attempts

  Returns a list of attempts associated with the specified grade column.

The 'course.gradebook.MODIFY' entitlement is needed to view column attempts. Alternatively, if the 'userId' query parameter is specified, and the user making the request matches the specified 'userId', then the user may view his/her own attempt.  When querying an anonymous grade column, if the release criteria has not yet been met, then the 'userId' attribute will not be populated for the returned column attempts.  If the release criteria has not been met and the 'userId' query parameter is specified, a 403 response is returned, unless the requesting user matches the specified 'userId' value.

A subset of attempt properties are available to a student when requesting his or her own attempts:

- id
- userId
- groupAttemptId
- status
- text
- score
- groupOverride
- feedback
- studentComments
- studentSubmission
- exempt
- created
When this endpoint is called by the API Gateway User, the response will only contain attributes visible to a Grader. If an Attempt is InProgress, then a Student's submission & comments would not be visible to the API Gateway User. If an Attempt is NeedsGrading, then a Student's submission & comments are visible to the API Gateway User.

If the caller has the course.assessment.EXECUTE entitlement, and the attempt is associated with an assessment where the flag to require secure taking is enabled, and the attempt status is InProgress, then the studentSubmission is omitted unless the call comes from a secure browser.

If the caller has the course.assessment.EXECUTE entitlement, and the attempt is associated with an assessment where the flag to require secure reviewing is enabled, and the attempt status is not InProgress, then the studentSubmission is omitted unless the call comes from a secure browser.

**Since**: 3100.4.0

**Deprecated**: since 3300.0.0; use the v2 end-point instead
*/
func (a *Client) GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDAttempts(params *GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDAttemptsParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDAttemptsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDAttemptsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDAttempts",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/gradebook/columns/{columnId}/attempts",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDAttemptsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDAttemptsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDAttempts: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptID gets column attempt

  Loads the grade column attempt for the specified id.

The 'course.gradebook.MODIFY' entitlement is needed to view an attempt. Alternatively, if the user making the request is also the user associated with the attempt grade, then the user may view his/her own attempt.  When accessing an anonymous grade column attempt, if the release criteria has not yet been met, then the 'userId' attribute will not be populated for the returned attempt.

A subset of attempt properties are available to a student when requesting his or her own attempt:

- id
- userId
- groupAttemptId
- status
- text
- score
- groupOverride
- feedback
- studentComments
- studentSubmission
- exempt
- created
When this endpoint is called by the API Gateway User, the response will only contain attributes visible to a Grader. If an Attempt is InProgress, then a Student's submission & comments would not be visible to the API Gateway User. If an Attempt is NeedsGrading, then a Student's submission & comments are visible to the API Gateway User. </p> If the caller has the course.assessment.EXECUTE entitlement, and the attempt is associated with an assessment where the flag to require secure taking is enabled, and the attempt status is InProgress, then the studentSubmission is omitted unless the call comes from a secure browser.

If the caller has the course.assessment.EXECUTE entitlement, and the attempt is associated with an assessment where the flag to require secure reviewing is enabled, and the attempt status is not InProgress, then the studentSubmission is omitted unless the call comes from a secure browser.

**Since**: 3100.4.0

**Deprecated**: since 3300.0.0; use the v2 end-point instead
*/
func (a *Client) GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptID(params *GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptID",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/gradebook/columns/{columnId}/attempts/{attemptId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsers gets column grades

  Returns a list of grades associated with the specified grade column.  This operation does not include 'ReadyToPost' grades when returning grade details for calculated grade columns.

Users with entitlement 'course.gradebook.MODIFY' can retrieve grades for any or all enrolled users. Requests for grades in a columns whose attempts are not visible to instructors will return with a status of "403 - Forbidden."

Enrolled users without the 'course.gradebook.MODIFY' entitlement may only view their own grade; such users cannot retrieve grades of other users.  A request for the grade in a columns that has been hidden from students in the gradebook will return with a status "403 - Forbidden.".  A subset of grade properties are available to a student when requesting his or her own grades:

- userId
- columnId
- status
- text
- score
- exempt
- feedback

**Since**: 3000.3.0

**Deprecated**: since 3300.0.0; use the v2 end-point instead
*/
func (a *Client) GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsers(params *GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsers",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/gradebook/columns/{columnId}/users",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsers: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersUserID gets column grade

  Loads the grade column grade for a specific user.  If grade details have yet to be entered for the specified user, then no grade details will be included in the returned grade object.  This operation does not include 'ReadyToPost' grades when returning grade details for calculated grade columns.

Users with entitlement 'course.gradebook.MODIFY' can retrieve grades for any or all enrolled users. Requests for grades in a columns whose attempts are not visible to instructors will return with a status of "403 - Forbidden."

Enrolled users without the 'course.gradebook.MODIFY' entitlement may only view their own grade; such users cannot retrieve grades of other users.  A request for the grade in a columns that has been hidden from students in the gradebook will return with a status "403 - Forbidden.".  A subset of grade properties are available to a student when requesting his or her own grades:

- userId
- columnId
- status
- text
- score
- exempt
- feedback

**Since**: 3000.3.0

**Deprecated**: since 3300.0.0; use the v2 end-point instead
*/
func (a *Client) GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersUserID(params *GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersUserIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersUserIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersUserIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersUserID",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/gradebook/columns/{columnId}/users/{userId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersUserIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersUserIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersUserID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV1CoursesCourseIDGradebookUsersUserID gets user grades

  Loads the course grades for a specific user.

Users with entitlement "course.gradebook.MODIFY" have read access to all the properties of the collection results.

Users without entitlement "course.gradebook.MODIFY" requesting grades for themselves (i.e., userId = current user id) have read access to a restricted subset of properties of the collections result. These are the properties available to a student when requesting his or her own grades:

- userId
- columnId
- status
- text
- score
- exempt
- feedback

**Since**: 3000.3.0

**Deprecated**: since 3300.0.0; use the v2 end-point instead
*/
func (a *Client) GetLearnAPIPublicV1CoursesCourseIDGradebookUsersUserID(params *GetLearnAPIPublicV1CoursesCourseIDGradebookUsersUserIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookUsersUserIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1CoursesCourseIDGradebookUsersUserIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1CoursesCourseIDGradebookUsersUserID",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/gradebook/users/{userId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1CoursesCourseIDGradebookUsersUserIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1CoursesCourseIDGradebookUsersUserIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1CoursesCourseIDGradebookUsersUserID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnID updates grade column

  Update a manual grade column. The entitlement "course.gradebook.MODIFY" is needed.

**Since**: 3000.7.0

**Deprecated**: since 3200.10.0; use the v2 end-point instead
*/
func (a *Client) PatchLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnID(params *PatchLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams, authInfo runtime.ClientAuthInfoWriter) (*PatchLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnID",
		Method:             "PATCH",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/gradebook/columns/{columnId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PatchLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersUserID updates column grade

  Update the grade column grade for a specific user, including the text grade, score, instructor notes and feedback, and exempt status.  When updating text grade or score, the resulting grade is always marked as 'Posted'.  This end-point, currently, does not support marking the grade as 'ReadyToPost'.  Grade overrides may be cleared by either specifying the 'score' attribute as null, or the 'text'; attribute as null, '', or '-' in the body of the request. The entitlement 'course.gradebook.MODIFY' is required to perform this operation.

**Since**: 3000.5.0

**Deprecated**: since 3300.0.0; use the v2 end-point instead
*/
func (a *Client) PatchLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersUserID(params *PatchLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersUserIDParams, authInfo runtime.ClientAuthInfoWriter) (*PatchLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersUserIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersUserIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersUserID",
		Method:             "PATCH",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/gradebook/columns/{columnId}/users/{userId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PatchLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersUserIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersUserIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchLearnAPIPublicV1CoursesCourseIDGradebookColumnsColumnIDUsersUserID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostLearnAPIPublicV1CoursesCourseIDGradebookColumns creates grade column

  Create a manual grade column. The entitlement "course.gradebook.MODIFY" is needed.

**Since**: 3000.7.0

**Deprecated**: since 3200.10.0; use the v2 end-point instead
*/
func (a *Client) PostLearnAPIPublicV1CoursesCourseIDGradebookColumns(params *PostLearnAPIPublicV1CoursesCourseIDGradebookColumnsParams, authInfo runtime.ClientAuthInfoWriter) (*PostLearnAPIPublicV1CoursesCourseIDGradebookColumnsCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostLearnAPIPublicV1CoursesCourseIDGradebookColumnsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostLearnAPIPublicV1CoursesCourseIDGradebookColumns",
		Method:             "POST",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/gradebook/columns",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostLearnAPIPublicV1CoursesCourseIDGradebookColumnsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostLearnAPIPublicV1CoursesCourseIDGradebookColumnsCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostLearnAPIPublicV1CoursesCourseIDGradebookColumns: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
