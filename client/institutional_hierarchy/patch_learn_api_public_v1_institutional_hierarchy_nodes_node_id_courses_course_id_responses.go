// Code generated by go-swagger; DO NOT EDIT.

package institutional_hierarchy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/jakemakesstuff/blackboard-go/models"
)

// PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDReader is a Reader for the PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseID structure.
type PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDOK creates a PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDOK with default headers values
func NewPatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDOK() *PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDOK {
	return &PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDOK{}
}

/*PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDOK handles this case with default header values.

OK
*/
type PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDOK struct {
	Payload *models.HierarchyNodeCourse
}

func (o *PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDOK) Error() string {
	return fmt.Sprintf("[PATCH /learn/api/public/v1/institutionalHierarchy/nodes/{nodeId}/courses/{courseId}][%d] patchLearnApiPublicV1InstitutionalHierarchyNodesNodeIdCoursesCourseIdOK  %+v", 200, o.Payload)
}

func (o *PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDOK) GetPayload() *models.HierarchyNodeCourse {
	return o.Payload
}

func (o *PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HierarchyNodeCourse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDBadRequest creates a PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDBadRequest with default headers values
func NewPatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDBadRequest() *PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDBadRequest {
	return &PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDBadRequest{}
}

/*PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDBadRequest handles this case with default header values.

Bad Request
*/
type PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDBadRequest struct {
	Payload *models.RestException
}

func (o *PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /learn/api/public/v1/institutionalHierarchy/nodes/{nodeId}/courses/{courseId}][%d] patchLearnApiPublicV1InstitutionalHierarchyNodesNodeIdCoursesCourseIdBadRequest  %+v", 400, o.Payload)
}

func (o *PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDBadRequest) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDForbidden creates a PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDForbidden with default headers values
func NewPatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDForbidden() *PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDForbidden {
	return &PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDForbidden{}
}

/*PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDForbidden handles this case with default header values.

Forbidden
*/
type PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDForbidden struct {
	Payload *models.RestException
}

func (o *PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDForbidden) Error() string {
	return fmt.Sprintf("[PATCH /learn/api/public/v1/institutionalHierarchy/nodes/{nodeId}/courses/{courseId}][%d] patchLearnApiPublicV1InstitutionalHierarchyNodesNodeIdCoursesCourseIdForbidden  %+v", 403, o.Payload)
}

func (o *PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDForbidden) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDNotFound creates a PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDNotFound with default headers values
func NewPatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDNotFound() *PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDNotFound {
	return &PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDNotFound{}
}

/*PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDNotFound handles this case with default header values.

Not Found
*/
type PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDNotFound struct {
	Payload *models.RestException
}

func (o *PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /learn/api/public/v1/institutionalHierarchy/nodes/{nodeId}/courses/{courseId}][%d] patchLearnApiPublicV1InstitutionalHierarchyNodesNodeIdCoursesCourseIdNotFound  %+v", 404, o.Payload)
}

func (o *PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDNotFound) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDBody patch learn API public v1 institutional hierarchy nodes node ID courses course ID body
swagger:model PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDBody
*/
type PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDBody struct {

	// Whether or not this association represents the primary node association of the course
	IsPrimary bool `json:"isPrimary,omitempty"`
}

// Validate validates this patch learn API public v1 institutional hierarchy nodes node ID courses course ID body
func (o *PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDBody) UnmarshalBinary(b []byte) error {
	var res PatchLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDCoursesCourseIDBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
