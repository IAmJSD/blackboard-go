// Code generated by go-swagger; DO NOT EDIT.

package institutional_hierarchy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams creates a new GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams object
// with the default values initialized.
func NewGetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams() *GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams {
	var ()
	return &GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParamsWithTimeout creates a new GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParamsWithTimeout(timeout time.Duration) *GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams {
	var ()
	return &GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams{

		timeout: timeout,
	}
}

// NewGetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParamsWithContext creates a new GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParamsWithContext(ctx context.Context) *GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams {
	var ()
	return &GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams{

		Context: ctx,
	}
}

// NewGetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParamsWithHTTPClient creates a new GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParamsWithHTTPClient(client *http.Client) *GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams {
	var ()
	return &GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams{
		HTTPClient: client,
	}
}

/*GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams contains all the parameters to send to the API endpoint
for the get learn API public v1 institutional hierarchy nodes node ID operation typically these are written to a http.Request
*/
type GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams struct {

	/*Fields
	  A comma-delimited list of fields to include in the response. If not specified, all fields will be returned.

	*/
	Fields *string
	/*NodeID
	 The node ID.  This may be the primary ID, or any of the secondary IDs prefixed with the ID type.

	| ID type    | Example                               |
	|------------|---------------------------------------|
	| primary    | _123_1                                |
	| externalId | externalId:breakfastClub              |



	*/
	NodeID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get learn API public v1 institutional hierarchy nodes node ID params
func (o *GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams) WithTimeout(timeout time.Duration) *GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get learn API public v1 institutional hierarchy nodes node ID params
func (o *GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get learn API public v1 institutional hierarchy nodes node ID params
func (o *GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams) WithContext(ctx context.Context) *GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get learn API public v1 institutional hierarchy nodes node ID params
func (o *GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get learn API public v1 institutional hierarchy nodes node ID params
func (o *GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams) WithHTTPClient(client *http.Client) *GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get learn API public v1 institutional hierarchy nodes node ID params
func (o *GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFields adds the fields to the get learn API public v1 institutional hierarchy nodes node ID params
func (o *GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams) WithFields(fields *string) *GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the get learn API public v1 institutional hierarchy nodes node ID params
func (o *GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams) SetFields(fields *string) {
	o.Fields = fields
}

// WithNodeID adds the nodeID to the get learn API public v1 institutional hierarchy nodes node ID params
func (o *GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams) WithNodeID(nodeID string) *GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams {
	o.SetNodeID(nodeID)
	return o
}

// SetNodeID adds the nodeId to the get learn API public v1 institutional hierarchy nodes node ID params
func (o *GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams) SetNodeID(nodeID string) {
	o.NodeID = nodeID
}

// WriteToRequest writes these params to a swagger request
func (o *GetLearnAPIPublicV1InstitutionalHierarchyNodesNodeIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Fields != nil {

		// query param fields
		var qrFields string
		if o.Fields != nil {
			qrFields = *o.Fields
		}
		qFields := qrFields
		if qFields != "" {
			if err := r.SetQueryParam("fields", qFields); err != nil {
				return err
			}
		}

	}

	// path param nodeId
	if err := r.SetPathParam("nodeId", o.NodeID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
