// Code generated by go-swagger; DO NOT EDIT.

package course_grade_notations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/jakemakesstuff/blackboard-go/models"
)

// PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDReader is a Reader for the PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationID structure.
type PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK creates a PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK with default headers values
func NewPatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK() *PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK {
	return &PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK{}
}

/*PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK handles this case with default header values.

OK
*/
type PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK struct {
	Payload *models.GradeNotation
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK) Error() string {
	return fmt.Sprintf("[PATCH /learn/api/public/v1/courses/{courseId}/gradebook/gradeNotations/{gradeNotationId}][%d] patchLearnApiPublicV1CoursesCourseIdGradebookGradeNotationsGradeNotationIdOK  %+v", 200, o.Payload)
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK) GetPayload() *models.GradeNotation {
	return o.Payload
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GradeNotation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBadRequest creates a PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBadRequest with default headers values
func NewPatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBadRequest() *PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBadRequest {
	return &PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBadRequest{}
}

/*PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBadRequest handles this case with default header values.

Bad Request
*/
type PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBadRequest struct {
	Payload *models.RestException
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /learn/api/public/v1/courses/{courseId}/gradebook/gradeNotations/{gradeNotationId}][%d] patchLearnApiPublicV1CoursesCourseIdGradebookGradeNotationsGradeNotationIdBadRequest  %+v", 400, o.Payload)
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBadRequest) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDForbidden creates a PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDForbidden with default headers values
func NewPatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDForbidden() *PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDForbidden {
	return &PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDForbidden{}
}

/*PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDForbidden handles this case with default header values.

Forbidden
*/
type PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDForbidden struct {
	Payload *models.RestException
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDForbidden) Error() string {
	return fmt.Sprintf("[PATCH /learn/api/public/v1/courses/{courseId}/gradebook/gradeNotations/{gradeNotationId}][%d] patchLearnApiPublicV1CoursesCourseIdGradebookGradeNotationsGradeNotationIdForbidden  %+v", 403, o.Payload)
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDForbidden) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDNotFound creates a PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDNotFound with default headers values
func NewPatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDNotFound() *PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDNotFound {
	return &PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDNotFound{}
}

/*PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDNotFound handles this case with default header values.

Not Found
*/
type PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDNotFound struct {
	Payload *models.RestException
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /learn/api/public/v1/courses/{courseId}/gradebook/gradeNotations/{gradeNotationId}][%d] patchLearnApiPublicV1CoursesCourseIdGradebookGradeNotationsGradeNotationIdNotFound  %+v", 404, o.Payload)
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDNotFound) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDConflict creates a PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDConflict with default headers values
func NewPatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDConflict() *PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDConflict {
	return &PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDConflict{}
}

/*PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDConflict handles this case with default header values.

Conflict
*/
type PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDConflict struct {
	Payload *models.RestException
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDConflict) Error() string {
	return fmt.Sprintf("[PATCH /learn/api/public/v1/courses/{courseId}/gradebook/gradeNotations/{gradeNotationId}][%d] patchLearnApiPublicV1CoursesCourseIdGradebookGradeNotationsGradeNotationIdConflict  %+v", 409, o.Payload)
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDConflict) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBody patch learn API public v1 courses course ID gradebook grade notations grade notation ID body
swagger:model PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBody
*/
type PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBody struct {

	// The performance code associated with the grade notation.
	Code string `json:"code,omitempty"`

	// The description of the grade notation.
	Description string `json:"description,omitempty"`
}

// Validate validates this patch learn API public v1 courses course ID gradebook grade notations grade notation ID body
func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBody) UnmarshalBinary(b []byte) error {
	var res PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
