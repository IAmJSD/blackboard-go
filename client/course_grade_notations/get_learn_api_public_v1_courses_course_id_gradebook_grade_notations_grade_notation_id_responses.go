// Code generated by go-swagger; DO NOT EDIT.

package course_grade_notations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jakemakesstuff/blackboard-go/models"
)

// GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDReader is a Reader for the GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationID structure.
type GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK creates a GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK with default headers values
func NewGetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK() *GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK {
	return &GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK{}
}

/*GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK handles this case with default header values.

OK
*/
type GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK struct {
	Payload *models.GradeNotation
}

func (o *GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/courses/{courseId}/gradebook/gradeNotations/{gradeNotationId}][%d] getLearnApiPublicV1CoursesCourseIdGradebookGradeNotationsGradeNotationIdOK  %+v", 200, o.Payload)
}

func (o *GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK) GetPayload() *models.GradeNotation {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GradeNotation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBadRequest creates a GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBadRequest with default headers values
func NewGetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBadRequest() *GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBadRequest {
	return &GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBadRequest{}
}

/*GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBadRequest handles this case with default header values.

Bad Request
*/
type GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBadRequest struct {
	Payload *models.RestException
}

func (o *GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/courses/{courseId}/gradebook/gradeNotations/{gradeNotationId}][%d] getLearnApiPublicV1CoursesCourseIdGradebookGradeNotationsGradeNotationIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBadRequest) GetPayload() *models.RestException {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDForbidden creates a GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDForbidden with default headers values
func NewGetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDForbidden() *GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDForbidden {
	return &GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDForbidden{}
}

/*GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDForbidden handles this case with default header values.

Forbidden
*/
type GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDForbidden struct {
	Payload *models.RestException
}

func (o *GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDForbidden) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/courses/{courseId}/gradebook/gradeNotations/{gradeNotationId}][%d] getLearnApiPublicV1CoursesCourseIdGradebookGradeNotationsGradeNotationIdForbidden  %+v", 403, o.Payload)
}

func (o *GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDForbidden) GetPayload() *models.RestException {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDNotFound creates a GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDNotFound with default headers values
func NewGetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDNotFound() *GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDNotFound {
	return &GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDNotFound{}
}

/*GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDNotFound handles this case with default header values.

Not Found
*/
type GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDNotFound struct {
	Payload *models.RestException
}

func (o *GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDNotFound) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/courses/{courseId}/gradebook/gradeNotations/{gradeNotationId}][%d] getLearnApiPublicV1CoursesCourseIdGradebookGradeNotationsGradeNotationIdNotFound  %+v", 404, o.Payload)
}

func (o *GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDNotFound) GetPayload() *models.RestException {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
