// Code generated by go-swagger; DO NOT EDIT.

package course_grade_notations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new course grade notations API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for course grade notations API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationID(params *DeleteLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK, error)

	GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotations(params *GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsOK, error)

	GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationID(params *GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK, error)

	PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationID(params *PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDParams, authInfo runtime.ClientAuthInfoWriter) (*PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK, error)

	PostLearnAPIPublicV1CoursesCourseIDGradebookGradeNotations(params *PostLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsParams, authInfo runtime.ClientAuthInfoWriter) (*PostLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsCreated, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationID deletes grade notation

  Delete a specific grade notation.

The entitlement "course.gradebook.MODIFY" is needed.

**Since**: 3200.13.0
*/
func (a *Client) DeleteLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationID(params *DeleteLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationID",
		Method:             "DELETE",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/gradebook/gradeNotations/{gradeNotationId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotations gets grade notations

  Returns a list of grade notations.

The entitlement "course.user.grades.VIEW" is needed.

**Since**: 3200.13.0
*/
func (a *Client) GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotations(params *GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotations",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/gradebook/gradeNotations",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotations: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationID gets grade notation

  Returns a specific grade notation.

The entitlement "course.user.grades.VIEW" is needed.

**Since**: 3200.13.0
*/
func (a *Client) GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationID(params *GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationID",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/gradebook/gradeNotations/{gradeNotationId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationID updates grade notation

  Update a grade notation on this course.

The entitlement "course.gradebook.MODIFY" is needed.

**Since**: 3200.14.0
*/
func (a *Client) PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationID(params *PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDParams, authInfo runtime.ClientAuthInfoWriter) (*PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationID",
		Method:             "PATCH",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/gradebook/gradeNotations/{gradeNotationId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsGradeNotationID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostLearnAPIPublicV1CoursesCourseIDGradebookGradeNotations creates grade notation

  Create a grade notation on this course.

The entitlement "course.gradebook.MODIFY" is needed.

**Since**: 3200.13.0
*/
func (a *Client) PostLearnAPIPublicV1CoursesCourseIDGradebookGradeNotations(params *PostLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsParams, authInfo runtime.ClientAuthInfoWriter) (*PostLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostLearnAPIPublicV1CoursesCourseIDGradebookGradeNotations",
		Method:             "POST",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/gradebook/gradeNotations",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostLearnAPIPublicV1CoursesCourseIDGradebookGradeNotationsCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostLearnAPIPublicV1CoursesCourseIDGradebookGradeNotations: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
