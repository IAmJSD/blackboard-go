// Code generated by go-swagger; DO NOT EDIT.

package content_resources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jakemakesstuff/blackboard-go/models"
)

// GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDReader is a Reader for the GetLearnAPIPublicV1CoursesCourseIDResourcesResourceID structure.
type GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDOK creates a GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDOK with default headers values
func NewGetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDOK() *GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDOK {
	return &GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDOK{}
}

/*GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDOK handles this case with default header values.

OK
*/
type GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDOK struct {
	Payload *models.Resource
}

func (o *GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDOK) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/courses/{courseId}/resources/{resourceId}][%d] getLearnApiPublicV1CoursesCourseIdResourcesResourceIdOK  %+v", 200, o.Payload)
}

func (o *GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDOK) GetPayload() *models.Resource {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Resource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDNotFound creates a GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDNotFound with default headers values
func NewGetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDNotFound() *GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDNotFound {
	return &GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDNotFound{}
}

/*GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDNotFound handles this case with default header values.

The specified resource could not be loaded for the specified course
*/
type GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDNotFound struct {
	Payload *models.RestException
}

func (o *GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDNotFound) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/courses/{courseId}/resources/{resourceId}][%d] getLearnApiPublicV1CoursesCourseIdResourcesResourceIdNotFound  %+v", 404, o.Payload)
}

func (o *GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDNotFound) GetPayload() *models.RestException {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDTooManyRequests creates a GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDTooManyRequests with default headers values
func NewGetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDTooManyRequests() *GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDTooManyRequests {
	return &GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDTooManyRequests{}
}

/*GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDTooManyRequests handles this case with default header values.

The endpoint is being overloaded with requests
*/
type GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDTooManyRequests struct {
	Payload *models.RestException
}

func (o *GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/courses/{courseId}/resources/{resourceId}][%d] getLearnApiPublicV1CoursesCourseIdResourcesResourceIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDTooManyRequests) GetPayload() *models.RestException {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
