// Code generated by go-swagger; DO NOT EDIT.

package content_resources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new content resources API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for content resources API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	GetLearnAPIPublicV1CoursesCourseIDResources(params *GetLearnAPIPublicV1CoursesCourseIDResourcesParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDResourcesOK, error)

	GetLearnAPIPublicV1CoursesCourseIDResourcesResourceID(params *GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDOK, error)

	GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDChildren(params *GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDChildrenParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDChildrenOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  GetLearnAPIPublicV1CoursesCourseIDResources gets top level course resources

  Returns a list of the top-level course resources.

Users with the 'bbcms.cs.fileSystem.REST.VIEW' entitlement can view all resources.

All other users can view resources for which they have been granted the 'Read' permission.

**Since**: 3700.12.0
*/
func (a *Client) GetLearnAPIPublicV1CoursesCourseIDResources(params *GetLearnAPIPublicV1CoursesCourseIDResourcesParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDResourcesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1CoursesCourseIDResourcesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1CoursesCourseIDResources",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/resources",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1CoursesCourseIDResourcesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1CoursesCourseIDResourcesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1CoursesCourseIDResources: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV1CoursesCourseIDResourcesResourceID gets course resource

  Loads a Course Resource by Id.

Users with the 'bbcms.cs.fileSystem.REST.VIEW' entitlement can view all resources.

All other users can view resources for which they have been granted the 'Read' permission.

**Since**: 3700.13.0
*/
func (a *Client) GetLearnAPIPublicV1CoursesCourseIDResourcesResourceID(params *GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1CoursesCourseIDResourcesResourceID",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/resources/{resourceId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1CoursesCourseIDResourcesResourceID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDChildren gets course resource children

  Returns a list of Course Resources that are children of the specified Resource.

Users with the 'bbcms.cs.fileSystem.REST.VIEW' entitlement can view all resources.

All other users can view resources for which they have been granted the 'Read' permission.

**Since**: 3700.13.0
*/
func (a *Client) GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDChildren(params *GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDChildrenParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDChildrenOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDChildrenParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDChildren",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/resources/{resourceId}/children",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDChildrenReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDChildrenOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1CoursesCourseIDResourcesResourceIDChildren: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
