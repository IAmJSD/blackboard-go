// Code generated by go-swagger; DO NOT EDIT.

package content

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/jakemakesstuff/blackboard-go/models"
)

// PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenReader is a Reader for the PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildren structure.
type PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 507:
		result := NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenInsufficientStorage()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenCreated creates a PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenCreated with default headers values
func NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenCreated() *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenCreated {
	return &PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenCreated{}
}

/*PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenCreated handles this case with default header values.

Created
*/
type PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenCreated struct {
	Payload *models.Content
}

func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenCreated) Error() string {
	return fmt.Sprintf("[POST /learn/api/public/v1/courses/{courseId}/contents/{contentId}/children][%d] postLearnApiPublicV1CoursesCourseIdContentsContentIdChildrenCreated  %+v", 201, o.Payload)
}

func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenCreated) GetPayload() *models.Content {
	return o.Payload
}

func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Content)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenBadRequest creates a PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenBadRequest with default headers values
func NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenBadRequest() *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenBadRequest {
	return &PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenBadRequest{}
}

/*PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenBadRequest handles this case with default header values.

Bad Request
*/
type PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenBadRequest struct {
	Payload *models.RestException
}

func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenBadRequest) Error() string {
	return fmt.Sprintf("[POST /learn/api/public/v1/courses/{courseId}/contents/{contentId}/children][%d] postLearnApiPublicV1CoursesCourseIdContentsContentIdChildrenBadRequest  %+v", 400, o.Payload)
}

func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenBadRequest) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenForbidden creates a PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenForbidden with default headers values
func NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenForbidden() *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenForbidden {
	return &PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenForbidden{}
}

/*PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenForbidden handles this case with default header values.

Forbidden
*/
type PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenForbidden struct {
	Payload *models.RestException
}

func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenForbidden) Error() string {
	return fmt.Sprintf("[POST /learn/api/public/v1/courses/{courseId}/contents/{contentId}/children][%d] postLearnApiPublicV1CoursesCourseIdContentsContentIdChildrenForbidden  %+v", 403, o.Payload)
}

func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenForbidden) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenInsufficientStorage creates a PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenInsufficientStorage with default headers values
func NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenInsufficientStorage() *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenInsufficientStorage {
	return &PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenInsufficientStorage{}
}

/*PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenInsufficientStorage handles this case with default header values.

Folder quota exceeded
*/
type PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenInsufficientStorage struct {
	Payload *models.RestException
}

func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenInsufficientStorage) Error() string {
	return fmt.Sprintf("[POST /learn/api/public/v1/courses/{courseId}/contents/{contentId}/children][%d] postLearnApiPublicV1CoursesCourseIdContentsContentIdChildrenInsufficientStorage  %+v", 507, o.Payload)
}

func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenInsufficientStorage) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenInsufficientStorage) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenBody post learn API public v1 courses course ID contents content ID children body
swagger:model PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenBody
*/
type PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenBody struct {

	// availability
	Availability *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsBodyAvailability `json:"availability,omitempty"`

	// The body text associated with this content. This field supports BbML; see <a target='_blank' href='https://docs.blackboard.com/learn/REST/Blackboard%20Markup%20Language%20-%20BbML.html'>here</a> for more information.
	Body string `json:"body,omitempty"`

	// Extended settings specific to this content item's content handler.
	ContentHandler *models.ContentHandler `json:"contentHandler,omitempty"`

	// The short description of this content.
	//
	// This field is not used in Classic courses.  For Ultra courses this is used to show information directly on the course outline.
	Description string `json:"description,omitempty"`

	// Indicates whether the content is going to open in a new window.
	//
	// **Since**: 3800.10.0
	LaunchInNewWindow bool `json:"launchInNewWindow,omitempty"`

	// The ID of the content's parent.  Note that top-level contents do not have parents. The 'parentId' field is a writable field as of the Bb Learn 3200.6.0 release.  Specifying a new value in PATCH requests allows the Content object to be moved from one parent to another.
	ParentID string `json:"parentId,omitempty"`

	// The position of this content within its parent folder. Position values are zero-based (the first element has a position value of zero, not one). Default position is last in the list of child contents under the parent.
	Position int32 `json:"position,omitempty"`

	// Indicates whether Review Status is enabled for this content. Content items with review status enabled can be marked as reviewed by students. This can be used to track performance and in Adaptive Release rules to control the release of other content. Reviewable field is currently being used only in Classic courses.
	//
	// **Since**: 3700.15.0
	Reviewable bool `json:"reviewable,omitempty"`

	// The title or name of this content. Typically shown as the main text to click in the course outline when accessing the content.
	// Required: true
	Title *string `json:"title"`
}

// Validate validates this post learn API public v1 courses course ID contents content ID children body
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAvailability(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateContentHandler(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTitle(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenBody) validateAvailability(formats strfmt.Registry) error {

	if swag.IsZero(o.Availability) { // not required
		return nil
	}

	if o.Availability != nil {
		if err := o.Availability.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("input" + "." + "availability")
			}
			return err
		}
	}

	return nil
}

func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenBody) validateContentHandler(formats strfmt.Registry) error {

	if swag.IsZero(o.ContentHandler) { // not required
		return nil
	}

	if o.ContentHandler != nil {
		if err := o.ContentHandler.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("input" + "." + "contentHandler")
			}
			return err
		}
	}

	return nil
}

func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenBody) validateTitle(formats strfmt.Registry) error {

	if err := validate.Required("input"+"."+"title", "body", o.Title); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenBody) UnmarshalBinary(b []byte) error {
	var res PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsBodyAvailability Availability
//
// Settings controlling availability of the content to students.
swagger:model PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsBodyAvailability
*/
type PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsBodyAvailability struct {

	// adaptive release
	AdaptiveRelease *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsBodyAvailabilityAdaptiveRelease `json:"adaptiveRelease,omitempty"`

	// Whether this content is available to users with the 'guest' role. Defaults to true.
	AllowGuests bool `json:"allowGuests,omitempty"`

	// Whether the content is currently available to students.  Instructors can always access the content.  If set to 'PartiallyVisible', the title will be available to students but the body will not.  Defaults to Yes.
	//
	//
	// | Type      | Description
	//  | --------- | --------- |
	// | Yes |  |
	// | No |  |
	// | PartiallyVisible |  |
	//
	// Enum: [Yes No PartiallyVisible]
	Available string `json:"available,omitempty"`
}

// Validate validates this post learn API public v1 courses course ID contents content ID children params body availability
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsBodyAvailability) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAdaptiveRelease(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAvailable(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsBodyAvailability) validateAdaptiveRelease(formats strfmt.Registry) error {

	if swag.IsZero(o.AdaptiveRelease) { // not required
		return nil
	}

	if o.AdaptiveRelease != nil {
		if err := o.AdaptiveRelease.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("input" + "." + "availability" + "." + "adaptiveRelease")
			}
			return err
		}
	}

	return nil
}

var postLearnApiPublicV1CoursesCourseIdContentsContentIdChildrenParamsBodyAvailabilityTypeAvailablePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Yes","No","PartiallyVisible"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		postLearnApiPublicV1CoursesCourseIdContentsContentIdChildrenParamsBodyAvailabilityTypeAvailablePropEnum = append(postLearnApiPublicV1CoursesCourseIdContentsContentIdChildrenParamsBodyAvailabilityTypeAvailablePropEnum, v)
	}
}

const (

	// PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsBodyAvailabilityAvailableYes captures enum value "Yes"
	PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsBodyAvailabilityAvailableYes string = "Yes"

	// PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsBodyAvailabilityAvailableNo captures enum value "No"
	PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsBodyAvailabilityAvailableNo string = "No"

	// PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsBodyAvailabilityAvailablePartiallyVisible captures enum value "PartiallyVisible"
	PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsBodyAvailabilityAvailablePartiallyVisible string = "PartiallyVisible"
)

// prop value enum
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsBodyAvailability) validateAvailableEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, postLearnApiPublicV1CoursesCourseIdContentsContentIdChildrenParamsBodyAvailabilityTypeAvailablePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsBodyAvailability) validateAvailable(formats strfmt.Registry) error {

	if swag.IsZero(o.Available) { // not required
		return nil
	}

	// value enum
	if err := o.validateAvailableEnum("input"+"."+"availability"+"."+"available", "body", o.Available); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsBodyAvailability) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsBodyAvailability) UnmarshalBinary(b []byte) error {
	var res PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsBodyAvailability
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsBodyAvailabilityAdaptiveRelease AdaptiveRelease
//
// Settings controlling adaptive release of the content to students.
swagger:model PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsBodyAvailabilityAdaptiveRelease
*/
type PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsBodyAvailabilityAdaptiveRelease struct {

	// The date when this content will no longer be available to students.
	// Format: date-time
	End strfmt.DateTime `json:"end,omitempty"`

	// The date when this content will become available to students.
	// Format: date-time
	Start strfmt.DateTime `json:"start,omitempty"`
}

// Validate validates this post learn API public v1 courses course ID contents content ID children params body availability adaptive release
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsBodyAvailabilityAdaptiveRelease) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEnd(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStart(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsBodyAvailabilityAdaptiveRelease) validateEnd(formats strfmt.Registry) error {

	if swag.IsZero(o.End) { // not required
		return nil
	}

	if err := validate.FormatOf("input"+"."+"availability"+"."+"adaptiveRelease"+"."+"end", "body", "date-time", o.End.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsBodyAvailabilityAdaptiveRelease) validateStart(formats strfmt.Registry) error {

	if swag.IsZero(o.Start) { // not required
		return nil
	}

	if err := validate.FormatOf("input"+"."+"availability"+"."+"adaptiveRelease"+"."+"start", "body", "date-time", o.Start.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsBodyAvailabilityAdaptiveRelease) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsBodyAvailabilityAdaptiveRelease) UnmarshalBinary(b []byte) error {
	var res PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsBodyAvailabilityAdaptiveRelease
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
