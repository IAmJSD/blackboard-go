// Code generated by go-swagger; DO NOT EDIT.

package content

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams creates a new PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams object
// with the default values initialized.
func NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams() *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	var ()
	return &PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsWithTimeout creates a new PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsWithTimeout(timeout time.Duration) *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	var ()
	return &PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams{

		timeout: timeout,
	}
}

// NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsWithContext creates a new PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsWithContext(ctx context.Context) *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	var ()
	return &PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams{

		Context: ctx,
	}
}

// NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsWithHTTPClient creates a new PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsWithHTTPClient(client *http.Client) *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	var ()
	return &PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams{
		HTTPClient: client,
	}
}

/*PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams contains all the parameters to send to the API endpoint
for the post learn API public v1 courses course ID contents content ID children operation typically these are written to a http.Request
*/
type PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams struct {

	/*AllowChildCourseContent
	  By default, child courses of a cross listed course can not have their contents modified.  The allowChildCourseContent parameter can be sent as true in order to bypass this validation.

	*/
	AllowChildCourseContent *bool
	/*ContentID
	 The Content ID.  This may be the primary ID, or any of the following keywords: interactive, indirect, root.

	| ID type    | Example                               |
	|------------|---------------------------------------|
	| primary    | _123_1                                |
	| keyword    | root                                  |


	*/
	ContentID string
	/*CourseID
	 The course or organization ID.  This may be the primary ID, or any of the secondary IDs prefixed with the ID type.

	| ID type    | Example                               |
	|------------|---------------------------------------|
	| primary    | _123_1                                |
	| externalId | externalId:math101                    |
	| courseId   | courseId:math101                      |
	| uuid       | uuid:915c7567d76d444abf1eed56aad3beb5 |


	*/
	CourseID string
	/*Fields
	  A comma-delimited list of fields to include in the response. If not specified, all fields will be returned.

	*/
	Fields *string
	/*Input*/
	Input PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post learn API public v1 courses course ID contents content ID children params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) WithTimeout(timeout time.Duration) *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post learn API public v1 courses course ID contents content ID children params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post learn API public v1 courses course ID contents content ID children params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) WithContext(ctx context.Context) *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post learn API public v1 courses course ID contents content ID children params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post learn API public v1 courses course ID contents content ID children params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) WithHTTPClient(client *http.Client) *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post learn API public v1 courses course ID contents content ID children params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAllowChildCourseContent adds the allowChildCourseContent to the post learn API public v1 courses course ID contents content ID children params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) WithAllowChildCourseContent(allowChildCourseContent *bool) *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	o.SetAllowChildCourseContent(allowChildCourseContent)
	return o
}

// SetAllowChildCourseContent adds the allowChildCourseContent to the post learn API public v1 courses course ID contents content ID children params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) SetAllowChildCourseContent(allowChildCourseContent *bool) {
	o.AllowChildCourseContent = allowChildCourseContent
}

// WithContentID adds the contentID to the post learn API public v1 courses course ID contents content ID children params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) WithContentID(contentID string) *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	o.SetContentID(contentID)
	return o
}

// SetContentID adds the contentId to the post learn API public v1 courses course ID contents content ID children params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) SetContentID(contentID string) {
	o.ContentID = contentID
}

// WithCourseID adds the courseID to the post learn API public v1 courses course ID contents content ID children params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) WithCourseID(courseID string) *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	o.SetCourseID(courseID)
	return o
}

// SetCourseID adds the courseId to the post learn API public v1 courses course ID contents content ID children params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) SetCourseID(courseID string) {
	o.CourseID = courseID
}

// WithFields adds the fields to the post learn API public v1 courses course ID contents content ID children params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) WithFields(fields *string) *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the post learn API public v1 courses course ID contents content ID children params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) SetFields(fields *string) {
	o.Fields = fields
}

// WithInput adds the input to the post learn API public v1 courses course ID contents content ID children params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) WithInput(input PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenBody) *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	o.SetInput(input)
	return o
}

// SetInput adds the input to the post learn API public v1 courses course ID contents content ID children params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) SetInput(input PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenBody) {
	o.Input = input
}

// WriteToRequest writes these params to a swagger request
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AllowChildCourseContent != nil {

		// query param allowChildCourseContent
		var qrAllowChildCourseContent bool
		if o.AllowChildCourseContent != nil {
			qrAllowChildCourseContent = *o.AllowChildCourseContent
		}
		qAllowChildCourseContent := swag.FormatBool(qrAllowChildCourseContent)
		if qAllowChildCourseContent != "" {
			if err := r.SetQueryParam("allowChildCourseContent", qAllowChildCourseContent); err != nil {
				return err
			}
		}

	}

	// path param contentId
	if err := r.SetPathParam("contentId", o.ContentID); err != nil {
		return err
	}

	// path param courseId
	if err := r.SetPathParam("courseId", o.CourseID); err != nil {
		return err
	}

	if o.Fields != nil {

		// query param fields
		var qrFields string
		if o.Fields != nil {
			qrFields = *o.Fields
		}
		qFields := qrFields
		if qFields != "" {
			if err := r.SetQueryParam("fields", qFields); err != nil {
				return err
			}
		}

	}

	if err := r.SetBodyParam(o.Input); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
