// Code generated by go-swagger; DO NOT EDIT.

package content

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jakemakesstuff/blackboard-go/models"
)

// GetLearnAPIPublicV1CoursesCourseIDContentsContentIDReader is a Reader for the GetLearnAPIPublicV1CoursesCourseIDContentsContentID structure.
type GetLearnAPIPublicV1CoursesCourseIDContentsContentIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLearnAPIPublicV1CoursesCourseIDContentsContentIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLearnAPIPublicV1CoursesCourseIDContentsContentIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLearnAPIPublicV1CoursesCourseIDContentsContentIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLearnAPIPublicV1CoursesCourseIDContentsContentIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLearnAPIPublicV1CoursesCourseIDContentsContentIDOK creates a GetLearnAPIPublicV1CoursesCourseIDContentsContentIDOK with default headers values
func NewGetLearnAPIPublicV1CoursesCourseIDContentsContentIDOK() *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDOK {
	return &GetLearnAPIPublicV1CoursesCourseIDContentsContentIDOK{}
}

/*GetLearnAPIPublicV1CoursesCourseIDContentsContentIDOK handles this case with default header values.

OK
*/
type GetLearnAPIPublicV1CoursesCourseIDContentsContentIDOK struct {
	Payload *models.Content
}

func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDOK) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/courses/{courseId}/contents/{contentId}][%d] getLearnApiPublicV1CoursesCourseIdContentsContentIdOK  %+v", 200, o.Payload)
}

func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDOK) GetPayload() *models.Content {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Content)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearnAPIPublicV1CoursesCourseIDContentsContentIDBadRequest creates a GetLearnAPIPublicV1CoursesCourseIDContentsContentIDBadRequest with default headers values
func NewGetLearnAPIPublicV1CoursesCourseIDContentsContentIDBadRequest() *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDBadRequest {
	return &GetLearnAPIPublicV1CoursesCourseIDContentsContentIDBadRequest{}
}

/*GetLearnAPIPublicV1CoursesCourseIDContentsContentIDBadRequest handles this case with default header values.

Bad Request
*/
type GetLearnAPIPublicV1CoursesCourseIDContentsContentIDBadRequest struct {
	Payload *models.RestException
}

func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/courses/{courseId}/contents/{contentId}][%d] getLearnApiPublicV1CoursesCourseIdContentsContentIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDBadRequest) GetPayload() *models.RestException {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearnAPIPublicV1CoursesCourseIDContentsContentIDForbidden creates a GetLearnAPIPublicV1CoursesCourseIDContentsContentIDForbidden with default headers values
func NewGetLearnAPIPublicV1CoursesCourseIDContentsContentIDForbidden() *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDForbidden {
	return &GetLearnAPIPublicV1CoursesCourseIDContentsContentIDForbidden{}
}

/*GetLearnAPIPublicV1CoursesCourseIDContentsContentIDForbidden handles this case with default header values.

Forbidden
*/
type GetLearnAPIPublicV1CoursesCourseIDContentsContentIDForbidden struct {
	Payload *models.RestException
}

func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDForbidden) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/courses/{courseId}/contents/{contentId}][%d] getLearnApiPublicV1CoursesCourseIdContentsContentIdForbidden  %+v", 403, o.Payload)
}

func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDForbidden) GetPayload() *models.RestException {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearnAPIPublicV1CoursesCourseIDContentsContentIDNotFound creates a GetLearnAPIPublicV1CoursesCourseIDContentsContentIDNotFound with default headers values
func NewGetLearnAPIPublicV1CoursesCourseIDContentsContentIDNotFound() *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDNotFound {
	return &GetLearnAPIPublicV1CoursesCourseIDContentsContentIDNotFound{}
}

/*GetLearnAPIPublicV1CoursesCourseIDContentsContentIDNotFound handles this case with default header values.

Not Found
*/
type GetLearnAPIPublicV1CoursesCourseIDContentsContentIDNotFound struct {
	Payload *models.RestException
}

func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDNotFound) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/courses/{courseId}/contents/{contentId}][%d] getLearnApiPublicV1CoursesCourseIdContentsContentIdNotFound  %+v", 404, o.Payload)
}

func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDNotFound) GetPayload() *models.RestException {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
