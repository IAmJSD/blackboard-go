// Code generated by go-swagger; DO NOT EDIT.

package content

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams creates a new GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams object
// with the default values initialized.
func NewGetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams() *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	var ()
	return &GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsWithTimeout creates a new GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsWithTimeout(timeout time.Duration) *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	var ()
	return &GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams{

		timeout: timeout,
	}
}

// NewGetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsWithContext creates a new GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsWithContext(ctx context.Context) *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	var ()
	return &GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams{

		Context: ctx,
	}
}

// NewGetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsWithHTTPClient creates a new GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParamsWithHTTPClient(client *http.Client) *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	var ()
	return &GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams{
		HTTPClient: client,
	}
}

/*GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams contains all the parameters to send to the API endpoint
for the get learn API public v1 courses course ID contents content ID children operation typically these are written to a http.Request
*/
type GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams struct {

	/*ContentHandler
	  Search for the specific content handler.  Not setting this field will return all content handlers.

	**Since**: 3400.5.0

	*/
	ContentHandler *string
	/*ContentID
	 The Content ID.  This may be the primary ID, or any of the following keywords: interactive, indirect, root.

	| ID type    | Example                               |
	|------------|---------------------------------------|
	| primary    | _123_1                                |
	| keyword    | root                                  |


	*/
	ContentID string
	/*CourseID
	 The course or organization ID.  This may be the primary ID, or any of the secondary IDs prefixed with the ID type.

	| ID type    | Example                               |
	|------------|---------------------------------------|
	| primary    | _123_1                                |
	| externalId | externalId:math101                    |
	| courseId   | courseId:math101                      |
	| uuid       | uuid:915c7567d76d444abf1eed56aad3beb5 |


	*/
	CourseID string
	/*Created
	  Search for contents with a created date relative to this value.  'createdCompare' may also be sent to control search behavior.

	**Since**: 3700.1.0

	*/
	Created *strfmt.DateTime
	/*CreatedCompare
	  Used alongside the 'created' search parameter.  Supported values:

	- lessThan
	- greaterOrEqual

	Defaults to greaterOrEqual if not specified.

	**Since**: 3700.1.0


	| Type      | Description
	 | --------- | --------- |
	| lessThan |  |
	| greaterOrEqual |  |


	*/
	CreatedCompare *string
	/*Fields
	  A comma-delimited list of fields to include in the response. If not specified, all fields will be returned.

	*/
	Fields *string
	/*Limit
	  The maximum number of results to be returned. There may be less if the query returned less than the maximum.

	*/
	Limit *int32
	/*Modified
	  Search for contents with a modified date relative to this value.  'modifiedCompare' may also be sent to control search behavior.

	**Since**: 3700.4.0

	*/
	Modified *strfmt.DateTime
	/*ModifiedCompare
	  Used alongside the 'modified' search parameter.  Supported values:

	- lessThan
	- greaterOrEqual

	Defaults to greaterOrEqual if not specified.

	**Since**: 3700.4.0


	| Type      | Description
	 | --------- | --------- |
	| lessThan |  |
	| greaterOrEqual |  |


	*/
	ModifiedCompare *string
	/*Offset
	  The number of rows to skip before beginning to return rows. An offset of 0 is the same as omitting the offset parameter.

	*/
	Offset *int32
	/*Recursive
	  Search for child content recursively.  A value of 'true' indicates that search results should include all content descendants within the hierarchy of the specified parent.  A value of 'false' indicates results should be limited to immediate children only.  Not setting this field defaults to 'false' behavior; only including immediate children.

	**Since**: 3100.2.0

	*/
	Recursive *bool
	/*Reviewable
	  Search contents by whether they are reviewable or not.

	**Since**: 3700.15.0

	*/
	Reviewable *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) WithTimeout(timeout time.Duration) *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) WithContext(ctx context.Context) *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) WithHTTPClient(client *http.Client) *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithContentHandler adds the contentHandler to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) WithContentHandler(contentHandler *string) *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	o.SetContentHandler(contentHandler)
	return o
}

// SetContentHandler adds the contentHandler to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) SetContentHandler(contentHandler *string) {
	o.ContentHandler = contentHandler
}

// WithContentID adds the contentID to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) WithContentID(contentID string) *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	o.SetContentID(contentID)
	return o
}

// SetContentID adds the contentId to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) SetContentID(contentID string) {
	o.ContentID = contentID
}

// WithCourseID adds the courseID to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) WithCourseID(courseID string) *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	o.SetCourseID(courseID)
	return o
}

// SetCourseID adds the courseId to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) SetCourseID(courseID string) {
	o.CourseID = courseID
}

// WithCreated adds the created to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) WithCreated(created *strfmt.DateTime) *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	o.SetCreated(created)
	return o
}

// SetCreated adds the created to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) SetCreated(created *strfmt.DateTime) {
	o.Created = created
}

// WithCreatedCompare adds the createdCompare to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) WithCreatedCompare(createdCompare *string) *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	o.SetCreatedCompare(createdCompare)
	return o
}

// SetCreatedCompare adds the createdCompare to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) SetCreatedCompare(createdCompare *string) {
	o.CreatedCompare = createdCompare
}

// WithFields adds the fields to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) WithFields(fields *string) *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) SetFields(fields *string) {
	o.Fields = fields
}

// WithLimit adds the limit to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) WithLimit(limit *int32) *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) SetLimit(limit *int32) {
	o.Limit = limit
}

// WithModified adds the modified to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) WithModified(modified *strfmt.DateTime) *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	o.SetModified(modified)
	return o
}

// SetModified adds the modified to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) SetModified(modified *strfmt.DateTime) {
	o.Modified = modified
}

// WithModifiedCompare adds the modifiedCompare to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) WithModifiedCompare(modifiedCompare *string) *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	o.SetModifiedCompare(modifiedCompare)
	return o
}

// SetModifiedCompare adds the modifiedCompare to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) SetModifiedCompare(modifiedCompare *string) {
	o.ModifiedCompare = modifiedCompare
}

// WithOffset adds the offset to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) WithOffset(offset *int32) *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) SetOffset(offset *int32) {
	o.Offset = offset
}

// WithRecursive adds the recursive to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) WithRecursive(recursive *bool) *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	o.SetRecursive(recursive)
	return o
}

// SetRecursive adds the recursive to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) SetRecursive(recursive *bool) {
	o.Recursive = recursive
}

// WithReviewable adds the reviewable to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) WithReviewable(reviewable *bool) *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams {
	o.SetReviewable(reviewable)
	return o
}

// SetReviewable adds the reviewable to the get learn API public v1 courses course ID contents content ID children params
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) SetReviewable(reviewable *bool) {
	o.Reviewable = reviewable
}

// WriteToRequest writes these params to a swagger request
func (o *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDChildrenParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ContentHandler != nil {

		// query param contentHandler
		var qrContentHandler string
		if o.ContentHandler != nil {
			qrContentHandler = *o.ContentHandler
		}
		qContentHandler := qrContentHandler
		if qContentHandler != "" {
			if err := r.SetQueryParam("contentHandler", qContentHandler); err != nil {
				return err
			}
		}

	}

	// path param contentId
	if err := r.SetPathParam("contentId", o.ContentID); err != nil {
		return err
	}

	// path param courseId
	if err := r.SetPathParam("courseId", o.CourseID); err != nil {
		return err
	}

	if o.Created != nil {

		// query param created
		var qrCreated strfmt.DateTime
		if o.Created != nil {
			qrCreated = *o.Created
		}
		qCreated := qrCreated.String()
		if qCreated != "" {
			if err := r.SetQueryParam("created", qCreated); err != nil {
				return err
			}
		}

	}

	if o.CreatedCompare != nil {

		// query param createdCompare
		var qrCreatedCompare string
		if o.CreatedCompare != nil {
			qrCreatedCompare = *o.CreatedCompare
		}
		qCreatedCompare := qrCreatedCompare
		if qCreatedCompare != "" {
			if err := r.SetQueryParam("createdCompare", qCreatedCompare); err != nil {
				return err
			}
		}

	}

	if o.Fields != nil {

		// query param fields
		var qrFields string
		if o.Fields != nil {
			qrFields = *o.Fields
		}
		qFields := qrFields
		if qFields != "" {
			if err := r.SetQueryParam("fields", qFields); err != nil {
				return err
			}
		}

	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int32
		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt32(qrLimit)
		if qLimit != "" {
			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}

	}

	if o.Modified != nil {

		// query param modified
		var qrModified strfmt.DateTime
		if o.Modified != nil {
			qrModified = *o.Modified
		}
		qModified := qrModified.String()
		if qModified != "" {
			if err := r.SetQueryParam("modified", qModified); err != nil {
				return err
			}
		}

	}

	if o.ModifiedCompare != nil {

		// query param modifiedCompare
		var qrModifiedCompare string
		if o.ModifiedCompare != nil {
			qrModifiedCompare = *o.ModifiedCompare
		}
		qModifiedCompare := qrModifiedCompare
		if qModifiedCompare != "" {
			if err := r.SetQueryParam("modifiedCompare", qModifiedCompare); err != nil {
				return err
			}
		}

	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int32
		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt32(qrOffset)
		if qOffset != "" {
			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}

	}

	if o.Recursive != nil {

		// query param recursive
		var qrRecursive bool
		if o.Recursive != nil {
			qrRecursive = *o.Recursive
		}
		qRecursive := swag.FormatBool(qrRecursive)
		if qRecursive != "" {
			if err := r.SetQueryParam("recursive", qRecursive); err != nil {
				return err
			}
		}

	}

	if o.Reviewable != nil {

		// query param reviewable
		var qrReviewable bool
		if o.Reviewable != nil {
			qrReviewable = *o.Reviewable
		}
		qReviewable := swag.FormatBool(qrReviewable)
		if qReviewable != "" {
			if err := r.SetQueryParam("reviewable", qReviewable); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
