// Code generated by go-swagger; DO NOT EDIT.

package course_announcements

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/jakemakesstuff/blackboard-go/models"
)

// PostLearnAPIPublicV1CoursesCourseIDAnnouncementsReader is a Reader for the PostLearnAPIPublicV1CoursesCourseIDAnnouncements structure.
type PostLearnAPIPublicV1CoursesCourseIDAnnouncementsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostLearnAPIPublicV1CoursesCourseIDAnnouncementsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostLearnAPIPublicV1CoursesCourseIDAnnouncementsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostLearnAPIPublicV1CoursesCourseIDAnnouncementsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostLearnAPIPublicV1CoursesCourseIDAnnouncementsCreated creates a PostLearnAPIPublicV1CoursesCourseIDAnnouncementsCreated with default headers values
func NewPostLearnAPIPublicV1CoursesCourseIDAnnouncementsCreated() *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsCreated {
	return &PostLearnAPIPublicV1CoursesCourseIDAnnouncementsCreated{}
}

/*PostLearnAPIPublicV1CoursesCourseIDAnnouncementsCreated handles this case with default header values.

Created
*/
type PostLearnAPIPublicV1CoursesCourseIDAnnouncementsCreated struct {
	Payload *models.CourseAnnouncement
}

func (o *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsCreated) Error() string {
	return fmt.Sprintf("[POST /learn/api/public/v1/courses/{courseId}/announcements][%d] postLearnApiPublicV1CoursesCourseIdAnnouncementsCreated  %+v", 201, o.Payload)
}

func (o *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsCreated) GetPayload() *models.CourseAnnouncement {
	return o.Payload
}

func (o *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CourseAnnouncement)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearnAPIPublicV1CoursesCourseIDAnnouncementsBadRequest creates a PostLearnAPIPublicV1CoursesCourseIDAnnouncementsBadRequest with default headers values
func NewPostLearnAPIPublicV1CoursesCourseIDAnnouncementsBadRequest() *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsBadRequest {
	return &PostLearnAPIPublicV1CoursesCourseIDAnnouncementsBadRequest{}
}

/*PostLearnAPIPublicV1CoursesCourseIDAnnouncementsBadRequest handles this case with default header values.

The request did not specify valid data
*/
type PostLearnAPIPublicV1CoursesCourseIDAnnouncementsBadRequest struct {
	Payload *models.RestException
}

func (o *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsBadRequest) Error() string {
	return fmt.Sprintf("[POST /learn/api/public/v1/courses/{courseId}/announcements][%d] postLearnApiPublicV1CoursesCourseIdAnnouncementsBadRequest  %+v", 400, o.Payload)
}

func (o *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsBadRequest) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearnAPIPublicV1CoursesCourseIDAnnouncementsForbidden creates a PostLearnAPIPublicV1CoursesCourseIDAnnouncementsForbidden with default headers values
func NewPostLearnAPIPublicV1CoursesCourseIDAnnouncementsForbidden() *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsForbidden {
	return &PostLearnAPIPublicV1CoursesCourseIDAnnouncementsForbidden{}
}

/*PostLearnAPIPublicV1CoursesCourseIDAnnouncementsForbidden handles this case with default header values.

The user does not have entitlements to create announcements
*/
type PostLearnAPIPublicV1CoursesCourseIDAnnouncementsForbidden struct {
	Payload *models.RestException
}

func (o *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsForbidden) Error() string {
	return fmt.Sprintf("[POST /learn/api/public/v1/courses/{courseId}/announcements][%d] postLearnApiPublicV1CoursesCourseIdAnnouncementsForbidden  %+v", 403, o.Payload)
}

func (o *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsForbidden) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostLearnAPIPublicV1CoursesCourseIDAnnouncementsBody post learn API public v1 courses course ID announcements body
swagger:model PostLearnAPIPublicV1CoursesCourseIDAnnouncementsBody
*/
type PostLearnAPIPublicV1CoursesCourseIDAnnouncementsBody struct {

	// availability
	Availability *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsParamsBodyAvailability `json:"availability,omitempty"`

	// The message body of the Announcement. This field supports BbML; see <a target='_blank' href='https://docs.blackboard.com/learn/REST/Blackboard%20Markup%20Language%20-%20BbML.html'>here</a> for more information.
	Body string `json:"body,omitempty"`

	// An indication of whether or not the Announcement is in draft status.
	Draft bool `json:"draft,omitempty"`

	// The title of this Announcement.
	// Required: true
	Title *string `json:"title"`
}

// Validate validates this post learn API public v1 courses course ID announcements body
func (o *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAvailability(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTitle(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsBody) validateAvailability(formats strfmt.Registry) error {

	if swag.IsZero(o.Availability) { // not required
		return nil
	}

	if o.Availability != nil {
		if err := o.Availability.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("input" + "." + "availability")
			}
			return err
		}
	}

	return nil
}

func (o *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsBody) validateTitle(formats strfmt.Registry) error {

	if err := validate.Required("input"+"."+"title", "body", o.Title); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsBody) UnmarshalBinary(b []byte) error {
	var res PostLearnAPIPublicV1CoursesCourseIDAnnouncementsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostLearnAPIPublicV1CoursesCourseIDAnnouncementsParamsBodyAvailability Availability
//
// Settings controlling availability of the course to students.
swagger:model PostLearnAPIPublicV1CoursesCourseIDAnnouncementsParamsBodyAvailability
*/
type PostLearnAPIPublicV1CoursesCourseIDAnnouncementsParamsBodyAvailability struct {

	// duration
	Duration *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsParamsBodyAvailabilityDuration `json:"duration,omitempty"`
}

// Validate validates this post learn API public v1 courses course ID announcements params body availability
func (o *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsParamsBodyAvailability) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDuration(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsParamsBodyAvailability) validateDuration(formats strfmt.Registry) error {

	if swag.IsZero(o.Duration) { // not required
		return nil
	}

	if o.Duration != nil {
		if err := o.Duration.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("input" + "." + "availability" + "." + "duration")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsParamsBodyAvailability) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsParamsBodyAvailability) UnmarshalBinary(b []byte) error {
	var res PostLearnAPIPublicV1CoursesCourseIDAnnouncementsParamsBodyAvailability
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostLearnAPIPublicV1CoursesCourseIDAnnouncementsParamsBodyAvailabilityDuration Duration
//
// Duration indicates when the System Announcement is Available based on whether it is Permanent or if the date/time of the request falls within its Start & End dates.
swagger:model PostLearnAPIPublicV1CoursesCourseIDAnnouncementsParamsBodyAvailabilityDuration
*/
type PostLearnAPIPublicV1CoursesCourseIDAnnouncementsParamsBodyAvailabilityDuration struct {

	// The date this Announcement stops being Available.
	// Format: date-time
	End strfmt.DateTime `json:"end,omitempty"`

	// The date this Announcement starts being Available.
	// Format: date-time
	Start strfmt.DateTime `json:"start,omitempty"`
}

// Validate validates this post learn API public v1 courses course ID announcements params body availability duration
func (o *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsParamsBodyAvailabilityDuration) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEnd(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStart(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsParamsBodyAvailabilityDuration) validateEnd(formats strfmt.Registry) error {

	if swag.IsZero(o.End) { // not required
		return nil
	}

	if err := validate.FormatOf("input"+"."+"availability"+"."+"duration"+"."+"end", "body", "date-time", o.End.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsParamsBodyAvailabilityDuration) validateStart(formats strfmt.Registry) error {

	if swag.IsZero(o.Start) { // not required
		return nil
	}

	if err := validate.FormatOf("input"+"."+"availability"+"."+"duration"+"."+"start", "body", "date-time", o.Start.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsParamsBodyAvailabilityDuration) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostLearnAPIPublicV1CoursesCourseIDAnnouncementsParamsBodyAvailabilityDuration) UnmarshalBinary(b []byte) error {
	var res PostLearnAPIPublicV1CoursesCourseIDAnnouncementsParamsBodyAvailabilityDuration
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
