// Code generated by go-swagger; DO NOT EDIT.

package courses

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/jakemakesstuff/blackboard-go/models"
)

// PostLearnAPIPublicV2CoursesCourseIDCopyReader is a Reader for the PostLearnAPIPublicV2CoursesCourseIDCopy structure.
type PostLearnAPIPublicV2CoursesCourseIDCopyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostLearnAPIPublicV2CoursesCourseIDCopyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPostLearnAPIPublicV2CoursesCourseIDCopyAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostLearnAPIPublicV2CoursesCourseIDCopyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostLearnAPIPublicV2CoursesCourseIDCopyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostLearnAPIPublicV2CoursesCourseIDCopyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostLearnAPIPublicV2CoursesCourseIDCopyConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostLearnAPIPublicV2CoursesCourseIDCopyAccepted creates a PostLearnAPIPublicV2CoursesCourseIDCopyAccepted with default headers values
func NewPostLearnAPIPublicV2CoursesCourseIDCopyAccepted() *PostLearnAPIPublicV2CoursesCourseIDCopyAccepted {
	return &PostLearnAPIPublicV2CoursesCourseIDCopyAccepted{}
}

/*PostLearnAPIPublicV2CoursesCourseIDCopyAccepted handles this case with default header values.

Accepted
*/
type PostLearnAPIPublicV2CoursesCourseIDCopyAccepted struct {
	/*A URI to query the status of the corresponding copy operation
	 */
	Location string
}

func (o *PostLearnAPIPublicV2CoursesCourseIDCopyAccepted) Error() string {
	return fmt.Sprintf("[POST /learn/api/public/v2/courses/{courseId}/copy][%d] postLearnApiPublicV2CoursesCourseIdCopyAccepted ", 202)
}

func (o *PostLearnAPIPublicV2CoursesCourseIDCopyAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	return nil
}

// NewPostLearnAPIPublicV2CoursesCourseIDCopyBadRequest creates a PostLearnAPIPublicV2CoursesCourseIDCopyBadRequest with default headers values
func NewPostLearnAPIPublicV2CoursesCourseIDCopyBadRequest() *PostLearnAPIPublicV2CoursesCourseIDCopyBadRequest {
	return &PostLearnAPIPublicV2CoursesCourseIDCopyBadRequest{}
}

/*PostLearnAPIPublicV2CoursesCourseIDCopyBadRequest handles this case with default header values.

Bad Request
*/
type PostLearnAPIPublicV2CoursesCourseIDCopyBadRequest struct {
	Payload *models.RestException
}

func (o *PostLearnAPIPublicV2CoursesCourseIDCopyBadRequest) Error() string {
	return fmt.Sprintf("[POST /learn/api/public/v2/courses/{courseId}/copy][%d] postLearnApiPublicV2CoursesCourseIdCopyBadRequest  %+v", 400, o.Payload)
}

func (o *PostLearnAPIPublicV2CoursesCourseIDCopyBadRequest) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PostLearnAPIPublicV2CoursesCourseIDCopyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearnAPIPublicV2CoursesCourseIDCopyForbidden creates a PostLearnAPIPublicV2CoursesCourseIDCopyForbidden with default headers values
func NewPostLearnAPIPublicV2CoursesCourseIDCopyForbidden() *PostLearnAPIPublicV2CoursesCourseIDCopyForbidden {
	return &PostLearnAPIPublicV2CoursesCourseIDCopyForbidden{}
}

/*PostLearnAPIPublicV2CoursesCourseIDCopyForbidden handles this case with default header values.

Forbidden
*/
type PostLearnAPIPublicV2CoursesCourseIDCopyForbidden struct {
	Payload *models.RestException
}

func (o *PostLearnAPIPublicV2CoursesCourseIDCopyForbidden) Error() string {
	return fmt.Sprintf("[POST /learn/api/public/v2/courses/{courseId}/copy][%d] postLearnApiPublicV2CoursesCourseIdCopyForbidden  %+v", 403, o.Payload)
}

func (o *PostLearnAPIPublicV2CoursesCourseIDCopyForbidden) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PostLearnAPIPublicV2CoursesCourseIDCopyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearnAPIPublicV2CoursesCourseIDCopyNotFound creates a PostLearnAPIPublicV2CoursesCourseIDCopyNotFound with default headers values
func NewPostLearnAPIPublicV2CoursesCourseIDCopyNotFound() *PostLearnAPIPublicV2CoursesCourseIDCopyNotFound {
	return &PostLearnAPIPublicV2CoursesCourseIDCopyNotFound{}
}

/*PostLearnAPIPublicV2CoursesCourseIDCopyNotFound handles this case with default header values.

Not Found
*/
type PostLearnAPIPublicV2CoursesCourseIDCopyNotFound struct {
	Payload *models.RestException
}

func (o *PostLearnAPIPublicV2CoursesCourseIDCopyNotFound) Error() string {
	return fmt.Sprintf("[POST /learn/api/public/v2/courses/{courseId}/copy][%d] postLearnApiPublicV2CoursesCourseIdCopyNotFound  %+v", 404, o.Payload)
}

func (o *PostLearnAPIPublicV2CoursesCourseIDCopyNotFound) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PostLearnAPIPublicV2CoursesCourseIDCopyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearnAPIPublicV2CoursesCourseIDCopyConflict creates a PostLearnAPIPublicV2CoursesCourseIDCopyConflict with default headers values
func NewPostLearnAPIPublicV2CoursesCourseIDCopyConflict() *PostLearnAPIPublicV2CoursesCourseIDCopyConflict {
	return &PostLearnAPIPublicV2CoursesCourseIDCopyConflict{}
}

/*PostLearnAPIPublicV2CoursesCourseIDCopyConflict handles this case with default header values.

Conflict
*/
type PostLearnAPIPublicV2CoursesCourseIDCopyConflict struct {
	Payload *models.RestException
}

func (o *PostLearnAPIPublicV2CoursesCourseIDCopyConflict) Error() string {
	return fmt.Sprintf("[POST /learn/api/public/v2/courses/{courseId}/copy][%d] postLearnApiPublicV2CoursesCourseIdCopyConflict  %+v", 409, o.Payload)
}

func (o *PostLearnAPIPublicV2CoursesCourseIDCopyConflict) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PostLearnAPIPublicV2CoursesCourseIDCopyConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostLearnAPIPublicV2CoursesCourseIDCopyBody post learn API public v2 courses course ID copy body
swagger:model PostLearnAPIPublicV2CoursesCourseIDCopyBody
*/
type PostLearnAPIPublicV2CoursesCourseIDCopyBody struct {

	// copy
	Copy *PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyCopy `json:"copy,omitempty"`

	// target course
	// Required: true
	TargetCourse *PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyTargetCourse `json:"targetCourse"`
}

// Validate validates this post learn API public v2 courses course ID copy body
func (o *PostLearnAPIPublicV2CoursesCourseIDCopyBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCopy(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTargetCourse(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostLearnAPIPublicV2CoursesCourseIDCopyBody) validateCopy(formats strfmt.Registry) error {

	if swag.IsZero(o.Copy) { // not required
		return nil
	}

	if o.Copy != nil {
		if err := o.Copy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("copyRequest" + "." + "copy")
			}
			return err
		}
	}

	return nil
}

func (o *PostLearnAPIPublicV2CoursesCourseIDCopyBody) validateTargetCourse(formats strfmt.Registry) error {

	if err := validate.Required("copyRequest"+"."+"targetCourse", "body", o.TargetCourse); err != nil {
		return err
	}

	if o.TargetCourse != nil {
		if err := o.TargetCourse.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("copyRequest" + "." + "targetCourse")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostLearnAPIPublicV2CoursesCourseIDCopyBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostLearnAPIPublicV2CoursesCourseIDCopyBody) UnmarshalBinary(b []byte) error {
	var res PostLearnAPIPublicV2CoursesCourseIDCopyBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyCopy CopyV2
//
// The options which will be used when copying the specified course
swagger:model PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyCopy
*/
type PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyCopy struct {

	// Represents whether or not the adaptive release rules will be copied.
	AdaptiveReleaseRules bool `json:"adaptiveReleaseRules,omitempty"`

	// Represents whether or not the announcements will be copied.
	Announcements bool `json:"announcements,omitempty"`

	// Represents whether or not the assessments will be copied.
	Assessments bool `json:"assessments,omitempty"`

	// Represents whether or not the blogs will be copied.
	Blogs bool `json:"blogs,omitempty"`

	// Represents whether or not the calendar will be copied.
	Calendar bool `json:"calendar,omitempty"`

	// Represents whether or not the contacts information will be copied.
	Contacts bool `json:"contacts,omitempty"`

	// Represents whether or not the content alignments will be copied.
	ContentAlignments bool `json:"contentAlignments,omitempty"`

	// Represents whether or not the content areas will be copied.
	ContentAreas bool `json:"contentAreas,omitempty"`

	// Represents whether and how to copy the discussion forum
	//
	//
	// | Type      | Description
	//  | --------- | --------- |
	// | None | Discussion board will not be copied |
	// | ForumsAndStarterPosts | Discussion board with Formus and starter posts will be copied |
	// | ForumsOnly | Discussion board with only forums will be copied |
	//
	// Enum: [None ForumsAndStarterPosts ForumsOnly]
	Discussions string `json:"discussions,omitempty"`

	// Represents whether or not the glossary will be copied.
	Glossary bool `json:"glossary,omitempty"`

	// Represents whether or not the grade book, columns and settings will be copied.
	Gradebook bool `json:"gradebook,omitempty"`

	// Represents whether or not the group settings will be copied.
	GroupSettings bool `json:"groupSettings,omitempty"`

	// Represents whether or not the journals will be copied.
	Journals bool `json:"journals,omitempty"`

	// Represents whether or not the retention rules will be copied.
	RetentionRules bool `json:"retentionRules,omitempty"`

	// Represents whether or not the rubrics will be copied.
	Rubrics bool `json:"rubrics,omitempty"`

	// settings
	Settings *PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyCopySettings `json:"settings,omitempty"`

	// Represents whether or not the tasks will be copied.
	Tasks bool `json:"tasks,omitempty"`

	// Represents whether or not the wikis will be copied.
	Wikis bool `json:"wikis,omitempty"`
}

// Validate validates this post learn API public v2 courses course ID copy params body copy
func (o *PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyCopy) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDiscussions(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSettings(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var postLearnApiPublicV2CoursesCourseIdCopyParamsBodyCopyTypeDiscussionsPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["None","ForumsAndStarterPosts","ForumsOnly"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		postLearnApiPublicV2CoursesCourseIdCopyParamsBodyCopyTypeDiscussionsPropEnum = append(postLearnApiPublicV2CoursesCourseIdCopyParamsBodyCopyTypeDiscussionsPropEnum, v)
	}
}

const (

	// PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyCopyDiscussionsNone captures enum value "None"
	PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyCopyDiscussionsNone string = "None"

	// PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyCopyDiscussionsForumsAndStarterPosts captures enum value "ForumsAndStarterPosts"
	PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyCopyDiscussionsForumsAndStarterPosts string = "ForumsAndStarterPosts"

	// PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyCopyDiscussionsForumsOnly captures enum value "ForumsOnly"
	PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyCopyDiscussionsForumsOnly string = "ForumsOnly"
)

// prop value enum
func (o *PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyCopy) validateDiscussionsEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, postLearnApiPublicV2CoursesCourseIdCopyParamsBodyCopyTypeDiscussionsPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyCopy) validateDiscussions(formats strfmt.Registry) error {

	if swag.IsZero(o.Discussions) { // not required
		return nil
	}

	// value enum
	if err := o.validateDiscussionsEnum("copyRequest"+"."+"copy"+"."+"discussions", "body", o.Discussions); err != nil {
		return err
	}

	return nil
}

func (o *PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyCopy) validateSettings(formats strfmt.Registry) error {

	if swag.IsZero(o.Settings) { // not required
		return nil
	}

	if o.Settings != nil {
		if err := o.Settings.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("copyRequest" + "." + "copy" + "." + "settings")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyCopy) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyCopy) UnmarshalBinary(b []byte) error {
	var res PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyCopy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyCopySettings SettingsCopyOptionsV2
//
// The course settings to be copied
swagger:model PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyCopySettings
*/
type PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyCopySettings struct {

	// Represents whether or not the Availability setting will be copied.
	Availability bool `json:"availability,omitempty"`

	// Represents whether or not the banner image will be copied.
	BannerImage bool `json:"bannerImage,omitempty"`

	// Represents whether or not the duration settings will be copied.
	Duration bool `json:"duration,omitempty"`

	// Represents whether or not the enrollment options will be copied.
	EnrollmentOptions bool `json:"enrollmentOptions,omitempty"`

	// Represents whether or not the guest access settings will be copied.
	GuestAccess bool `json:"guestAccess,omitempty"`

	// Represents whether or not the languange packs will be copied.
	LanguagePack bool `json:"languagePack,omitempty"`

	// Represents whether or not the navigation settings will be copied.
	NavigationSettings bool `json:"navigationSettings,omitempty"`

	// Represents whether or not the observer access settings will be copied.
	ObserverAccess bool `json:"observerAccess,omitempty"`
}

// Validate validates this post learn API public v2 courses course ID copy params body copy settings
func (o *PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyCopySettings) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyCopySettings) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyCopySettings) UnmarshalBinary(b []byte) error {
	var res PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyCopySettings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyTargetCourse TargetCourseV2
//
// The destination course to copy into. This can be either a new course, defined by the courseId field, or an existing course, defined by the id field.
swagger:model PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyTargetCourse
*/
type PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyTargetCourse struct {

	// The CourseId that will represent the new course.
	CourseID string `json:"courseId,omitempty"`

	// An identifier representing an existing course to be copied into.
	ID models.CourseIDParam `json:"id,omitempty"`
}

// Validate validates this post learn API public v2 courses course ID copy params body target course
func (o *PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyTargetCourse) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyTargetCourse) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyTargetCourse) UnmarshalBinary(b []byte) error {
	var res PostLearnAPIPublicV2CoursesCourseIDCopyParamsBodyTargetCourse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
