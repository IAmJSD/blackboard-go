// Code generated by go-swagger; DO NOT EDIT.

package courses

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jakemakesstuff/blackboard-go/models"
)

// GetLearnAPIPublicV3CoursesCourseIDReader is a Reader for the GetLearnAPIPublicV3CoursesCourseID structure.
type GetLearnAPIPublicV3CoursesCourseIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLearnAPIPublicV3CoursesCourseIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLearnAPIPublicV3CoursesCourseIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLearnAPIPublicV3CoursesCourseIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLearnAPIPublicV3CoursesCourseIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLearnAPIPublicV3CoursesCourseIDOK creates a GetLearnAPIPublicV3CoursesCourseIDOK with default headers values
func NewGetLearnAPIPublicV3CoursesCourseIDOK() *GetLearnAPIPublicV3CoursesCourseIDOK {
	return &GetLearnAPIPublicV3CoursesCourseIDOK{}
}

/*GetLearnAPIPublicV3CoursesCourseIDOK handles this case with default header values.

OK
*/
type GetLearnAPIPublicV3CoursesCourseIDOK struct {
	Payload *models.CourseV2
}

func (o *GetLearnAPIPublicV3CoursesCourseIDOK) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v3/courses/{courseId}][%d] getLearnApiPublicV3CoursesCourseIdOK  %+v", 200, o.Payload)
}

func (o *GetLearnAPIPublicV3CoursesCourseIDOK) GetPayload() *models.CourseV2 {
	return o.Payload
}

func (o *GetLearnAPIPublicV3CoursesCourseIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CourseV2)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearnAPIPublicV3CoursesCourseIDBadRequest creates a GetLearnAPIPublicV3CoursesCourseIDBadRequest with default headers values
func NewGetLearnAPIPublicV3CoursesCourseIDBadRequest() *GetLearnAPIPublicV3CoursesCourseIDBadRequest {
	return &GetLearnAPIPublicV3CoursesCourseIDBadRequest{}
}

/*GetLearnAPIPublicV3CoursesCourseIDBadRequest handles this case with default header values.

Failed to create course; or The request did not specify a valid courseId
*/
type GetLearnAPIPublicV3CoursesCourseIDBadRequest struct {
	Payload *models.RestException
}

func (o *GetLearnAPIPublicV3CoursesCourseIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v3/courses/{courseId}][%d] getLearnApiPublicV3CoursesCourseIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetLearnAPIPublicV3CoursesCourseIDBadRequest) GetPayload() *models.RestException {
	return o.Payload
}

func (o *GetLearnAPIPublicV3CoursesCourseIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearnAPIPublicV3CoursesCourseIDNotFound creates a GetLearnAPIPublicV3CoursesCourseIDNotFound with default headers values
func NewGetLearnAPIPublicV3CoursesCourseIDNotFound() *GetLearnAPIPublicV3CoursesCourseIDNotFound {
	return &GetLearnAPIPublicV3CoursesCourseIDNotFound{}
}

/*GetLearnAPIPublicV3CoursesCourseIDNotFound handles this case with default header values.

The course is not found or is unavailable and the user does not have the permission to view unavailable courses
*/
type GetLearnAPIPublicV3CoursesCourseIDNotFound struct {
	Payload *models.RestException
}

func (o *GetLearnAPIPublicV3CoursesCourseIDNotFound) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v3/courses/{courseId}][%d] getLearnApiPublicV3CoursesCourseIdNotFound  %+v", 404, o.Payload)
}

func (o *GetLearnAPIPublicV3CoursesCourseIDNotFound) GetPayload() *models.RestException {
	return o.Payload
}

func (o *GetLearnAPIPublicV3CoursesCourseIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
