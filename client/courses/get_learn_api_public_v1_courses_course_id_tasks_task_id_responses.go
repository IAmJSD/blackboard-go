// Code generated by go-swagger; DO NOT EDIT.

package courses

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jakemakesstuff/blackboard-go/models"
)

// GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDReader is a Reader for the GetLearnAPIPublicV1CoursesCourseIDTasksTaskID structure.
type GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLearnAPIPublicV1CoursesCourseIDTasksTaskIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 303:
		result := NewGetLearnAPIPublicV1CoursesCourseIDTasksTaskIDSeeOther()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetLearnAPIPublicV1CoursesCourseIDTasksTaskIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLearnAPIPublicV1CoursesCourseIDTasksTaskIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLearnAPIPublicV1CoursesCourseIDTasksTaskIDOK creates a GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDOK with default headers values
func NewGetLearnAPIPublicV1CoursesCourseIDTasksTaskIDOK() *GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDOK {
	return &GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDOK{}
}

/*GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDOK handles this case with default header values.

OK
*/
type GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDOK struct {
	Payload *models.CourseTask
}

func (o *GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDOK) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/courses/{courseId}/tasks/{taskId}][%d] getLearnApiPublicV1CoursesCourseIdTasksTaskIdOK  %+v", 200, o.Payload)
}

func (o *GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDOK) GetPayload() *models.CourseTask {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CourseTask)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearnAPIPublicV1CoursesCourseIDTasksTaskIDSeeOther creates a GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDSeeOther with default headers values
func NewGetLearnAPIPublicV1CoursesCourseIDTasksTaskIDSeeOther() *GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDSeeOther {
	return &GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDSeeOther{}
}

/*GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDSeeOther handles this case with default header values.

See Other
*/
type GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDSeeOther struct {
	/*A URI to the resulting entity generated by this task
	 */
	Location string

	Payload *models.CourseTask
}

func (o *GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDSeeOther) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/courses/{courseId}/tasks/{taskId}][%d] getLearnApiPublicV1CoursesCourseIdTasksTaskIdSeeOther  %+v", 303, o.Payload)
}

func (o *GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDSeeOther) GetPayload() *models.CourseTask {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDSeeOther) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	o.Payload = new(models.CourseTask)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearnAPIPublicV1CoursesCourseIDTasksTaskIDBadRequest creates a GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDBadRequest with default headers values
func NewGetLearnAPIPublicV1CoursesCourseIDTasksTaskIDBadRequest() *GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDBadRequest {
	return &GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDBadRequest{}
}

/*GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDBadRequest handles this case with default header values.

Invalid task type
*/
type GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDBadRequest struct {
	Payload *models.RestException
}

func (o *GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/courses/{courseId}/tasks/{taskId}][%d] getLearnApiPublicV1CoursesCourseIdTasksTaskIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDBadRequest) GetPayload() *models.RestException {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearnAPIPublicV1CoursesCourseIDTasksTaskIDNotFound creates a GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDNotFound with default headers values
func NewGetLearnAPIPublicV1CoursesCourseIDTasksTaskIDNotFound() *GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDNotFound {
	return &GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDNotFound{}
}

/*GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDNotFound handles this case with default header values.

Task not found for this course
*/
type GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDNotFound struct {
	Payload *models.RestException
}

func (o *GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDNotFound) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/courses/{courseId}/tasks/{taskId}][%d] getLearnApiPublicV1CoursesCourseIdTasksTaskIdNotFound  %+v", 404, o.Payload)
}

func (o *GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDNotFound) GetPayload() *models.RestException {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CoursesCourseIDTasksTaskIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
