// Code generated by go-swagger; DO NOT EDIT.

package course_grades

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams creates a new GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams object
// with the default values initialized.
func NewGetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams() *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams {
	var ()
	return &GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParamsWithTimeout creates a new GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParamsWithTimeout(timeout time.Duration) *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams {
	var ()
	return &GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams{

		timeout: timeout,
	}
}

// NewGetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParamsWithContext creates a new GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParamsWithContext(ctx context.Context) *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams {
	var ()
	return &GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams{

		Context: ctx,
	}
}

// NewGetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParamsWithHTTPClient creates a new GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParamsWithHTTPClient(client *http.Client) *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams {
	var ()
	return &GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams{
		HTTPClient: client,
	}
}

/*GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams contains all the parameters to send to the API endpoint
for the get learn API public v2 courses course ID gradebook columns column ID attempts operation typically these are written to a http.Request
*/
type GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams struct {

	/*AttemptDate
	  Search for attempts with attempt date relative to this value. 'attemptDateCompare' may also be sent to control search behavior.

	**Since**: 3800.0.0

	*/
	AttemptDate *strfmt.DateTime
	/*AttemptDateCompare
	  Used alongside the 'attemptDate' search parameter. Defaults to greaterOrEqual if not specified.

	**Since**: 3800.0.0


	| Type      | Description
	 | --------- | --------- |
	| lessThan |  |
	| greaterOrEqual |  |


	*/
	AttemptDateCompare *string
	/*AttemptStatuses
	  Search for grade column attempts with one of these statuses.

	**Since**: 3100.4.0


	| Type      | Description
	 | --------- | --------- |
	| NotAttempted | none of the students in a group has submitted an attempt; applies only to group assessments |
	| Abandoned |   **Deprecated**: Since 9.1 SP8 unsupported status, undetermined behavior if used. |
	| InProgress | attempt activity has commenced, but has not been submitted for grading |
	| Suspended |   **Deprecated**: Since 9.1 SP8 unsupported status, undetermined behavior if used. |
	| Canceled |   **Deprecated**: Since 9.1 SP8 unsupported status, undetermined behavior if used. |
	| NeedsGrading | attempt has been submitted for grading, but has not been fully graded |
	| Completed | a grade has been entered for the attempt |
	| InProgressAgain | attempt has been graded, but more student activity occurred after the grade was entered; applies only to collaborative tools such as discussions |
	| NeedsGradingAgain | additional student activity occurring after a grade was entered requires that the attempt be regraded; applies only to collaborative tools such as discussions |


	*/
	AttemptStatuses *string
	/*ColumnID
	 The grade column ID.  This may be the primary ID, or any of the secondary IDs prefixed with the ID type.  The ID may also be the keyword 'finalGrade', which indicates that the course's final grade column is specified.

	| ID type    | Example                               |
	|------------|---------------------------------------|
	| primary    | _123_1                                |
	| externalId | externalId:column1                    |
	| finalGrade | finalGrade                            |


	*/
	ColumnID string
	/*CourseID
	 The course or organization ID.  This may be the primary ID, or any of the secondary IDs prefixed with the ID type.

	| ID type    | Example                               |
	|------------|---------------------------------------|
	| primary    | _123_1                                |
	| externalId | externalId:math101                    |
	| courseId   | courseId:math101                      |
	| uuid       | uuid:915c7567d76d444abf1eed56aad3beb5 |


	*/
	CourseID string
	/*Created
	  Search for attempts with created date relative to this value. 'createdCompare' may also be sent to control search behavior.

	**Since**: 3800.0.0

	*/
	Created *strfmt.DateTime
	/*CreatedCompare
	  Used alongside the 'created' search parameter. Defaults to greaterOrEqual if not specified.

	**Since**: 3800.0.0


	| Type      | Description
	 | --------- | --------- |
	| lessThan |  |
	| greaterOrEqual |  |


	*/
	CreatedCompare *string
	/*Fields
	  A comma-delimited list of fields to include in the response. If not specified, all fields will be returned.

	*/
	Fields *string
	/*Limit
	  The maximum number of results to be returned. There may be less if the query returned less than the maximum.

	*/
	Limit *int32
	/*Modified
	  Search for attempts with modified date relative to this value. 'modifiedCompare' may also be sent to control search behavior.

	**Since**: 3800.0.0

	*/
	Modified *strfmt.DateTime
	/*ModifiedCompare
	  Used alongside the 'modified' search parameter. Defaults to greaterOrEqual if not specified.

	**Since**: 3800.0.0


	| Type      | Description
	 | --------- | --------- |
	| lessThan |  |
	| greaterOrEqual |  |


	*/
	ModifiedCompare *string
	/*Offset
	  The number of rows to skip before beginning to return rows. An offset of 0 is the same as omitting the offset parameter.

	*/
	Offset *int32
	/*UserID
	  Search for grade column attempts submitted by this user. This may be the primary ID, or any of the secondary IDs prefixed with the ID type.

	 | ID type    | Example                               |
	 |------------|---------------------------------------|
	 | primary    | _123_1                                |
	 | externalId | externalId:jsmith                     |
	 | userName   | userName:jsmith                       |
	 | uuid       | uuid:915c7567d76d444abf1eed56aad3beb5 |


	**Since**: 3100.4.0

	*/
	UserID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) WithTimeout(timeout time.Duration) *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) WithContext(ctx context.Context) *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) WithHTTPClient(client *http.Client) *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAttemptDate adds the attemptDate to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) WithAttemptDate(attemptDate *strfmt.DateTime) *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams {
	o.SetAttemptDate(attemptDate)
	return o
}

// SetAttemptDate adds the attemptDate to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) SetAttemptDate(attemptDate *strfmt.DateTime) {
	o.AttemptDate = attemptDate
}

// WithAttemptDateCompare adds the attemptDateCompare to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) WithAttemptDateCompare(attemptDateCompare *string) *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams {
	o.SetAttemptDateCompare(attemptDateCompare)
	return o
}

// SetAttemptDateCompare adds the attemptDateCompare to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) SetAttemptDateCompare(attemptDateCompare *string) {
	o.AttemptDateCompare = attemptDateCompare
}

// WithAttemptStatuses adds the attemptStatuses to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) WithAttemptStatuses(attemptStatuses *string) *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams {
	o.SetAttemptStatuses(attemptStatuses)
	return o
}

// SetAttemptStatuses adds the attemptStatuses to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) SetAttemptStatuses(attemptStatuses *string) {
	o.AttemptStatuses = attemptStatuses
}

// WithColumnID adds the columnID to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) WithColumnID(columnID string) *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams {
	o.SetColumnID(columnID)
	return o
}

// SetColumnID adds the columnId to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) SetColumnID(columnID string) {
	o.ColumnID = columnID
}

// WithCourseID adds the courseID to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) WithCourseID(courseID string) *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams {
	o.SetCourseID(courseID)
	return o
}

// SetCourseID adds the courseId to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) SetCourseID(courseID string) {
	o.CourseID = courseID
}

// WithCreated adds the created to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) WithCreated(created *strfmt.DateTime) *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams {
	o.SetCreated(created)
	return o
}

// SetCreated adds the created to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) SetCreated(created *strfmt.DateTime) {
	o.Created = created
}

// WithCreatedCompare adds the createdCompare to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) WithCreatedCompare(createdCompare *string) *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams {
	o.SetCreatedCompare(createdCompare)
	return o
}

// SetCreatedCompare adds the createdCompare to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) SetCreatedCompare(createdCompare *string) {
	o.CreatedCompare = createdCompare
}

// WithFields adds the fields to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) WithFields(fields *string) *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) SetFields(fields *string) {
	o.Fields = fields
}

// WithLimit adds the limit to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) WithLimit(limit *int32) *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) SetLimit(limit *int32) {
	o.Limit = limit
}

// WithModified adds the modified to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) WithModified(modified *strfmt.DateTime) *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams {
	o.SetModified(modified)
	return o
}

// SetModified adds the modified to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) SetModified(modified *strfmt.DateTime) {
	o.Modified = modified
}

// WithModifiedCompare adds the modifiedCompare to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) WithModifiedCompare(modifiedCompare *string) *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams {
	o.SetModifiedCompare(modifiedCompare)
	return o
}

// SetModifiedCompare adds the modifiedCompare to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) SetModifiedCompare(modifiedCompare *string) {
	o.ModifiedCompare = modifiedCompare
}

// WithOffset adds the offset to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) WithOffset(offset *int32) *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) SetOffset(offset *int32) {
	o.Offset = offset
}

// WithUserID adds the userID to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) WithUserID(userID *string) *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams {
	o.SetUserID(userID)
	return o
}

// SetUserID adds the userId to the get learn API public v2 courses course ID gradebook columns column ID attempts params
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) SetUserID(userID *string) {
	o.UserID = userID
}

// WriteToRequest writes these params to a swagger request
func (o *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AttemptDate != nil {

		// query param attemptDate
		var qrAttemptDate strfmt.DateTime
		if o.AttemptDate != nil {
			qrAttemptDate = *o.AttemptDate
		}
		qAttemptDate := qrAttemptDate.String()
		if qAttemptDate != "" {
			if err := r.SetQueryParam("attemptDate", qAttemptDate); err != nil {
				return err
			}
		}

	}

	if o.AttemptDateCompare != nil {

		// query param attemptDateCompare
		var qrAttemptDateCompare string
		if o.AttemptDateCompare != nil {
			qrAttemptDateCompare = *o.AttemptDateCompare
		}
		qAttemptDateCompare := qrAttemptDateCompare
		if qAttemptDateCompare != "" {
			if err := r.SetQueryParam("attemptDateCompare", qAttemptDateCompare); err != nil {
				return err
			}
		}

	}

	if o.AttemptStatuses != nil {

		// query param attemptStatuses
		var qrAttemptStatuses string
		if o.AttemptStatuses != nil {
			qrAttemptStatuses = *o.AttemptStatuses
		}
		qAttemptStatuses := qrAttemptStatuses
		if qAttemptStatuses != "" {
			if err := r.SetQueryParam("attemptStatuses", qAttemptStatuses); err != nil {
				return err
			}
		}

	}

	// path param columnId
	if err := r.SetPathParam("columnId", o.ColumnID); err != nil {
		return err
	}

	// path param courseId
	if err := r.SetPathParam("courseId", o.CourseID); err != nil {
		return err
	}

	if o.Created != nil {

		// query param created
		var qrCreated strfmt.DateTime
		if o.Created != nil {
			qrCreated = *o.Created
		}
		qCreated := qrCreated.String()
		if qCreated != "" {
			if err := r.SetQueryParam("created", qCreated); err != nil {
				return err
			}
		}

	}

	if o.CreatedCompare != nil {

		// query param createdCompare
		var qrCreatedCompare string
		if o.CreatedCompare != nil {
			qrCreatedCompare = *o.CreatedCompare
		}
		qCreatedCompare := qrCreatedCompare
		if qCreatedCompare != "" {
			if err := r.SetQueryParam("createdCompare", qCreatedCompare); err != nil {
				return err
			}
		}

	}

	if o.Fields != nil {

		// query param fields
		var qrFields string
		if o.Fields != nil {
			qrFields = *o.Fields
		}
		qFields := qrFields
		if qFields != "" {
			if err := r.SetQueryParam("fields", qFields); err != nil {
				return err
			}
		}

	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int32
		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt32(qrLimit)
		if qLimit != "" {
			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}

	}

	if o.Modified != nil {

		// query param modified
		var qrModified strfmt.DateTime
		if o.Modified != nil {
			qrModified = *o.Modified
		}
		qModified := qrModified.String()
		if qModified != "" {
			if err := r.SetQueryParam("modified", qModified); err != nil {
				return err
			}
		}

	}

	if o.ModifiedCompare != nil {

		// query param modifiedCompare
		var qrModifiedCompare string
		if o.ModifiedCompare != nil {
			qrModifiedCompare = *o.ModifiedCompare
		}
		qModifiedCompare := qrModifiedCompare
		if qModifiedCompare != "" {
			if err := r.SetQueryParam("modifiedCompare", qModifiedCompare); err != nil {
				return err
			}
		}

	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int32
		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt32(qrOffset)
		if qOffset != "" {
			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}

	}

	if o.UserID != nil {

		// query param userId
		var qrUserID string
		if o.UserID != nil {
			qrUserID = *o.UserID
		}
		qUserID := qrUserID
		if qUserID != "" {
			if err := r.SetQueryParam("userId", qUserID); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
