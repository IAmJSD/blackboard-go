// Code generated by go-swagger; DO NOT EDIT.

package course_grades

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/jakemakesstuff/blackboard-go/models"
)

// PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDReader is a Reader for the PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptID structure.
type PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDOK creates a PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDOK with default headers values
func NewPatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDOK() *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDOK {
	return &PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDOK{}
}

/*PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDOK handles this case with default header values.

OK
*/
type PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDOK struct {
	Payload *models.AttemptV2
}

func (o *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDOK) Error() string {
	return fmt.Sprintf("[PATCH /learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}/attempts/{attemptId}][%d] patchLearnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsAttemptIdOK  %+v", 200, o.Payload)
}

func (o *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDOK) GetPayload() *models.AttemptV2 {
	return o.Payload
}

func (o *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AttemptV2)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBadRequest creates a PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBadRequest with default headers values
func NewPatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBadRequest() *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBadRequest {
	return &PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBadRequest{}
}

/*PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBadRequest handles this case with default header values.

Bad Request
*/
type PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBadRequest struct {
	Payload *models.RestException
}

func (o *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}/attempts/{attemptId}][%d] patchLearnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsAttemptIdBadRequest  %+v", 400, o.Payload)
}

func (o *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBadRequest) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDForbidden creates a PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDForbidden with default headers values
func NewPatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDForbidden() *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDForbidden {
	return &PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDForbidden{}
}

/*PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDForbidden handles this case with default header values.

Forbidden
*/
type PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDForbidden struct {
	Payload *models.RestException
}

func (o *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDForbidden) Error() string {
	return fmt.Sprintf("[PATCH /learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}/attempts/{attemptId}][%d] patchLearnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsAttemptIdForbidden  %+v", 403, o.Payload)
}

func (o *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDForbidden) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDNotFound creates a PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDNotFound with default headers values
func NewPatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDNotFound() *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDNotFound {
	return &PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDNotFound{}
}

/*PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDNotFound handles this case with default header values.

Not Found
*/
type PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDNotFound struct {
	Payload *models.RestException
}

func (o *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}/attempts/{attemptId}][%d] patchLearnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsAttemptIdNotFound  %+v", 404, o.Payload)
}

func (o *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDNotFound) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBody patch learn API public v2 courses course ID gradebook columns column ID attempts attempt ID body
swagger:model PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBody
*/
type PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBody struct {

	// Whether the score associated with this attempt is ignored when computing the user's grade for the associated grade column.
	Exempt bool `json:"exempt,omitempty"`

	// The instructor feedback associated with this attempt.
	Feedback string `json:"feedback,omitempty"`

	// The instructor notes associated with this attempt.
	Notes string `json:"notes,omitempty"`

	// The reconciliation mode to use when reconciling the attempt grade.  When modifying reconciliationMode, score is also required.  A new score will not be calculated based on the reconciliationMode
	//
	// **Since**: 3700.2.0
	//
	//
	// | Type      | Description
	//  | --------- | --------- |
	// | Average |  |
	// | Highest |  |
	// | Lowest |  |
	// | Custom |  |
	//
	// Enum: [Average Highest Lowest Custom]
	ReconciliationMode string `json:"reconciliationMode,omitempty"`

	// The score associated with this attempt.
	Score float64 `json:"score,omitempty"`

	// The status of this attempt.
	//
	//
	// | Type      | Description
	//  | --------- | --------- |
	// | NotAttempted | none of the students in a group has submitted an attempt; applies only to group assessments |
	// | Abandoned |   **Deprecated**: Since 9.1 SP8 unsupported status, undetermined behavior if used. |
	// | InProgress | attempt activity has commenced, but has not been submitted for grading |
	// | Suspended |   **Deprecated**: Since 9.1 SP8 unsupported status, undetermined behavior if used. |
	// | Canceled |   **Deprecated**: Since 9.1 SP8 unsupported status, undetermined behavior if used. |
	// | NeedsGrading | attempt has been submitted for grading, but has not been fully graded |
	// | Completed | a grade has been entered for the attempt |
	// | InProgressAgain | attempt has been graded, but more student activity occurred after the grade was entered; applies only to collaborative tools such as discussions |
	// | NeedsGradingAgain | additional student activity occurring after a grade was entered requires that the attempt be regraded; applies only to collaborative tools such as discussions |
	//
	// Enum: [NotAttempted Abandoned InProgress Suspended Canceled NeedsGrading Completed InProgressAgain NeedsGradingAgain]
	Status string `json:"status,omitempty"`

	// The student comments associated with this attempt.
	StudentComments string `json:"studentComments,omitempty"`

	// The student submission text associated with this attempt.
	StudentSubmission string `json:"studentSubmission,omitempty"`

	// The text grade associated with this attempt.
	Text string `json:"text,omitempty"`
}

// Validate validates this patch learn API public v2 courses course ID gradebook columns column ID attempts attempt ID body
func (o *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateReconciliationMode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var patchLearnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsAttemptIdBodyTypeReconciliationModePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Average","Highest","Lowest","Custom"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		patchLearnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsAttemptIdBodyTypeReconciliationModePropEnum = append(patchLearnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsAttemptIdBodyTypeReconciliationModePropEnum, v)
	}
}

const (

	// PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBodyReconciliationModeAverage captures enum value "Average"
	PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBodyReconciliationModeAverage string = "Average"

	// PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBodyReconciliationModeHighest captures enum value "Highest"
	PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBodyReconciliationModeHighest string = "Highest"

	// PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBodyReconciliationModeLowest captures enum value "Lowest"
	PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBodyReconciliationModeLowest string = "Lowest"

	// PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBodyReconciliationModeCustom captures enum value "Custom"
	PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBodyReconciliationModeCustom string = "Custom"
)

// prop value enum
func (o *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBody) validateReconciliationModeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, patchLearnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsAttemptIdBodyTypeReconciliationModePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBody) validateReconciliationMode(formats strfmt.Registry) error {

	if swag.IsZero(o.ReconciliationMode) { // not required
		return nil
	}

	// value enum
	if err := o.validateReconciliationModeEnum("attemptInput"+"."+"reconciliationMode", "body", o.ReconciliationMode); err != nil {
		return err
	}

	return nil
}

var patchLearnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsAttemptIdBodyTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["NotAttempted","Abandoned","InProgress","Suspended","Canceled","NeedsGrading","Completed","InProgressAgain","NeedsGradingAgain"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		patchLearnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsAttemptIdBodyTypeStatusPropEnum = append(patchLearnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsAttemptIdBodyTypeStatusPropEnum, v)
	}
}

const (

	// PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBodyStatusNotAttempted captures enum value "NotAttempted"
	PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBodyStatusNotAttempted string = "NotAttempted"

	// PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBodyStatusAbandoned captures enum value "Abandoned"
	PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBodyStatusAbandoned string = "Abandoned"

	// PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBodyStatusInProgress captures enum value "InProgress"
	PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBodyStatusInProgress string = "InProgress"

	// PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBodyStatusSuspended captures enum value "Suspended"
	PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBodyStatusSuspended string = "Suspended"

	// PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBodyStatusCanceled captures enum value "Canceled"
	PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBodyStatusCanceled string = "Canceled"

	// PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBodyStatusNeedsGrading captures enum value "NeedsGrading"
	PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBodyStatusNeedsGrading string = "NeedsGrading"

	// PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBodyStatusCompleted captures enum value "Completed"
	PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBodyStatusCompleted string = "Completed"

	// PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBodyStatusInProgressAgain captures enum value "InProgressAgain"
	PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBodyStatusInProgressAgain string = "InProgressAgain"

	// PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBodyStatusNeedsGradingAgain captures enum value "NeedsGradingAgain"
	PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBodyStatusNeedsGradingAgain string = "NeedsGradingAgain"
)

// prop value enum
func (o *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBody) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, patchLearnApiPublicV2CoursesCourseIdGradebookColumnsColumnIdAttemptsAttemptIdBodyTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBody) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(o.Status) { // not required
		return nil
	}

	// value enum
	if err := o.validateStatusEnum("attemptInput"+"."+"status", "body", o.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBody) UnmarshalBinary(b []byte) error {
	var res PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
