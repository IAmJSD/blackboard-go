// Code generated by go-swagger; DO NOT EDIT.

package course_grades

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new course grades API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for course grades API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaID(params *DeleteLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaIDOK, error)

	DeleteLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnID(params *DeleteLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDOK, error)

	GetLearnAPIPublicV1CoursesCourseIDGradebookSchemas(params *GetLearnAPIPublicV1CoursesCourseIDGradebookSchemasParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookSchemasOK, error)

	GetLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaID(params *GetLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaIDOK, error)

	GetLearnAPIPublicV2CoursesCourseIDGradebookColumns(params *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsOK, error)

	GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnID(params *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDOK, error)

	GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttempts(params *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsOK, error)

	GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptID(params *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDOK, error)

	GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsers(params *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersOK, error)

	GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersLastChanged(params *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersLastChangedParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersLastChangedOK, *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersLastChangedNoContent, error)

	GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersUserID(params *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersUserIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersUserIDOK, error)

	GetLearnAPIPublicV2CoursesCourseIDGradebookUsersUserID(params *GetLearnAPIPublicV2CoursesCourseIDGradebookUsersUserIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV2CoursesCourseIDGradebookUsersUserIDOK, error)

	PatchLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaID(params *PatchLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaIDParams, authInfo runtime.ClientAuthInfoWriter) (*PatchLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaIDOK, error)

	PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnID(params *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDParams, authInfo runtime.ClientAuthInfoWriter) (*PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDOK, error)

	PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptID(params *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDParams, authInfo runtime.ClientAuthInfoWriter) (*PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDOK, error)

	PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersUserID(params *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersUserIDParams, authInfo runtime.ClientAuthInfoWriter) (*PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersUserIDOK, error)

	PostLearnAPIPublicV1CoursesCourseIDGradebookSchemas(params *PostLearnAPIPublicV1CoursesCourseIDGradebookSchemasParams, authInfo runtime.ClientAuthInfoWriter) (*PostLearnAPIPublicV1CoursesCourseIDGradebookSchemasCreated, error)

	PostLearnAPIPublicV2CoursesCourseIDGradebookColumns(params *PostLearnAPIPublicV2CoursesCourseIDGradebookColumnsParams, authInfo runtime.ClientAuthInfoWriter) (*PostLearnAPIPublicV2CoursesCourseIDGradebookColumnsCreated, error)

	PostLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttempts(params *PostLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams, authInfo runtime.ClientAuthInfoWriter) (*PostLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsCreated, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaID deletes grade schema

  Deletes the grade schema associated with the specified course and schema Id.

Requires entitlement 'course.gradebook.MODIFY'

Grade schemas in Ultra courses may not be deleted

A schema must be removable (not in-use, and either tabular or user-created) to be deleted

**Since**: 3300.2.0
*/
func (a *Client) DeleteLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaID(params *DeleteLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaID",
		Method:             "DELETE",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/gradebook/schemas/{schemaId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnID deletes grade column

  Delete a specific grade column. The entitlement "course.gradebook.MODIFY" is needed.

**Since**: 3200.10.0
*/
func (a *Client) DeleteLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnID(params *DeleteLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnID",
		Method:             "DELETE",
		PathPattern:        "/learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV1CoursesCourseIDGradebookSchemas gets grade schemas

  Returns a list of grade schemas associated with the specified course.

Users with entitlements 'course.gradebook.MODIFY' or 'course.user.grades.VIEW', or users enrolled in the specified course can retrieve grade schema details.

A subset of the schema properties are available to enrolled users without the 'course.gradebook.MODIFY' entitlement:

- id
- scaleType

**Since**: 3300.2.0
*/
func (a *Client) GetLearnAPIPublicV1CoursesCourseIDGradebookSchemas(params *GetLearnAPIPublicV1CoursesCourseIDGradebookSchemasParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookSchemasOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1CoursesCourseIDGradebookSchemasParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1CoursesCourseIDGradebookSchemas",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/gradebook/schemas",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1CoursesCourseIDGradebookSchemasReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1CoursesCourseIDGradebookSchemasOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1CoursesCourseIDGradebookSchemas: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaID gets grade schema

  Loads the grade schema associated with the specified course and schema Id.

Users with entitlements 'course.gradebook.MODIFY' or 'course.user.grades.VIEW', or users enrolled in the specified course can retrieve the grade schema details.

A subset of the schema properties are available to enrolled users without the 'course.gradebook.MODIFY' entitlement:

- id
- scaleType

**Since**: 3300.2.0
*/
func (a *Client) GetLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaID(params *GetLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaID",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/gradebook/schemas/{schemaId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV2CoursesCourseIDGradebookColumns gets grade columns

  Returns a list of grade columns.

The entitlement "course.gradebook.MODIFY" is needed. Alternatively, student users may view the grade columns if they are enrolled in the course, and the mygrade tool is available in the course, and the columns are visible to the student. Observers may view grade columns if course access is allowed for observers and the associated observee is a student that satisfies all conditions required by a student user to view grade columns.

Student or observer users may view a limited subset of grade column fields:

- id
- name
- displayName
- description
- externalGrade
- contentId
- score.possible
- grading.type
- grading.due
- grading.attemptsAllowed
- grading.scoringModel

**Since**: 3200.10.0
*/
func (a *Client) GetLearnAPIPublicV2CoursesCourseIDGradebookColumns(params *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV2CoursesCourseIDGradebookColumnsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV2CoursesCourseIDGradebookColumns",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v2/courses/{courseId}/gradebook/columns",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV2CoursesCourseIDGradebookColumns: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnID gets grade column

  Loads a specific grade column.

The entitlement "course.gradebook.MODIFY" is needed. Alternatively, student users may view the grade column if they are enrolled in the course, and the mygrade tool is available in the course, and the column is visible to the student. Observers may view the grade column if course access is allowed for observers and the associated observee is a student that satisfies all conditions required by a student user to view grade columns.

Student or observer users may view a limited subset of grade column fields:

- id
- name
- description
- externalGrade
- contentId
- score.possible
- grading.type
- grading.due
- grading.attemptsAllowed
- grading.scoringModel

**Since**: 3200.10.0
*/
func (a *Client) GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnID(params *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnID",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttempts gets column attempts

  Returns a list of attempts associated with the specified grade column.

The 'course.gradebook.MODIFY' entitlement is needed to view column attempts. Alternatively, if the 'userId' query parameter is specified, and the user making the request matches the specified 'userId', then the user may view his/her own attempt.  When querying an anonymous grade column, if the release criteria has not yet been met, then the 'userId' attribute will not be populated for the returned column attempts.  If the release criteria has not been met and the 'userId' query parameter is specified, a 403 response is returned, unless the requesting user matches the specified 'userId' value.

A subset of attempt properties are available to a student when requesting his or her own attempts:

- id
- userId
- groupAttemptId
- status
- displayGrade.scaleType
- displayGrade.score
- displayGrade.text
- groupOverride
- feedback
- studentComments
- studentSubmission
- exempt
- created

When this endpoint is called by the API Gateway User, the response will only contain attributes visible to a Grader. If an Attempt is InProgress, then a Student's submission & comments would not be visible to the API Gateway User. If an Attempt is NeedsGrading, then a Student's submission & comments are visible to the API Gateway User. </p> If the caller has the course.assessment.EXECUTE entitlement, and the attempt is associated with an assessment where the flag to require secure taking is enabled, and the attempt status is InProgress, then the studentSubmission is omitted unless the call comes from a secure browser.

If the caller has the course.assessment.EXECUTE entitlement, and the attempt is associated with an assessment where the flag to require secure reviewing is enabled, and the attempt status is not InProgress, then the studentSubmission is omitted unless the call comes from a secure browser.

**Since**: 3300.0.0
*/
func (a *Client) GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttempts(params *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttempts",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}/attempts",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttempts: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptID gets column attempt

  Loads the grade column attempt for the specified id.

The 'course.gradebook.MODIFY' entitlement is needed to view an attempt. Alternatively, if the user making the request is also the user associated with the attempt grade, then the user may view his/her own attempt.  When accessing an anonymous grade column attempt, if the release criteria has not yet been met, then the 'userId' attribute will not be populated for the returned attempt.

A subset of attempt properties are available to a student when requesting his or her own attempt:

- id
- userId
- groupAttemptId
- status
- displayGrade.scaleType
- displayGrade.score
- displayGrade.text
- groupOverride
- feedback
- studentComments
- studentSubmission
- exempt
- created

When this endpoint is called by the API Gateway User, the response will only contain attributes visible to a Grader. If an Attempt is InProgress, then a Student's submission & comments would not be visible to the API Gateway User. If an Attempt is NeedsGrading, then a Student's submission & comments are visible to the API Gateway User. </p> If the caller has the course.assessment.EXECUTE entitlement, and the attempt is associated with an assessment where the flag to require secure taking is enabled, and the attempt status is InProgress, then the studentSubmission is omitted unless the call comes from a secure browser.

If the caller has the course.assessment.EXECUTE entitlement, and the attempt is associated with an assessment where the flag to require secure reviewing is enabled, and the attempt status is not InProgress, then the studentSubmission is omitted unless the call comes from a secure browser.

**Since**: 3300.0.0
*/
func (a *Client) GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptID(params *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptID",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}/attempts/{attemptId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsers gets column grades

  Returns a list of grades associated with the specified grade column.  By default this operation does not include 'ReadyToPost' grades when returning grade details for calculated grade columns. This can be changed by setting the query parameter "includeUnpostedGrades" to true. The columns considered as 'ReadyToPost' are those which have a grade associated but have the status NEEDS_GRADING.

Users with entitlement 'course.gradebook.MODIFY' can retrieve grades for any or all enrolled users. Requests for grades in a columns whose attempts are not visible to instructors will return with a status of "403 - Forbidden."

Enrolled users without the 'course.gradebook.MODIFY' entitlement may only view their own grade; such users cannot retrieve grades of other users.  A request for the grade in a columns that has been hidden from students in the gradebook will return with a status "403 - Forbidden.".  A subset of grade properties are available to a student when requesting his or her own grades:

- userId
- columnId
- status
- displayGrade
- exempt
- feedback
- changeIndex

**Since**: 3300.0.0
*/
func (a *Client) GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsers(params *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsers",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}/users",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsers: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersLastChanged gets column grade last changed

  Loads the grade column grade with the maximum change index. This change index can be used to determine the relative order in which the grades were created and/or updated. This operation does not include 'ReadyToPost' grades when determining the maximum change index grade.

Users with entitlement 'course.gradebook.MODIFY' can retrieve grades for any or all enrolled users. Requests for grades in a columns whose attempts are not visible to instructors will return with a status of "403 - Forbidden."

Enrolled users without the 'course.gradebook.MODIFY' entitlement may only view their own grade; such users cannot retrieve grades of other users. A request for the grade in a columns that has been hidden from students in the gradebook will return with a status "403 - Forbidden.".

**Since**: 3300.4.0
*/
func (a *Client) GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersLastChanged(params *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersLastChangedParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersLastChangedOK, *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersLastChangedNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersLastChangedParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersLastChanged",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}/users/lastChanged",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersLastChangedReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersLastChangedOK:
		return value, nil, nil
	case *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersLastChangedNoContent:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for course_grades: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersUserID gets column grade

  Loads the grade column grade for a specific user.  If grade details have yet to be entered for the specified user, then no grade details will be included in the returned grade object.  This operation does not include 'ReadyToPost' grades when returning grade details for calculated grade columns.

Users with entitlement 'course.gradebook.MODIFY' can retrieve grades for any or all enrolled users. Requests for grades in a columns whose attempts are not visible to instructors will return with a status of "403 - Forbidden."

Enrolled users without the 'course.gradebook.MODIFY' entitlement may only view their own grade; such users cannot retrieve grades of other users.  A request for the grade in a columns that has been hidden from students in the gradebook will return with a status "403 - Forbidden.".  A subset of grade properties are available to a student when requesting his or her own grades:

- userId
- columnId
- status
- displayGrade
- exempt
- feedback
- changeIndex

**Since**: 3300.0.0
*/
func (a *Client) GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersUserID(params *GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersUserIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersUserIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersUserIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersUserID",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}/users/{userId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersUserIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersUserIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersUserID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV2CoursesCourseIDGradebookUsersUserID gets user grades

  Loads the course grades for a specific user.

Users with entitlement "course.gradebook.MODIFY" have read access to all the properties of the collection results.

Users without entitlement "course.gradebook.MODIFY" requesting grades for themselves (i.e., userId = current user id) have read access to a restricted subset of properties of the collections result. These are the properties available to a student when requesting his or her own grades:

- userId
- columnId
- status
- text
- score
- exempt
- feedback

**Since**: 3300.0.0
*/
func (a *Client) GetLearnAPIPublicV2CoursesCourseIDGradebookUsersUserID(params *GetLearnAPIPublicV2CoursesCourseIDGradebookUsersUserIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV2CoursesCourseIDGradebookUsersUserIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV2CoursesCourseIDGradebookUsersUserIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV2CoursesCourseIDGradebookUsersUserID",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v2/courses/{courseId}/gradebook/users/{userId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV2CoursesCourseIDGradebookUsersUserIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV2CoursesCourseIDGradebookUsersUserIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV2CoursesCourseIDGradebookUsersUserID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaID updates grade schema



Updates the grade schema associated with the specified course and schema Id. </p>

Requires entitlement 'course.gradebook.MODIFY' </p>

A schema must have a scaleType of Tabular to be updated </p>

If updating the symbols field, the following criteria must be true:

- All symbols for the schema must be included. Any existing symbols not included in the patch will be deleted.
- There must be at least 1 symbol for schemas associated with Classic courses, and 2 for Ultra courses.
- When sorted descending by lowerBound, The lowerBound of a symbol must be equal to the upperBound of the following symbol.  In other words,      there should be no gaps or overlaps between the symbols.
- The lowerBound, upperBound and absoluteValue of all symbols must be nonnegative.
- The text field must be unique for each symbol in a schema.
- The lowerBound and upperBound fields must have a maximum of 3 digits after the decimal point.
- The absoluteValue field must have a maximum of 3 digits after the decimal point for Classic courses, and 4 for Ultra courses.-  -  </p>

**Since**: 3300.2.0
*/
func (a *Client) PatchLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaID(params *PatchLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaIDParams, authInfo runtime.ClientAuthInfoWriter) (*PatchLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaID",
		Method:             "PATCH",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/gradebook/schemas/{schemaId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PatchLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchLearnAPIPublicV1CoursesCourseIDGradebookSchemasSchemaID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnID updates grade column

  Update a manual grade column. The entitlement "course.gradebook.MODIFY" is needed.

**Since**: 3200.10.0
*/
func (a *Client) PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnID(params *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDParams, authInfo runtime.ClientAuthInfoWriter) (*PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnID",
		Method:             "PATCH",
		PathPattern:        "/learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptID updates column attempt

  Update an existing Attempt on a Grade Column. </p> Students can only modify the studentSubmission, studentComments and status of their own attempt if the status is InProgress. The status can only be set to NeedsGrading.  Doing so is the equivalent of submitting the attempt. </p> Instructors can modify all mutable fields but studentSubmission and studentComments as long as the status is not InProgress. Setting the status to Complete is the equivalent of posting a graded attempt.  The "course.gradebook.MODIFY" entitlement is required to update score, text, notes, feedback and set the status to Complete. </p> If the caller has the course.assessment.EXECUTE entitlement, and the attempt is associated with an assessment where the flag to require secure taking is enabled, then the caller must be in a secure browser in order to create the attempt. Classic course support since 3500.2.0

**Since**: 3300.12.0
*/
func (a *Client) PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptID(params *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDParams, authInfo runtime.ClientAuthInfoWriter) (*PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptID",
		Method:             "PATCH",
		PathPattern:        "/learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}/attempts/{attemptId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsAttemptID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersUserID updates column grade

  Update the grade column grade for a specific user, including the text grade, score, instructor notes and feedback, and exempt status.  When updating text grade or score, the resulting grade is always marked as 'Posted'.  This end-point, currently, does not support marking the grade as 'ReadyToPost'.  Grade overrides may be cleared by either specifying the 'score' attribute as null, or the 'text'; attribute as null, '', or '-' in the body of the request. The entitlement 'course.gradebook.MODIFY' is required to perform this operation.

**Since**: 3300.0.0
*/
func (a *Client) PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersUserID(params *PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersUserIDParams, authInfo runtime.ClientAuthInfoWriter) (*PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersUserIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersUserIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersUserID",
		Method:             "PATCH",
		PathPattern:        "/learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}/users/{userId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersUserIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersUserIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDUsersUserID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostLearnAPIPublicV1CoursesCourseIDGradebookSchemas creates grade schema

  Create a Tabular Grade Schema on this course. Currently only supports Classic/9.1 Courses.

The entitlement "course.gradebook.MODIFY" is needed.

**Since**: 3300.2.0
*/
func (a *Client) PostLearnAPIPublicV1CoursesCourseIDGradebookSchemas(params *PostLearnAPIPublicV1CoursesCourseIDGradebookSchemasParams, authInfo runtime.ClientAuthInfoWriter) (*PostLearnAPIPublicV1CoursesCourseIDGradebookSchemasCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostLearnAPIPublicV1CoursesCourseIDGradebookSchemasParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostLearnAPIPublicV1CoursesCourseIDGradebookSchemas",
		Method:             "POST",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/gradebook/schemas",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostLearnAPIPublicV1CoursesCourseIDGradebookSchemasReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostLearnAPIPublicV1CoursesCourseIDGradebookSchemasCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostLearnAPIPublicV1CoursesCourseIDGradebookSchemas: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostLearnAPIPublicV2CoursesCourseIDGradebookColumns creates grade column

  Create a manual grade column. The entitlement "course.gradebook.MODIFY" is needed.

**Since**: 3200.10.0
*/
func (a *Client) PostLearnAPIPublicV2CoursesCourseIDGradebookColumns(params *PostLearnAPIPublicV2CoursesCourseIDGradebookColumnsParams, authInfo runtime.ClientAuthInfoWriter) (*PostLearnAPIPublicV2CoursesCourseIDGradebookColumnsCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostLearnAPIPublicV2CoursesCourseIDGradebookColumnsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostLearnAPIPublicV2CoursesCourseIDGradebookColumns",
		Method:             "POST",
		PathPattern:        "/learn/api/public/v2/courses/{courseId}/gradebook/columns",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostLearnAPIPublicV2CoursesCourseIDGradebookColumnsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostLearnAPIPublicV2CoursesCourseIDGradebookColumnsCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostLearnAPIPublicV2CoursesCourseIDGradebookColumns: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttempts creates column attempt

  Create an Attempt on the specified Grade Column. Currently supports Classic and Ultra Course Assignments. Student attributes (studentSubmission & studentComments) can only be specified by Student Users. Grader attributes (text, score, notes & feedback, attemptDate) can only be specified by Grader Users. Graders must have the entitlement "course.gradebook.MODIFY" for the course.  Graders are allowed to create attempts that contain "studentSubmission" text on behalf of a student if the authenticated application for this request has the "course.attempt.nonowner.SUBMIT" entitlement and the attempt has a "status" of NeedsGrading. </p> If the caller has the course.assessment.EXECUTE entitlement, and the attempt is associated with an assessment where the flag to require secure taking is enabled, then the caller must be in a secure browser in order to create the attempt.

**Since**: 3300.12.0
*/
func (a *Client) PostLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttempts(params *PostLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams, authInfo runtime.ClientAuthInfoWriter) (*PostLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttempts",
		Method:             "POST",
		PathPattern:        "/learn/api/public/v2/courses/{courseId}/gradebook/columns/{columnId}/attempts",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttemptsCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostLearnAPIPublicV2CoursesCourseIDGradebookColumnsColumnIDAttempts: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
