// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/jakemakesstuff/blackboard-go/models"
)

// PatchLearnAPIPublicV1UsersUserIDReader is a Reader for the PatchLearnAPIPublicV1UsersUserID structure.
type PatchLearnAPIPublicV1UsersUserIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchLearnAPIPublicV1UsersUserIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchLearnAPIPublicV1UsersUserIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchLearnAPIPublicV1UsersUserIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchLearnAPIPublicV1UsersUserIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchLearnAPIPublicV1UsersUserIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPatchLearnAPIPublicV1UsersUserIDConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchLearnAPIPublicV1UsersUserIDOK creates a PatchLearnAPIPublicV1UsersUserIDOK with default headers values
func NewPatchLearnAPIPublicV1UsersUserIDOK() *PatchLearnAPIPublicV1UsersUserIDOK {
	return &PatchLearnAPIPublicV1UsersUserIDOK{}
}

/*PatchLearnAPIPublicV1UsersUserIDOK handles this case with default header values.

OK
*/
type PatchLearnAPIPublicV1UsersUserIDOK struct {
	Payload *models.User
}

func (o *PatchLearnAPIPublicV1UsersUserIDOK) Error() string {
	return fmt.Sprintf("[PATCH /learn/api/public/v1/users/{userId}][%d] patchLearnApiPublicV1UsersUserIdOK  %+v", 200, o.Payload)
}

func (o *PatchLearnAPIPublicV1UsersUserIDOK) GetPayload() *models.User {
	return o.Payload
}

func (o *PatchLearnAPIPublicV1UsersUserIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchLearnAPIPublicV1UsersUserIDBadRequest creates a PatchLearnAPIPublicV1UsersUserIDBadRequest with default headers values
func NewPatchLearnAPIPublicV1UsersUserIDBadRequest() *PatchLearnAPIPublicV1UsersUserIDBadRequest {
	return &PatchLearnAPIPublicV1UsersUserIDBadRequest{}
}

/*PatchLearnAPIPublicV1UsersUserIDBadRequest handles this case with default header values.

The request did not specify correct parameters
*/
type PatchLearnAPIPublicV1UsersUserIDBadRequest struct {
	Payload *models.RestException
}

func (o *PatchLearnAPIPublicV1UsersUserIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /learn/api/public/v1/users/{userId}][%d] patchLearnApiPublicV1UsersUserIdBadRequest  %+v", 400, o.Payload)
}

func (o *PatchLearnAPIPublicV1UsersUserIDBadRequest) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PatchLearnAPIPublicV1UsersUserIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchLearnAPIPublicV1UsersUserIDForbidden creates a PatchLearnAPIPublicV1UsersUserIDForbidden with default headers values
func NewPatchLearnAPIPublicV1UsersUserIDForbidden() *PatchLearnAPIPublicV1UsersUserIDForbidden {
	return &PatchLearnAPIPublicV1UsersUserIDForbidden{}
}

/*PatchLearnAPIPublicV1UsersUserIDForbidden handles this case with default header values.

The user is not authorized to update the specified User object
*/
type PatchLearnAPIPublicV1UsersUserIDForbidden struct {
	Payload *models.RestException
}

func (o *PatchLearnAPIPublicV1UsersUserIDForbidden) Error() string {
	return fmt.Sprintf("[PATCH /learn/api/public/v1/users/{userId}][%d] patchLearnApiPublicV1UsersUserIdForbidden  %+v", 403, o.Payload)
}

func (o *PatchLearnAPIPublicV1UsersUserIDForbidden) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PatchLearnAPIPublicV1UsersUserIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchLearnAPIPublicV1UsersUserIDNotFound creates a PatchLearnAPIPublicV1UsersUserIDNotFound with default headers values
func NewPatchLearnAPIPublicV1UsersUserIDNotFound() *PatchLearnAPIPublicV1UsersUserIDNotFound {
	return &PatchLearnAPIPublicV1UsersUserIDNotFound{}
}

/*PatchLearnAPIPublicV1UsersUserIDNotFound handles this case with default header values.

The user is not found
*/
type PatchLearnAPIPublicV1UsersUserIDNotFound struct {
	Payload *models.RestException
}

func (o *PatchLearnAPIPublicV1UsersUserIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /learn/api/public/v1/users/{userId}][%d] patchLearnApiPublicV1UsersUserIdNotFound  %+v", 404, o.Payload)
}

func (o *PatchLearnAPIPublicV1UsersUserIDNotFound) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PatchLearnAPIPublicV1UsersUserIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchLearnAPIPublicV1UsersUserIDConflict creates a PatchLearnAPIPublicV1UsersUserIDConflict with default headers values
func NewPatchLearnAPIPublicV1UsersUserIDConflict() *PatchLearnAPIPublicV1UsersUserIDConflict {
	return &PatchLearnAPIPublicV1UsersUserIDConflict{}
}

/*PatchLearnAPIPublicV1UsersUserIDConflict handles this case with default header values.

A user with the same username or batchUid already exists
*/
type PatchLearnAPIPublicV1UsersUserIDConflict struct {
	Payload *models.RestException
}

func (o *PatchLearnAPIPublicV1UsersUserIDConflict) Error() string {
	return fmt.Sprintf("[PATCH /learn/api/public/v1/users/{userId}][%d] patchLearnApiPublicV1UsersUserIdConflict  %+v", 409, o.Payload)
}

func (o *PatchLearnAPIPublicV1UsersUserIDConflict) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PatchLearnAPIPublicV1UsersUserIDConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PatchLearnAPIPublicV1UsersUserIDBody patch learn API public v1 users user ID body
swagger:model PatchLearnAPIPublicV1UsersUserIDBody
*/
type PatchLearnAPIPublicV1UsersUserIDBody struct {

	// address
	Address *PatchLearnAPIPublicV1UsersUserIDParamsBodyAddress `json:"address,omitempty"`

	// availability
	Availability *PatchLearnAPIPublicV1UsersUserIDParamsBodyAvailability `json:"availability,omitempty"`

	// avatar
	Avatar *PatchLearnAPIPublicV1UsersUserIDParamsBodyAvatar `json:"avatar,omitempty"`

	// The birth date of this user.
	// Format: date-time
	BirthDate strfmt.DateTime `json:"birthDate,omitempty"`

	// contact
	Contact *PatchLearnAPIPublicV1UsersUserIDParamsBodyContact `json:"contact,omitempty"`

	// The ID of the data source associated with this user.  This may optionally be the data source's externalId using the syntax "externalId:math101".
	DataSourceID string `json:"dataSourceId,omitempty"`

	// The education level of this user.
	//
	//
	// | Type      | Description
	//  | --------- | --------- |
	// | K8 | Kindergarten through 8th grade |
	// | HighSchool | Grades 9 through 12. |
	// | Freshman | College or university freshman. |
	// | Sophomore | College or university sophomore. |
	// | Junior | College or university junior. |
	// | Senior | College or university senior. |
	// | GraduateSchool | Graduate school student. |
	// | PostGraduateSchool | Post-graduate school student. |
	// | Unknown | Education Level is not known, or not specified. |
	//
	// Enum: [K8 HighSchool Freshman Sophomore Junior Senior GraduateSchool PostGraduateSchool Unknown]
	EducationLevel string `json:"educationLevel,omitempty"`

	// An optional externally-defined unique ID for the user.  Defaults to the userName.
	//
	// Formerly known as 'batchUid'.
	// Max Length: 256
	ExternalID string `json:"externalId,omitempty"`

	// The gender of this user.
	//
	//
	// | Type      | Description
	//  | --------- | --------- |
	// | Female | Female |
	// | Male | Male |
	// | Unknown | Gender is not known, or not specified. |
	//
	// Enum: [Female Male Unknown]
	Gender string `json:"gender,omitempty"`

	// The primary and secondary institution roles assigned to this user. The primary institution role is the first item in the list, followed by all secondary institution roles sorted alphabetically.
	//
	// **Since**: 3300.3.0
	InstitutionRoleIds []string `json:"institutionRoleIds"`

	// job
	Job *PatchLearnAPIPublicV1UsersUserIDParamsBodyJob `json:"job,omitempty"`

	// locale
	Locale *PatchLearnAPIPublicV1UsersUserIDParamsBodyLocale `json:"locale,omitempty"`

	// name
	Name *PatchLearnAPIPublicV1UsersUserIDParamsBodyName `json:"name,omitempty"`

	// The user's login password.
	Password string `json:"password,omitempty"`

	// The user's student ID name or number as defined by the school or institution.
	// Max Length: 100
	StudentID string `json:"studentId,omitempty"`

	// The system roles (the administrative user roles in the UI) for this user.  The first role in this list is the user's primary system role, while the remaining are secondary system roles.
	SystemRoleIds []models.SystemRoleEnum `json:"systemRoleIds"`

	// The userName property, shown in the UI.
	UserName string `json:"userName,omitempty"`
}

// Validate validates this patch learn API public v1 users user ID body
func (o *PatchLearnAPIPublicV1UsersUserIDBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAvailability(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAvatar(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBirthDate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateContact(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEducationLevel(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateExternalID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateGender(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateJob(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocale(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStudentID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSystemRoleIds(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDBody) validateAddress(formats strfmt.Registry) error {

	if swag.IsZero(o.Address) { // not required
		return nil
	}

	if o.Address != nil {
		if err := o.Address.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("input" + "." + "address")
			}
			return err
		}
	}

	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDBody) validateAvailability(formats strfmt.Registry) error {

	if swag.IsZero(o.Availability) { // not required
		return nil
	}

	if o.Availability != nil {
		if err := o.Availability.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("input" + "." + "availability")
			}
			return err
		}
	}

	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDBody) validateAvatar(formats strfmt.Registry) error {

	if swag.IsZero(o.Avatar) { // not required
		return nil
	}

	if o.Avatar != nil {
		if err := o.Avatar.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("input" + "." + "avatar")
			}
			return err
		}
	}

	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDBody) validateBirthDate(formats strfmt.Registry) error {

	if swag.IsZero(o.BirthDate) { // not required
		return nil
	}

	if err := validate.FormatOf("input"+"."+"birthDate", "body", "date-time", o.BirthDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDBody) validateContact(formats strfmt.Registry) error {

	if swag.IsZero(o.Contact) { // not required
		return nil
	}

	if o.Contact != nil {
		if err := o.Contact.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("input" + "." + "contact")
			}
			return err
		}
	}

	return nil
}

var patchLearnApiPublicV1UsersUserIdBodyTypeEducationLevelPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["K8","HighSchool","Freshman","Sophomore","Junior","Senior","GraduateSchool","PostGraduateSchool","Unknown"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		patchLearnApiPublicV1UsersUserIdBodyTypeEducationLevelPropEnum = append(patchLearnApiPublicV1UsersUserIdBodyTypeEducationLevelPropEnum, v)
	}
}

const (

	// PatchLearnAPIPublicV1UsersUserIDBodyEducationLevelK8 captures enum value "K8"
	PatchLearnAPIPublicV1UsersUserIDBodyEducationLevelK8 string = "K8"

	// PatchLearnAPIPublicV1UsersUserIDBodyEducationLevelHighSchool captures enum value "HighSchool"
	PatchLearnAPIPublicV1UsersUserIDBodyEducationLevelHighSchool string = "HighSchool"

	// PatchLearnAPIPublicV1UsersUserIDBodyEducationLevelFreshman captures enum value "Freshman"
	PatchLearnAPIPublicV1UsersUserIDBodyEducationLevelFreshman string = "Freshman"

	// PatchLearnAPIPublicV1UsersUserIDBodyEducationLevelSophomore captures enum value "Sophomore"
	PatchLearnAPIPublicV1UsersUserIDBodyEducationLevelSophomore string = "Sophomore"

	// PatchLearnAPIPublicV1UsersUserIDBodyEducationLevelJunior captures enum value "Junior"
	PatchLearnAPIPublicV1UsersUserIDBodyEducationLevelJunior string = "Junior"

	// PatchLearnAPIPublicV1UsersUserIDBodyEducationLevelSenior captures enum value "Senior"
	PatchLearnAPIPublicV1UsersUserIDBodyEducationLevelSenior string = "Senior"

	// PatchLearnAPIPublicV1UsersUserIDBodyEducationLevelGraduateSchool captures enum value "GraduateSchool"
	PatchLearnAPIPublicV1UsersUserIDBodyEducationLevelGraduateSchool string = "GraduateSchool"

	// PatchLearnAPIPublicV1UsersUserIDBodyEducationLevelPostGraduateSchool captures enum value "PostGraduateSchool"
	PatchLearnAPIPublicV1UsersUserIDBodyEducationLevelPostGraduateSchool string = "PostGraduateSchool"

	// PatchLearnAPIPublicV1UsersUserIDBodyEducationLevelUnknown captures enum value "Unknown"
	PatchLearnAPIPublicV1UsersUserIDBodyEducationLevelUnknown string = "Unknown"
)

// prop value enum
func (o *PatchLearnAPIPublicV1UsersUserIDBody) validateEducationLevelEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, patchLearnApiPublicV1UsersUserIdBodyTypeEducationLevelPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDBody) validateEducationLevel(formats strfmt.Registry) error {

	if swag.IsZero(o.EducationLevel) { // not required
		return nil
	}

	// value enum
	if err := o.validateEducationLevelEnum("input"+"."+"educationLevel", "body", o.EducationLevel); err != nil {
		return err
	}

	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDBody) validateExternalID(formats strfmt.Registry) error {

	if swag.IsZero(o.ExternalID) { // not required
		return nil
	}

	if err := validate.MaxLength("input"+"."+"externalId", "body", string(o.ExternalID), 256); err != nil {
		return err
	}

	return nil
}

var patchLearnApiPublicV1UsersUserIdBodyTypeGenderPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Female","Male","Unknown"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		patchLearnApiPublicV1UsersUserIdBodyTypeGenderPropEnum = append(patchLearnApiPublicV1UsersUserIdBodyTypeGenderPropEnum, v)
	}
}

const (

	// PatchLearnAPIPublicV1UsersUserIDBodyGenderFemale captures enum value "Female"
	PatchLearnAPIPublicV1UsersUserIDBodyGenderFemale string = "Female"

	// PatchLearnAPIPublicV1UsersUserIDBodyGenderMale captures enum value "Male"
	PatchLearnAPIPublicV1UsersUserIDBodyGenderMale string = "Male"

	// PatchLearnAPIPublicV1UsersUserIDBodyGenderUnknown captures enum value "Unknown"
	PatchLearnAPIPublicV1UsersUserIDBodyGenderUnknown string = "Unknown"
)

// prop value enum
func (o *PatchLearnAPIPublicV1UsersUserIDBody) validateGenderEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, patchLearnApiPublicV1UsersUserIdBodyTypeGenderPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDBody) validateGender(formats strfmt.Registry) error {

	if swag.IsZero(o.Gender) { // not required
		return nil
	}

	// value enum
	if err := o.validateGenderEnum("input"+"."+"gender", "body", o.Gender); err != nil {
		return err
	}

	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDBody) validateJob(formats strfmt.Registry) error {

	if swag.IsZero(o.Job) { // not required
		return nil
	}

	if o.Job != nil {
		if err := o.Job.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("input" + "." + "job")
			}
			return err
		}
	}

	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDBody) validateLocale(formats strfmt.Registry) error {

	if swag.IsZero(o.Locale) { // not required
		return nil
	}

	if o.Locale != nil {
		if err := o.Locale.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("input" + "." + "locale")
			}
			return err
		}
	}

	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDBody) validateName(formats strfmt.Registry) error {

	if swag.IsZero(o.Name) { // not required
		return nil
	}

	if o.Name != nil {
		if err := o.Name.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("input" + "." + "name")
			}
			return err
		}
	}

	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDBody) validateStudentID(formats strfmt.Registry) error {

	if swag.IsZero(o.StudentID) { // not required
		return nil
	}

	if err := validate.MaxLength("input"+"."+"studentId", "body", string(o.StudentID), 100); err != nil {
		return err
	}

	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDBody) validateSystemRoleIds(formats strfmt.Registry) error {

	if swag.IsZero(o.SystemRoleIds) { // not required
		return nil
	}

	for i := 0; i < len(o.SystemRoleIds); i++ {

		if err := o.SystemRoleIds[i].Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("input" + "." + "systemRoleIds" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchLearnAPIPublicV1UsersUserIDBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchLearnAPIPublicV1UsersUserIDBody) UnmarshalBinary(b []byte) error {
	var res PatchLearnAPIPublicV1UsersUserIDBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchLearnAPIPublicV1UsersUserIDParamsBodyAddress Address
//
// The user's mailing address.
swagger:model PatchLearnAPIPublicV1UsersUserIDParamsBodyAddress
*/
type PatchLearnAPIPublicV1UsersUserIDParamsBodyAddress struct {

	// The city the user resides in.
	// Max Length: 50
	City string `json:"city,omitempty"`

	// The country the user resides in.
	// Max Length: 50
	Country string `json:"country,omitempty"`

	// The state or province the user resides in.
	// Max Length: 50
	State string `json:"state,omitempty"`

	// The street address of the user.
	// Max Length: 100
	Street1 string `json:"street1,omitempty"`

	// An additional field to store the street address of the user.
	// Max Length: 100
	Street2 string `json:"street2,omitempty"`

	// The zip code or postal code the user resides in.
	// Max Length: 50
	ZipCode string `json:"zipCode,omitempty"`
}

// Validate validates this patch learn API public v1 users user ID params body address
func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyAddress) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCity(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateState(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStreet1(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStreet2(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateZipCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyAddress) validateCity(formats strfmt.Registry) error {

	if swag.IsZero(o.City) { // not required
		return nil
	}

	if err := validate.MaxLength("input"+"."+"address"+"."+"city", "body", string(o.City), 50); err != nil {
		return err
	}

	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyAddress) validateCountry(formats strfmt.Registry) error {

	if swag.IsZero(o.Country) { // not required
		return nil
	}

	if err := validate.MaxLength("input"+"."+"address"+"."+"country", "body", string(o.Country), 50); err != nil {
		return err
	}

	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyAddress) validateState(formats strfmt.Registry) error {

	if swag.IsZero(o.State) { // not required
		return nil
	}

	if err := validate.MaxLength("input"+"."+"address"+"."+"state", "body", string(o.State), 50); err != nil {
		return err
	}

	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyAddress) validateStreet1(formats strfmt.Registry) error {

	if swag.IsZero(o.Street1) { // not required
		return nil
	}

	if err := validate.MaxLength("input"+"."+"address"+"."+"street1", "body", string(o.Street1), 100); err != nil {
		return err
	}

	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyAddress) validateStreet2(formats strfmt.Registry) error {

	if swag.IsZero(o.Street2) { // not required
		return nil
	}

	if err := validate.MaxLength("input"+"."+"address"+"."+"street2", "body", string(o.Street2), 100); err != nil {
		return err
	}

	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyAddress) validateZipCode(formats strfmt.Registry) error {

	if swag.IsZero(o.ZipCode) { // not required
		return nil
	}

	if err := validate.MaxLength("input"+"."+"address"+"."+"zipCode", "body", string(o.ZipCode), 50); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyAddress) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyAddress) UnmarshalBinary(b []byte) error {
	var res PatchLearnAPIPublicV1UsersUserIDParamsBodyAddress
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchLearnAPIPublicV1UsersUserIDParamsBodyAvailability Availability
//
// Settings controlling availability of the user account.
swagger:model PatchLearnAPIPublicV1UsersUserIDParamsBodyAvailability
*/
type PatchLearnAPIPublicV1UsersUserIDParamsBodyAvailability struct {

	// Whether the user is available within the system. Unavailable users cannot log in.
	//
	//
	// | Type      | Description
	//  | --------- | --------- |
	// | Yes |  |
	// | No |  |
	// | Disabled |   **Since**: 3100.0.0 |
	//
	// Enum: [Yes No Disabled]
	Available string `json:"available,omitempty"`
}

// Validate validates this patch learn API public v1 users user ID params body availability
func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyAvailability) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAvailable(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var patchLearnApiPublicV1UsersUserIdParamsBodyAvailabilityTypeAvailablePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Yes","No","Disabled"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		patchLearnApiPublicV1UsersUserIdParamsBodyAvailabilityTypeAvailablePropEnum = append(patchLearnApiPublicV1UsersUserIdParamsBodyAvailabilityTypeAvailablePropEnum, v)
	}
}

const (

	// PatchLearnAPIPublicV1UsersUserIDParamsBodyAvailabilityAvailableYes captures enum value "Yes"
	PatchLearnAPIPublicV1UsersUserIDParamsBodyAvailabilityAvailableYes string = "Yes"

	// PatchLearnAPIPublicV1UsersUserIDParamsBodyAvailabilityAvailableNo captures enum value "No"
	PatchLearnAPIPublicV1UsersUserIDParamsBodyAvailabilityAvailableNo string = "No"

	// PatchLearnAPIPublicV1UsersUserIDParamsBodyAvailabilityAvailableDisabled captures enum value "Disabled"
	PatchLearnAPIPublicV1UsersUserIDParamsBodyAvailabilityAvailableDisabled string = "Disabled"
)

// prop value enum
func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyAvailability) validateAvailableEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, patchLearnApiPublicV1UsersUserIdParamsBodyAvailabilityTypeAvailablePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyAvailability) validateAvailable(formats strfmt.Registry) error {

	if swag.IsZero(o.Available) { // not required
		return nil
	}

	// value enum
	if err := o.validateAvailableEnum("input"+"."+"availability"+"."+"available", "body", o.Available); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyAvailability) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyAvailability) UnmarshalBinary(b []byte) error {
	var res PatchLearnAPIPublicV1UsersUserIDParamsBodyAvailability
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchLearnAPIPublicV1UsersUserIDParamsBodyAvatar Avatar
//
// The user's avatar metadata
//
// **Since**: 3800.13.0
swagger:model PatchLearnAPIPublicV1UsersUserIDParamsBodyAvatar
*/
type PatchLearnAPIPublicV1UsersUserIDParamsBodyAvatar struct {

	// The source of the user's avatar
	//
	// **Since**: 3800.13.0
	//
	//
	// | Type      | Description
	//  | --------- | --------- |
	// | Default | The server default avatar |
	// | User | The user set his/her own avatar |
	// | System | A privileged user set the user's avatar to something other than default |
	//
	// Enum: [Default User System]
	Source string `json:"source,omitempty"`

	// The upload id of the avatar image file
	//
	// **Since**: 3800.13.0
	UploadID string `json:"uploadId,omitempty"`
}

// Validate validates this patch learn API public v1 users user ID params body avatar
func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyAvatar) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSource(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var patchLearnApiPublicV1UsersUserIdParamsBodyAvatarTypeSourcePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Default","User","System"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		patchLearnApiPublicV1UsersUserIdParamsBodyAvatarTypeSourcePropEnum = append(patchLearnApiPublicV1UsersUserIdParamsBodyAvatarTypeSourcePropEnum, v)
	}
}

const (

	// PatchLearnAPIPublicV1UsersUserIDParamsBodyAvatarSourceDefault captures enum value "Default"
	PatchLearnAPIPublicV1UsersUserIDParamsBodyAvatarSourceDefault string = "Default"

	// PatchLearnAPIPublicV1UsersUserIDParamsBodyAvatarSourceUser captures enum value "User"
	PatchLearnAPIPublicV1UsersUserIDParamsBodyAvatarSourceUser string = "User"

	// PatchLearnAPIPublicV1UsersUserIDParamsBodyAvatarSourceSystem captures enum value "System"
	PatchLearnAPIPublicV1UsersUserIDParamsBodyAvatarSourceSystem string = "System"
)

// prop value enum
func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyAvatar) validateSourceEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, patchLearnApiPublicV1UsersUserIdParamsBodyAvatarTypeSourcePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyAvatar) validateSource(formats strfmt.Registry) error {

	if swag.IsZero(o.Source) { // not required
		return nil
	}

	// value enum
	if err := o.validateSourceEnum("input"+"."+"avatar"+"."+"source", "body", o.Source); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyAvatar) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyAvatar) UnmarshalBinary(b []byte) error {
	var res PatchLearnAPIPublicV1UsersUserIDParamsBodyAvatar
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchLearnAPIPublicV1UsersUserIDParamsBodyContact Contact
//
// The user's contact information.
swagger:model PatchLearnAPIPublicV1UsersUserIDParamsBodyContact
*/
type PatchLearnAPIPublicV1UsersUserIDParamsBodyContact struct {

	// The user's business fax number.
	// Max Length: 50
	BusinessFax string `json:"businessFax,omitempty"`

	// The user's business phone number.
	// Max Length: 50
	BusinessPhone string `json:"businessPhone,omitempty"`

	// The user's email address.
	// Max Length: 100
	Email string `json:"email,omitempty"`

	// The user's home phone number.
	// Max Length: 50
	HomePhone string `json:"homePhone,omitempty"`

	// The user's mobile phone number.
	// Max Length: 50
	MobilePhone string `json:"mobilePhone,omitempty"`

	// The URL of the user's personal website.
	// Max Length: 100
	WebPage string `json:"webPage,omitempty"`
}

// Validate validates this patch learn API public v1 users user ID params body contact
func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyContact) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBusinessFax(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBusinessPhone(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateHomePhone(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMobilePhone(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateWebPage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyContact) validateBusinessFax(formats strfmt.Registry) error {

	if swag.IsZero(o.BusinessFax) { // not required
		return nil
	}

	if err := validate.MaxLength("input"+"."+"contact"+"."+"businessFax", "body", string(o.BusinessFax), 50); err != nil {
		return err
	}

	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyContact) validateBusinessPhone(formats strfmt.Registry) error {

	if swag.IsZero(o.BusinessPhone) { // not required
		return nil
	}

	if err := validate.MaxLength("input"+"."+"contact"+"."+"businessPhone", "body", string(o.BusinessPhone), 50); err != nil {
		return err
	}

	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyContact) validateEmail(formats strfmt.Registry) error {

	if swag.IsZero(o.Email) { // not required
		return nil
	}

	if err := validate.MaxLength("input"+"."+"contact"+"."+"email", "body", string(o.Email), 100); err != nil {
		return err
	}

	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyContact) validateHomePhone(formats strfmt.Registry) error {

	if swag.IsZero(o.HomePhone) { // not required
		return nil
	}

	if err := validate.MaxLength("input"+"."+"contact"+"."+"homePhone", "body", string(o.HomePhone), 50); err != nil {
		return err
	}

	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyContact) validateMobilePhone(formats strfmt.Registry) error {

	if swag.IsZero(o.MobilePhone) { // not required
		return nil
	}

	if err := validate.MaxLength("input"+"."+"contact"+"."+"mobilePhone", "body", string(o.MobilePhone), 50); err != nil {
		return err
	}

	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyContact) validateWebPage(formats strfmt.Registry) error {

	if swag.IsZero(o.WebPage) { // not required
		return nil
	}

	if err := validate.MaxLength("input"+"."+"contact"+"."+"webPage", "body", string(o.WebPage), 100); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyContact) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyContact) UnmarshalBinary(b []byte) error {
	var res PatchLearnAPIPublicV1UsersUserIDParamsBodyContact
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchLearnAPIPublicV1UsersUserIDParamsBodyJob Job
//
// The user's job information.
swagger:model PatchLearnAPIPublicV1UsersUserIDParamsBodyJob
*/
type PatchLearnAPIPublicV1UsersUserIDParamsBodyJob struct {

	// The company the user works for.
	// Max Length: 100
	Company string `json:"company,omitempty"`

	// The department the user belongs to.
	// Max Length: 100
	Department string `json:"department,omitempty"`

	// The user's job title.
	// Max Length: 100
	Title string `json:"title,omitempty"`
}

// Validate validates this patch learn API public v1 users user ID params body job
func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyJob) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCompany(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDepartment(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTitle(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyJob) validateCompany(formats strfmt.Registry) error {

	if swag.IsZero(o.Company) { // not required
		return nil
	}

	if err := validate.MaxLength("input"+"."+"job"+"."+"company", "body", string(o.Company), 100); err != nil {
		return err
	}

	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyJob) validateDepartment(formats strfmt.Registry) error {

	if swag.IsZero(o.Department) { // not required
		return nil
	}

	if err := validate.MaxLength("input"+"."+"job"+"."+"department", "body", string(o.Department), 100); err != nil {
		return err
	}

	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyJob) validateTitle(formats strfmt.Registry) error {

	if swag.IsZero(o.Title) { // not required
		return nil
	}

	if err := validate.MaxLength("input"+"."+"job"+"."+"title", "body", string(o.Title), 100); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyJob) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyJob) UnmarshalBinary(b []byte) error {
	var res PatchLearnAPIPublicV1UsersUserIDParamsBodyJob
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchLearnAPIPublicV1UsersUserIDParamsBodyLocale Locale
//
// The user's localization settings.
swagger:model PatchLearnAPIPublicV1UsersUserIDParamsBodyLocale
*/
type PatchLearnAPIPublicV1UsersUserIDParamsBodyLocale struct {

	// The calendar type specified by the user.
	//
	//
	// | Type      | Description
	//  | --------- | --------- |
	// | Gregorian | Gregorian |
	// | GregorianHijri | Gregorian & Hijri |
	// | Hijri | Hijri |
	// | HijriGregorian | Hijri & Gregorian |
	//
	// Enum: [Gregorian GregorianHijri Hijri HijriGregorian]
	Calendar string `json:"calendar,omitempty"`

	// The user's preferred first day of the week.
	//
	//
	// | Type      | Description
	//  | --------- | --------- |
	// | Sunday | Sunday |
	// | Monday | Monday |
	// | Saturday | Saturday |
	//
	// Enum: [Sunday Monday Saturday]
	FirstDayOfWeek string `json:"firstDayOfWeek,omitempty"`

	// The locale specified by the user.  This locale will be used anywhere the user is allowed to customize their locale; courses may force a specific locale, overriding the user's locale preference.
	ID string `json:"id,omitempty"`
}

// Validate validates this patch learn API public v1 users user ID params body locale
func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyLocale) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCalendar(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFirstDayOfWeek(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var patchLearnApiPublicV1UsersUserIdParamsBodyLocaleTypeCalendarPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Gregorian","GregorianHijri","Hijri","HijriGregorian"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		patchLearnApiPublicV1UsersUserIdParamsBodyLocaleTypeCalendarPropEnum = append(patchLearnApiPublicV1UsersUserIdParamsBodyLocaleTypeCalendarPropEnum, v)
	}
}

const (

	// PatchLearnAPIPublicV1UsersUserIDParamsBodyLocaleCalendarGregorian captures enum value "Gregorian"
	PatchLearnAPIPublicV1UsersUserIDParamsBodyLocaleCalendarGregorian string = "Gregorian"

	// PatchLearnAPIPublicV1UsersUserIDParamsBodyLocaleCalendarGregorianHijri captures enum value "GregorianHijri"
	PatchLearnAPIPublicV1UsersUserIDParamsBodyLocaleCalendarGregorianHijri string = "GregorianHijri"

	// PatchLearnAPIPublicV1UsersUserIDParamsBodyLocaleCalendarHijri captures enum value "Hijri"
	PatchLearnAPIPublicV1UsersUserIDParamsBodyLocaleCalendarHijri string = "Hijri"

	// PatchLearnAPIPublicV1UsersUserIDParamsBodyLocaleCalendarHijriGregorian captures enum value "HijriGregorian"
	PatchLearnAPIPublicV1UsersUserIDParamsBodyLocaleCalendarHijriGregorian string = "HijriGregorian"
)

// prop value enum
func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyLocale) validateCalendarEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, patchLearnApiPublicV1UsersUserIdParamsBodyLocaleTypeCalendarPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyLocale) validateCalendar(formats strfmt.Registry) error {

	if swag.IsZero(o.Calendar) { // not required
		return nil
	}

	// value enum
	if err := o.validateCalendarEnum("input"+"."+"locale"+"."+"calendar", "body", o.Calendar); err != nil {
		return err
	}

	return nil
}

var patchLearnApiPublicV1UsersUserIdParamsBodyLocaleTypeFirstDayOfWeekPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Sunday","Monday","Saturday"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		patchLearnApiPublicV1UsersUserIdParamsBodyLocaleTypeFirstDayOfWeekPropEnum = append(patchLearnApiPublicV1UsersUserIdParamsBodyLocaleTypeFirstDayOfWeekPropEnum, v)
	}
}

const (

	// PatchLearnAPIPublicV1UsersUserIDParamsBodyLocaleFirstDayOfWeekSunday captures enum value "Sunday"
	PatchLearnAPIPublicV1UsersUserIDParamsBodyLocaleFirstDayOfWeekSunday string = "Sunday"

	// PatchLearnAPIPublicV1UsersUserIDParamsBodyLocaleFirstDayOfWeekMonday captures enum value "Monday"
	PatchLearnAPIPublicV1UsersUserIDParamsBodyLocaleFirstDayOfWeekMonday string = "Monday"

	// PatchLearnAPIPublicV1UsersUserIDParamsBodyLocaleFirstDayOfWeekSaturday captures enum value "Saturday"
	PatchLearnAPIPublicV1UsersUserIDParamsBodyLocaleFirstDayOfWeekSaturday string = "Saturday"
)

// prop value enum
func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyLocale) validateFirstDayOfWeekEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, patchLearnApiPublicV1UsersUserIdParamsBodyLocaleTypeFirstDayOfWeekPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyLocale) validateFirstDayOfWeek(formats strfmt.Registry) error {

	if swag.IsZero(o.FirstDayOfWeek) { // not required
		return nil
	}

	// value enum
	if err := o.validateFirstDayOfWeekEnum("input"+"."+"locale"+"."+"firstDayOfWeek", "body", o.FirstDayOfWeek); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyLocale) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyLocale) UnmarshalBinary(b []byte) error {
	var res PatchLearnAPIPublicV1UsersUserIDParamsBodyLocale
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchLearnAPIPublicV1UsersUserIDParamsBodyName Name
//
// Properties used to build the user's display name.
swagger:model PatchLearnAPIPublicV1UsersUserIDParamsBodyName
*/
type PatchLearnAPIPublicV1UsersUserIDParamsBodyName struct {

	// The family (last) name of this user.
	// Max Length: 100
	Family string `json:"family,omitempty"`

	// The given (first) name of this user.
	// Max Length: 100
	Given string `json:"given,omitempty"`

	// The middle name of this user.
	// Max Length: 100
	Middle string `json:"middle,omitempty"`

	// The other name (nickname) of this user.
	// Max Length: 100
	Other string `json:"other,omitempty"`

	// The suffix of this user's name.  Examples: Jr., III, PhD.
	// Max Length: 100
	Suffix string `json:"suffix,omitempty"`

	// The title of this user.  Examples: Mr., Ms., Dr.
	// Max Length: 100
	Title string `json:"title,omitempty"`
}

// Validate validates this patch learn API public v1 users user ID params body name
func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyName) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateFamily(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateGiven(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMiddle(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateOther(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSuffix(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTitle(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyName) validateFamily(formats strfmt.Registry) error {

	if swag.IsZero(o.Family) { // not required
		return nil
	}

	if err := validate.MaxLength("input"+"."+"name"+"."+"family", "body", string(o.Family), 100); err != nil {
		return err
	}

	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyName) validateGiven(formats strfmt.Registry) error {

	if swag.IsZero(o.Given) { // not required
		return nil
	}

	if err := validate.MaxLength("input"+"."+"name"+"."+"given", "body", string(o.Given), 100); err != nil {
		return err
	}

	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyName) validateMiddle(formats strfmt.Registry) error {

	if swag.IsZero(o.Middle) { // not required
		return nil
	}

	if err := validate.MaxLength("input"+"."+"name"+"."+"middle", "body", string(o.Middle), 100); err != nil {
		return err
	}

	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyName) validateOther(formats strfmt.Registry) error {

	if swag.IsZero(o.Other) { // not required
		return nil
	}

	if err := validate.MaxLength("input"+"."+"name"+"."+"other", "body", string(o.Other), 100); err != nil {
		return err
	}

	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyName) validateSuffix(formats strfmt.Registry) error {

	if swag.IsZero(o.Suffix) { // not required
		return nil
	}

	if err := validate.MaxLength("input"+"."+"name"+"."+"suffix", "body", string(o.Suffix), 100); err != nil {
		return err
	}

	return nil
}

func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyName) validateTitle(formats strfmt.Registry) error {

	if swag.IsZero(o.Title) { // not required
		return nil
	}

	if err := validate.MaxLength("input"+"."+"name"+"."+"title", "body", string(o.Title), 100); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyName) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchLearnAPIPublicV1UsersUserIDParamsBodyName) UnmarshalBinary(b []byte) error {
	var res PatchLearnAPIPublicV1UsersUserIDParamsBodyName
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
