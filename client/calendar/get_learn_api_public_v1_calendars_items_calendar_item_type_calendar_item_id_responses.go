// Code generated by go-swagger; DO NOT EDIT.

package calendar

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jakemakesstuff/blackboard-go/models"
)

// GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDReader is a Reader for the GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemID structure.
type GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDOK creates a GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDOK with default headers values
func NewGetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDOK() *GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDOK {
	return &GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDOK{}
}

/*GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDOK handles this case with default header values.

OK
*/
type GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDOK struct {
	Payload *models.CalendarItem
}

func (o *GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDOK) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/calendars/items/{calendarItemType}/{calendarItemId}][%d] getLearnApiPublicV1CalendarsItemsCalendarItemTypeCalendarItemIdOK  %+v", 200, o.Payload)
}

func (o *GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDOK) GetPayload() *models.CalendarItem {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CalendarItem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDBadRequest creates a GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDBadRequest with default headers values
func NewGetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDBadRequest() *GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDBadRequest {
	return &GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDBadRequest{}
}

/*GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDBadRequest handles this case with default header values.

Bad Request
*/
type GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDBadRequest struct {
	Payload *models.RestException
}

func (o *GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/calendars/items/{calendarItemType}/{calendarItemId}][%d] getLearnApiPublicV1CalendarsItemsCalendarItemTypeCalendarItemIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDBadRequest) GetPayload() *models.RestException {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDForbidden creates a GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDForbidden with default headers values
func NewGetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDForbidden() *GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDForbidden {
	return &GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDForbidden{}
}

/*GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDForbidden handles this case with default header values.

Forbidden
*/
type GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDForbidden struct {
	Payload *models.RestException
}

func (o *GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDForbidden) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/calendars/items/{calendarItemType}/{calendarItemId}][%d] getLearnApiPublicV1CalendarsItemsCalendarItemTypeCalendarItemIdForbidden  %+v", 403, o.Payload)
}

func (o *GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDForbidden) GetPayload() *models.RestException {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDNotFound creates a GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDNotFound with default headers values
func NewGetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDNotFound() *GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDNotFound {
	return &GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDNotFound{}
}

/*GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDNotFound handles this case with default header values.

Not Found
*/
type GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDNotFound struct {
	Payload *models.RestException
}

func (o *GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDNotFound) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/calendars/items/{calendarItemType}/{calendarItemId}][%d] getLearnApiPublicV1CalendarsItemsCalendarItemTypeCalendarItemIdNotFound  %+v", 404, o.Payload)
}

func (o *GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDNotFound) GetPayload() *models.RestException {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CalendarsItemsCalendarItemTypeCalendarItemIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
