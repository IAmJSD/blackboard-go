// Code generated by go-swagger; DO NOT EDIT.

package lti

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPatchLearnApipublicV1LtiDomainsDomainIDParams creates a new PatchLearnApipublicV1LtiDomainsDomainIDParams object
// with the default values initialized.
func NewPatchLearnApipublicV1LtiDomainsDomainIDParams() *PatchLearnApipublicV1LtiDomainsDomainIDParams {
	var ()
	return &PatchLearnApipublicV1LtiDomainsDomainIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPatchLearnApipublicV1LtiDomainsDomainIDParamsWithTimeout creates a new PatchLearnApipublicV1LtiDomainsDomainIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPatchLearnApipublicV1LtiDomainsDomainIDParamsWithTimeout(timeout time.Duration) *PatchLearnApipublicV1LtiDomainsDomainIDParams {
	var ()
	return &PatchLearnApipublicV1LtiDomainsDomainIDParams{

		timeout: timeout,
	}
}

// NewPatchLearnApipublicV1LtiDomainsDomainIDParamsWithContext creates a new PatchLearnApipublicV1LtiDomainsDomainIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPatchLearnApipublicV1LtiDomainsDomainIDParamsWithContext(ctx context.Context) *PatchLearnApipublicV1LtiDomainsDomainIDParams {
	var ()
	return &PatchLearnApipublicV1LtiDomainsDomainIDParams{

		Context: ctx,
	}
}

// NewPatchLearnApipublicV1LtiDomainsDomainIDParamsWithHTTPClient creates a new PatchLearnApipublicV1LtiDomainsDomainIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPatchLearnApipublicV1LtiDomainsDomainIDParamsWithHTTPClient(client *http.Client) *PatchLearnApipublicV1LtiDomainsDomainIDParams {
	var ()
	return &PatchLearnApipublicV1LtiDomainsDomainIDParams{
		HTTPClient: client,
	}
}

/*PatchLearnApipublicV1LtiDomainsDomainIDParams contains all the parameters to send to the API endpoint
for the patch learn apipublic v1 lti domains domain ID operation typically these are written to a http.Request
*/
type PatchLearnApipublicV1LtiDomainsDomainIDParams struct {

	/*DomainID*/
	DomainID string
	/*Fields
	  A comma-delimited list of fields to include in the response. If not specified, all fields will be returned.

	*/
	Fields *string
	/*Input
	  JSON input object

	*/
	Input PatchLearnApipublicV1LtiDomainsDomainIDBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the patch learn apipublic v1 lti domains domain ID params
func (o *PatchLearnApipublicV1LtiDomainsDomainIDParams) WithTimeout(timeout time.Duration) *PatchLearnApipublicV1LtiDomainsDomainIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch learn apipublic v1 lti domains domain ID params
func (o *PatchLearnApipublicV1LtiDomainsDomainIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch learn apipublic v1 lti domains domain ID params
func (o *PatchLearnApipublicV1LtiDomainsDomainIDParams) WithContext(ctx context.Context) *PatchLearnApipublicV1LtiDomainsDomainIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch learn apipublic v1 lti domains domain ID params
func (o *PatchLearnApipublicV1LtiDomainsDomainIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch learn apipublic v1 lti domains domain ID params
func (o *PatchLearnApipublicV1LtiDomainsDomainIDParams) WithHTTPClient(client *http.Client) *PatchLearnApipublicV1LtiDomainsDomainIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch learn apipublic v1 lti domains domain ID params
func (o *PatchLearnApipublicV1LtiDomainsDomainIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDomainID adds the domainID to the patch learn apipublic v1 lti domains domain ID params
func (o *PatchLearnApipublicV1LtiDomainsDomainIDParams) WithDomainID(domainID string) *PatchLearnApipublicV1LtiDomainsDomainIDParams {
	o.SetDomainID(domainID)
	return o
}

// SetDomainID adds the domainId to the patch learn apipublic v1 lti domains domain ID params
func (o *PatchLearnApipublicV1LtiDomainsDomainIDParams) SetDomainID(domainID string) {
	o.DomainID = domainID
}

// WithFields adds the fields to the patch learn apipublic v1 lti domains domain ID params
func (o *PatchLearnApipublicV1LtiDomainsDomainIDParams) WithFields(fields *string) *PatchLearnApipublicV1LtiDomainsDomainIDParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the patch learn apipublic v1 lti domains domain ID params
func (o *PatchLearnApipublicV1LtiDomainsDomainIDParams) SetFields(fields *string) {
	o.Fields = fields
}

// WithInput adds the input to the patch learn apipublic v1 lti domains domain ID params
func (o *PatchLearnApipublicV1LtiDomainsDomainIDParams) WithInput(input PatchLearnApipublicV1LtiDomainsDomainIDBody) *PatchLearnApipublicV1LtiDomainsDomainIDParams {
	o.SetInput(input)
	return o
}

// SetInput adds the input to the patch learn apipublic v1 lti domains domain ID params
func (o *PatchLearnApipublicV1LtiDomainsDomainIDParams) SetInput(input PatchLearnApipublicV1LtiDomainsDomainIDBody) {
	o.Input = input
}

// WriteToRequest writes these params to a swagger request
func (o *PatchLearnApipublicV1LtiDomainsDomainIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param domainId
	if err := r.SetPathParam("domainId", o.DomainID); err != nil {
		return err
	}

	if o.Fields != nil {

		// query param fields
		var qrFields string
		if o.Fields != nil {
			qrFields = *o.Fields
		}
		qFields := qrFields
		if qFields != "" {
			if err := r.SetQueryParam("fields", qFields); err != nil {
				return err
			}
		}

	}

	if err := r.SetBodyParam(o.Input); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
