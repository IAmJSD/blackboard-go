// Code generated by go-swagger; DO NOT EDIT.

package lti

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetLearnAPIPublicV1LtiPlacementsParams creates a new GetLearnAPIPublicV1LtiPlacementsParams object
// with the default values initialized.
func NewGetLearnAPIPublicV1LtiPlacementsParams() *GetLearnAPIPublicV1LtiPlacementsParams {
	var ()
	return &GetLearnAPIPublicV1LtiPlacementsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetLearnAPIPublicV1LtiPlacementsParamsWithTimeout creates a new GetLearnAPIPublicV1LtiPlacementsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetLearnAPIPublicV1LtiPlacementsParamsWithTimeout(timeout time.Duration) *GetLearnAPIPublicV1LtiPlacementsParams {
	var ()
	return &GetLearnAPIPublicV1LtiPlacementsParams{

		timeout: timeout,
	}
}

// NewGetLearnAPIPublicV1LtiPlacementsParamsWithContext creates a new GetLearnAPIPublicV1LtiPlacementsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetLearnAPIPublicV1LtiPlacementsParamsWithContext(ctx context.Context) *GetLearnAPIPublicV1LtiPlacementsParams {
	var ()
	return &GetLearnAPIPublicV1LtiPlacementsParams{

		Context: ctx,
	}
}

// NewGetLearnAPIPublicV1LtiPlacementsParamsWithHTTPClient creates a new GetLearnAPIPublicV1LtiPlacementsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetLearnAPIPublicV1LtiPlacementsParamsWithHTTPClient(client *http.Client) *GetLearnAPIPublicV1LtiPlacementsParams {
	var ()
	return &GetLearnAPIPublicV1LtiPlacementsParams{
		HTTPClient: client,
	}
}

/*GetLearnAPIPublicV1LtiPlacementsParams contains all the parameters to send to the API endpoint
for the get learn API public v1 lti placements operation typically these are written to a http.Request
*/
type GetLearnAPIPublicV1LtiPlacementsParams struct {

	/*AuthorID
	  Search for placements with author ID properties that contain this value.

	**Since**: 3200.12.0

	*/
	AuthorID *string
	/*Fields
	  A comma-delimited list of fields to include in the response. If not specified, all fields will be returned.

	*/
	Fields *string
	/*Handle
	  Search for placements with handle properties that contain this value.

	**Since**: 3200.12.0

	*/
	Handle *string
	/*Limit
	  The maximum number of results to be returned. There may be less if the query returned less than the maximum.

	*/
	Limit *int32
	/*Name
	  Search for placements with name properties that contain this value.

	**Since**: 3200.12.0

	*/
	Name *string
	/*Offset
	  The number of rows to skip before beginning to return rows. An offset of 0 is the same as omitting the offset parameter.

	*/
	Offset *int32
	/*Sort
	  Properties to sort by. This is a comma-delimited list of JSON properties, with an optional "(desc)" suffix to request a descending sort for that property. e.g. "name.family(desc),created"

	**Since**: 3100.0.0

	*/
	Sort *string
	/*Type
	  Search for placements with type properties that contain this value.

	**Since**: 3200.12.0


	| Type      | Description
	 | --------- | --------- |
	| Application | Application or Student Tool Placement |
	| ContentHandler | Content Type placement |
	| ContentItemMessage | Content-item Message placement (see IMSGlobal spec)  **Since**: 3300.5.0 |
	| System | System-level Tools |
	| Administrator | Administrator-level Tools  **Since**: 3400.1.0 |
	| UltraUI | Ultra-UI Extensions  **Since**: 3700.6.0 |
	| BaseNavigation | Base Navigation |
	| CourseNavigation | Course Navigation |


	*/
	Type *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get learn API public v1 lti placements params
func (o *GetLearnAPIPublicV1LtiPlacementsParams) WithTimeout(timeout time.Duration) *GetLearnAPIPublicV1LtiPlacementsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get learn API public v1 lti placements params
func (o *GetLearnAPIPublicV1LtiPlacementsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get learn API public v1 lti placements params
func (o *GetLearnAPIPublicV1LtiPlacementsParams) WithContext(ctx context.Context) *GetLearnAPIPublicV1LtiPlacementsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get learn API public v1 lti placements params
func (o *GetLearnAPIPublicV1LtiPlacementsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get learn API public v1 lti placements params
func (o *GetLearnAPIPublicV1LtiPlacementsParams) WithHTTPClient(client *http.Client) *GetLearnAPIPublicV1LtiPlacementsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get learn API public v1 lti placements params
func (o *GetLearnAPIPublicV1LtiPlacementsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorID adds the authorID to the get learn API public v1 lti placements params
func (o *GetLearnAPIPublicV1LtiPlacementsParams) WithAuthorID(authorID *string) *GetLearnAPIPublicV1LtiPlacementsParams {
	o.SetAuthorID(authorID)
	return o
}

// SetAuthorID adds the authorId to the get learn API public v1 lti placements params
func (o *GetLearnAPIPublicV1LtiPlacementsParams) SetAuthorID(authorID *string) {
	o.AuthorID = authorID
}

// WithFields adds the fields to the get learn API public v1 lti placements params
func (o *GetLearnAPIPublicV1LtiPlacementsParams) WithFields(fields *string) *GetLearnAPIPublicV1LtiPlacementsParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the get learn API public v1 lti placements params
func (o *GetLearnAPIPublicV1LtiPlacementsParams) SetFields(fields *string) {
	o.Fields = fields
}

// WithHandle adds the handle to the get learn API public v1 lti placements params
func (o *GetLearnAPIPublicV1LtiPlacementsParams) WithHandle(handle *string) *GetLearnAPIPublicV1LtiPlacementsParams {
	o.SetHandle(handle)
	return o
}

// SetHandle adds the handle to the get learn API public v1 lti placements params
func (o *GetLearnAPIPublicV1LtiPlacementsParams) SetHandle(handle *string) {
	o.Handle = handle
}

// WithLimit adds the limit to the get learn API public v1 lti placements params
func (o *GetLearnAPIPublicV1LtiPlacementsParams) WithLimit(limit *int32) *GetLearnAPIPublicV1LtiPlacementsParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get learn API public v1 lti placements params
func (o *GetLearnAPIPublicV1LtiPlacementsParams) SetLimit(limit *int32) {
	o.Limit = limit
}

// WithName adds the name to the get learn API public v1 lti placements params
func (o *GetLearnAPIPublicV1LtiPlacementsParams) WithName(name *string) *GetLearnAPIPublicV1LtiPlacementsParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the get learn API public v1 lti placements params
func (o *GetLearnAPIPublicV1LtiPlacementsParams) SetName(name *string) {
	o.Name = name
}

// WithOffset adds the offset to the get learn API public v1 lti placements params
func (o *GetLearnAPIPublicV1LtiPlacementsParams) WithOffset(offset *int32) *GetLearnAPIPublicV1LtiPlacementsParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the get learn API public v1 lti placements params
func (o *GetLearnAPIPublicV1LtiPlacementsParams) SetOffset(offset *int32) {
	o.Offset = offset
}

// WithSort adds the sort to the get learn API public v1 lti placements params
func (o *GetLearnAPIPublicV1LtiPlacementsParams) WithSort(sort *string) *GetLearnAPIPublicV1LtiPlacementsParams {
	o.SetSort(sort)
	return o
}

// SetSort adds the sort to the get learn API public v1 lti placements params
func (o *GetLearnAPIPublicV1LtiPlacementsParams) SetSort(sort *string) {
	o.Sort = sort
}

// WithType adds the typeVar to the get learn API public v1 lti placements params
func (o *GetLearnAPIPublicV1LtiPlacementsParams) WithType(typeVar *string) *GetLearnAPIPublicV1LtiPlacementsParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the get learn API public v1 lti placements params
func (o *GetLearnAPIPublicV1LtiPlacementsParams) SetType(typeVar *string) {
	o.Type = typeVar
}

// WriteToRequest writes these params to a swagger request
func (o *GetLearnAPIPublicV1LtiPlacementsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AuthorID != nil {

		// query param authorId
		var qrAuthorID string
		if o.AuthorID != nil {
			qrAuthorID = *o.AuthorID
		}
		qAuthorID := qrAuthorID
		if qAuthorID != "" {
			if err := r.SetQueryParam("authorId", qAuthorID); err != nil {
				return err
			}
		}

	}

	if o.Fields != nil {

		// query param fields
		var qrFields string
		if o.Fields != nil {
			qrFields = *o.Fields
		}
		qFields := qrFields
		if qFields != "" {
			if err := r.SetQueryParam("fields", qFields); err != nil {
				return err
			}
		}

	}

	if o.Handle != nil {

		// query param handle
		var qrHandle string
		if o.Handle != nil {
			qrHandle = *o.Handle
		}
		qHandle := qrHandle
		if qHandle != "" {
			if err := r.SetQueryParam("handle", qHandle); err != nil {
				return err
			}
		}

	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int32
		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt32(qrLimit)
		if qLimit != "" {
			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}

	}

	if o.Name != nil {

		// query param name
		var qrName string
		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {
			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}

	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int32
		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt32(qrOffset)
		if qOffset != "" {
			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}

	}

	if o.Sort != nil {

		// query param sort
		var qrSort string
		if o.Sort != nil {
			qrSort = *o.Sort
		}
		qSort := qrSort
		if qSort != "" {
			if err := r.SetQueryParam("sort", qSort); err != nil {
				return err
			}
		}

	}

	if o.Type != nil {

		// query param type
		var qrType string
		if o.Type != nil {
			qrType = *o.Type
		}
		qType := qrType
		if qType != "" {
			if err := r.SetQueryParam("type", qType); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
