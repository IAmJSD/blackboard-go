// Code generated by go-swagger; DO NOT EDIT.

package deprecated_courses

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/jakemakesstuff/blackboard-go/models"
)

// PostLearnAPIPublicV1CoursesCourseIDCopyReader is a Reader for the PostLearnAPIPublicV1CoursesCourseIDCopy structure.
type PostLearnAPIPublicV1CoursesCourseIDCopyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostLearnAPIPublicV1CoursesCourseIDCopyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPostLearnAPIPublicV1CoursesCourseIDCopyAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostLearnAPIPublicV1CoursesCourseIDCopyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostLearnAPIPublicV1CoursesCourseIDCopyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostLearnAPIPublicV1CoursesCourseIDCopyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostLearnAPIPublicV1CoursesCourseIDCopyConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostLearnAPIPublicV1CoursesCourseIDCopyAccepted creates a PostLearnAPIPublicV1CoursesCourseIDCopyAccepted with default headers values
func NewPostLearnAPIPublicV1CoursesCourseIDCopyAccepted() *PostLearnAPIPublicV1CoursesCourseIDCopyAccepted {
	return &PostLearnAPIPublicV1CoursesCourseIDCopyAccepted{}
}

/*PostLearnAPIPublicV1CoursesCourseIDCopyAccepted handles this case with default header values.

Accepted
*/
type PostLearnAPIPublicV1CoursesCourseIDCopyAccepted struct {
	/*A URI to query the status of the corresponding copy operation
	 */
	Location string
}

func (o *PostLearnAPIPublicV1CoursesCourseIDCopyAccepted) Error() string {
	return fmt.Sprintf("[POST /learn/api/public/v1/courses/{courseId}/copy][%d] postLearnApiPublicV1CoursesCourseIdCopyAccepted ", 202)
}

func (o *PostLearnAPIPublicV1CoursesCourseIDCopyAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	return nil
}

// NewPostLearnAPIPublicV1CoursesCourseIDCopyBadRequest creates a PostLearnAPIPublicV1CoursesCourseIDCopyBadRequest with default headers values
func NewPostLearnAPIPublicV1CoursesCourseIDCopyBadRequest() *PostLearnAPIPublicV1CoursesCourseIDCopyBadRequest {
	return &PostLearnAPIPublicV1CoursesCourseIDCopyBadRequest{}
}

/*PostLearnAPIPublicV1CoursesCourseIDCopyBadRequest handles this case with default header values.

Bad Request
*/
type PostLearnAPIPublicV1CoursesCourseIDCopyBadRequest struct {
	Payload *models.RestException
}

func (o *PostLearnAPIPublicV1CoursesCourseIDCopyBadRequest) Error() string {
	return fmt.Sprintf("[POST /learn/api/public/v1/courses/{courseId}/copy][%d] postLearnApiPublicV1CoursesCourseIdCopyBadRequest  %+v", 400, o.Payload)
}

func (o *PostLearnAPIPublicV1CoursesCourseIDCopyBadRequest) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PostLearnAPIPublicV1CoursesCourseIDCopyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearnAPIPublicV1CoursesCourseIDCopyForbidden creates a PostLearnAPIPublicV1CoursesCourseIDCopyForbidden with default headers values
func NewPostLearnAPIPublicV1CoursesCourseIDCopyForbidden() *PostLearnAPIPublicV1CoursesCourseIDCopyForbidden {
	return &PostLearnAPIPublicV1CoursesCourseIDCopyForbidden{}
}

/*PostLearnAPIPublicV1CoursesCourseIDCopyForbidden handles this case with default header values.

Forbidden
*/
type PostLearnAPIPublicV1CoursesCourseIDCopyForbidden struct {
	Payload *models.RestException
}

func (o *PostLearnAPIPublicV1CoursesCourseIDCopyForbidden) Error() string {
	return fmt.Sprintf("[POST /learn/api/public/v1/courses/{courseId}/copy][%d] postLearnApiPublicV1CoursesCourseIdCopyForbidden  %+v", 403, o.Payload)
}

func (o *PostLearnAPIPublicV1CoursesCourseIDCopyForbidden) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PostLearnAPIPublicV1CoursesCourseIDCopyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearnAPIPublicV1CoursesCourseIDCopyNotFound creates a PostLearnAPIPublicV1CoursesCourseIDCopyNotFound with default headers values
func NewPostLearnAPIPublicV1CoursesCourseIDCopyNotFound() *PostLearnAPIPublicV1CoursesCourseIDCopyNotFound {
	return &PostLearnAPIPublicV1CoursesCourseIDCopyNotFound{}
}

/*PostLearnAPIPublicV1CoursesCourseIDCopyNotFound handles this case with default header values.

Not Found
*/
type PostLearnAPIPublicV1CoursesCourseIDCopyNotFound struct {
	Payload *models.RestException
}

func (o *PostLearnAPIPublicV1CoursesCourseIDCopyNotFound) Error() string {
	return fmt.Sprintf("[POST /learn/api/public/v1/courses/{courseId}/copy][%d] postLearnApiPublicV1CoursesCourseIdCopyNotFound  %+v", 404, o.Payload)
}

func (o *PostLearnAPIPublicV1CoursesCourseIDCopyNotFound) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PostLearnAPIPublicV1CoursesCourseIDCopyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearnAPIPublicV1CoursesCourseIDCopyConflict creates a PostLearnAPIPublicV1CoursesCourseIDCopyConflict with default headers values
func NewPostLearnAPIPublicV1CoursesCourseIDCopyConflict() *PostLearnAPIPublicV1CoursesCourseIDCopyConflict {
	return &PostLearnAPIPublicV1CoursesCourseIDCopyConflict{}
}

/*PostLearnAPIPublicV1CoursesCourseIDCopyConflict handles this case with default header values.

Conflict
*/
type PostLearnAPIPublicV1CoursesCourseIDCopyConflict struct {
	Payload *models.RestException
}

func (o *PostLearnAPIPublicV1CoursesCourseIDCopyConflict) Error() string {
	return fmt.Sprintf("[POST /learn/api/public/v1/courses/{courseId}/copy][%d] postLearnApiPublicV1CoursesCourseIdCopyConflict  %+v", 409, o.Payload)
}

func (o *PostLearnAPIPublicV1CoursesCourseIDCopyConflict) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PostLearnAPIPublicV1CoursesCourseIDCopyConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostLearnAPIPublicV1CoursesCourseIDCopyBody post learn API public v1 courses course ID copy body
swagger:model PostLearnAPIPublicV1CoursesCourseIDCopyBody
*/
type PostLearnAPIPublicV1CoursesCourseIDCopyBody struct {

	// The Course ID to copy into.
	// Required: true
	CourseID *string `json:"courseId"`
}

// Validate validates this post learn API public v1 courses course ID copy body
func (o *PostLearnAPIPublicV1CoursesCourseIDCopyBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCourseID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostLearnAPIPublicV1CoursesCourseIDCopyBody) validateCourseID(formats strfmt.Registry) error {

	if err := validate.Required("reqCourseObjToConvert"+"."+"courseId", "body", o.CourseID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostLearnAPIPublicV1CoursesCourseIDCopyBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostLearnAPIPublicV1CoursesCourseIDCopyBody) UnmarshalBinary(b []byte) error {
	var res PostLearnAPIPublicV1CoursesCourseIDCopyBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
