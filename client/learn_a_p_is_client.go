// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/jakemakesstuff/blackboard-go/client/announcements"
	"github.com/jakemakesstuff/blackboard-go/client/attendance"
	"github.com/jakemakesstuff/blackboard-go/client/calendar"
	"github.com/jakemakesstuff/blackboard-go/client/content"
	"github.com/jakemakesstuff/blackboard-go/client/content_file_attachments"
	"github.com/jakemakesstuff/blackboard-go/client/content_group_assignments"
	"github.com/jakemakesstuff/blackboard-go/client/content_resources"
	"github.com/jakemakesstuff/blackboard-go/client/content_review"
	"github.com/jakemakesstuff/blackboard-go/client/course_announcements"
	"github.com/jakemakesstuff/blackboard-go/client/course_assessments"
	"github.com/jakemakesstuff/blackboard-go/client/course_categories"
	"github.com/jakemakesstuff/blackboard-go/client/course_grade_attempts"
	"github.com/jakemakesstuff/blackboard-go/client/course_grade_notations"
	"github.com/jakemakesstuff/blackboard-go/client/course_gradebook_categories"
	"github.com/jakemakesstuff/blackboard-go/client/course_grades"
	"github.com/jakemakesstuff/blackboard-go/client/course_grading_periods"
	"github.com/jakemakesstuff/blackboard-go/client/course_group_users"
	"github.com/jakemakesstuff/blackboard-go/client/course_groups"
	"github.com/jakemakesstuff/blackboard-go/client/course_memberships"
	"github.com/jakemakesstuff/blackboard-go/client/courses"
	"github.com/jakemakesstuff/blackboard-go/client/data_sources"
	"github.com/jakemakesstuff/blackboard-go/client/deprecated_course_grades"
	"github.com/jakemakesstuff/blackboard-go/client/deprecated_course_group_users"
	"github.com/jakemakesstuff/blackboard-go/client/deprecated_course_groups"
	"github.com/jakemakesstuff/blackboard-go/client/deprecated_courses"
	"github.com/jakemakesstuff/blackboard-go/client/institutional_hierarchy"
	"github.com/jakemakesstuff/blackboard-go/client/lti"
	"github.com/jakemakesstuff/blackboard-go/client/oauth"
	"github.com/jakemakesstuff/blackboard-go/client/performance_dashboard"
	"github.com/jakemakesstuff/blackboard-go/client/proctoring"
	"github.com/jakemakesstuff/blackboard-go/client/roles"
	"github.com/jakemakesstuff/blackboard-go/client/s_i_s_logs"
	"github.com/jakemakesstuff/blackboard-go/client/sessions"
	"github.com/jakemakesstuff/blackboard-go/client/system"
	"github.com/jakemakesstuff/blackboard-go/client/terms"
	"github.com/jakemakesstuff/blackboard-go/client/uploads"
	"github.com/jakemakesstuff/blackboard-go/client/users"
)

// Default learn a p is HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "localhost"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new learn a p is HTTP client.
func NewHTTPClient(formats strfmt.Registry) *LearnAPIs {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new learn a p is HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *LearnAPIs {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new learn a p is client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *LearnAPIs {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(LearnAPIs)
	cli.Transport = transport
	cli.Announcements = announcements.New(transport, formats)
	cli.Attendance = attendance.New(transport, formats)
	cli.Calendar = calendar.New(transport, formats)
	cli.Content = content.New(transport, formats)
	cli.ContentFileAttachments = content_file_attachments.New(transport, formats)
	cli.ContentGroupAssignments = content_group_assignments.New(transport, formats)
	cli.ContentResources = content_resources.New(transport, formats)
	cli.ContentReview = content_review.New(transport, formats)
	cli.CourseAnnouncements = course_announcements.New(transport, formats)
	cli.CourseAssessments = course_assessments.New(transport, formats)
	cli.CourseCategories = course_categories.New(transport, formats)
	cli.CourseGradeAttempts = course_grade_attempts.New(transport, formats)
	cli.CourseGradeNotations = course_grade_notations.New(transport, formats)
	cli.CourseGradebookCategories = course_gradebook_categories.New(transport, formats)
	cli.CourseGrades = course_grades.New(transport, formats)
	cli.CourseGradingPeriods = course_grading_periods.New(transport, formats)
	cli.CourseGroupUsers = course_group_users.New(transport, formats)
	cli.CourseGroups = course_groups.New(transport, formats)
	cli.CourseMemberships = course_memberships.New(transport, formats)
	cli.Courses = courses.New(transport, formats)
	cli.DataSources = data_sources.New(transport, formats)
	cli.DeprecatedCourseGrades = deprecated_course_grades.New(transport, formats)
	cli.DeprecatedCourseGroupUsers = deprecated_course_group_users.New(transport, formats)
	cli.DeprecatedCourseGroups = deprecated_course_groups.New(transport, formats)
	cli.DeprecatedCourses = deprecated_courses.New(transport, formats)
	cli.InstitutionalHierarchy = institutional_hierarchy.New(transport, formats)
	cli.Lti = lti.New(transport, formats)
	cli.Oauth = oauth.New(transport, formats)
	cli.PerformanceDashboard = performance_dashboard.New(transport, formats)
	cli.Proctoring = proctoring.New(transport, formats)
	cli.Roles = roles.New(transport, formats)
	cli.SisLogs = s_i_s_logs.New(transport, formats)
	cli.Sessions = sessions.New(transport, formats)
	cli.System = system.New(transport, formats)
	cli.Terms = terms.New(transport, formats)
	cli.Uploads = uploads.New(transport, formats)
	cli.Users = users.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// LearnAPIs is a client for learn a p is
type LearnAPIs struct {
	Announcements announcements.ClientService

	Attendance attendance.ClientService

	Calendar calendar.ClientService

	Content content.ClientService

	ContentFileAttachments content_file_attachments.ClientService

	ContentGroupAssignments content_group_assignments.ClientService

	ContentResources content_resources.ClientService

	ContentReview content_review.ClientService

	CourseAnnouncements course_announcements.ClientService

	CourseAssessments course_assessments.ClientService

	CourseCategories course_categories.ClientService

	CourseGradeAttempts course_grade_attempts.ClientService

	CourseGradeNotations course_grade_notations.ClientService

	CourseGradebookCategories course_gradebook_categories.ClientService

	CourseGrades course_grades.ClientService

	CourseGradingPeriods course_grading_periods.ClientService

	CourseGroupUsers course_group_users.ClientService

	CourseGroups course_groups.ClientService

	CourseMemberships course_memberships.ClientService

	Courses courses.ClientService

	DataSources data_sources.ClientService

	DeprecatedCourseGrades deprecated_course_grades.ClientService

	DeprecatedCourseGroupUsers deprecated_course_group_users.ClientService

	DeprecatedCourseGroups deprecated_course_groups.ClientService

	DeprecatedCourses deprecated_courses.ClientService

	InstitutionalHierarchy institutional_hierarchy.ClientService

	Lti lti.ClientService

	Oauth oauth.ClientService

	PerformanceDashboard performance_dashboard.ClientService

	Proctoring proctoring.ClientService

	Roles roles.ClientService

	SisLogs s_i_s_logs.ClientService

	Sessions sessions.ClientService

	System system.ClientService

	Terms terms.ClientService

	Uploads uploads.ClientService

	Users users.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *LearnAPIs) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.Announcements.SetTransport(transport)
	c.Attendance.SetTransport(transport)
	c.Calendar.SetTransport(transport)
	c.Content.SetTransport(transport)
	c.ContentFileAttachments.SetTransport(transport)
	c.ContentGroupAssignments.SetTransport(transport)
	c.ContentResources.SetTransport(transport)
	c.ContentReview.SetTransport(transport)
	c.CourseAnnouncements.SetTransport(transport)
	c.CourseAssessments.SetTransport(transport)
	c.CourseCategories.SetTransport(transport)
	c.CourseGradeAttempts.SetTransport(transport)
	c.CourseGradeNotations.SetTransport(transport)
	c.CourseGradebookCategories.SetTransport(transport)
	c.CourseGrades.SetTransport(transport)
	c.CourseGradingPeriods.SetTransport(transport)
	c.CourseGroupUsers.SetTransport(transport)
	c.CourseGroups.SetTransport(transport)
	c.CourseMemberships.SetTransport(transport)
	c.Courses.SetTransport(transport)
	c.DataSources.SetTransport(transport)
	c.DeprecatedCourseGrades.SetTransport(transport)
	c.DeprecatedCourseGroupUsers.SetTransport(transport)
	c.DeprecatedCourseGroups.SetTransport(transport)
	c.DeprecatedCourses.SetTransport(transport)
	c.InstitutionalHierarchy.SetTransport(transport)
	c.Lti.SetTransport(transport)
	c.Oauth.SetTransport(transport)
	c.PerformanceDashboard.SetTransport(transport)
	c.Proctoring.SetTransport(transport)
	c.Roles.SetTransport(transport)
	c.SisLogs.SetTransport(transport)
	c.Sessions.SetTransport(transport)
	c.System.SetTransport(transport)
	c.Terms.SetTransport(transport)
	c.Uploads.SetTransport(transport)
	c.Users.SetTransport(transport)
}
