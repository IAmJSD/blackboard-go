// Code generated by go-swagger; DO NOT EDIT.

package oauth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new oauth API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for oauth API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	GetLearnAPIPublicV1Oauth2Authorizationcode(params *GetLearnAPIPublicV1Oauth2AuthorizationcodeParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1Oauth2AuthorizationcodeOK, error)

	GetLearnAPIPublicV1Oauth2Tokeninfo(params *GetLearnAPIPublicV1Oauth2TokeninfoParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1Oauth2TokeninfoOK, error)

	PostLearnAPIPublicV1Oauth2Token(params *PostLearnAPIPublicV1Oauth2TokenParams, authInfo runtime.ClientAuthInfoWriter) (*PostLearnAPIPublicV1Oauth2TokenOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  GetLearnAPIPublicV1Oauth2Authorizationcode authorizations code

  Requests an OAuth 2 authorization code. Use of PKCE standard is optional, but highly recommended.

**Since**: 3200.7.0
*/
func (a *Client) GetLearnAPIPublicV1Oauth2Authorizationcode(params *GetLearnAPIPublicV1Oauth2AuthorizationcodeParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1Oauth2AuthorizationcodeOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1Oauth2AuthorizationcodeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1Oauth2Authorizationcode",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/oauth2/authorizationcode",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1Oauth2AuthorizationcodeReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1Oauth2AuthorizationcodeOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1Oauth2Authorizationcode: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV1Oauth2Tokeninfo gets token info

  Requests an OAuth 2 access token info.

**Since**: 3700.6.0
*/
func (a *Client) GetLearnAPIPublicV1Oauth2Tokeninfo(params *GetLearnAPIPublicV1Oauth2TokeninfoParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1Oauth2TokeninfoOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1Oauth2TokeninfoParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1Oauth2Tokeninfo",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/oauth2/tokeninfo",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1Oauth2TokeninfoReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1Oauth2TokeninfoOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1Oauth2Tokeninfo: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostLearnAPIPublicV1Oauth2Token requests token

  Requests an OAuth 2 access token.

**Since**: 2015.11.0
*/
func (a *Client) PostLearnAPIPublicV1Oauth2Token(params *PostLearnAPIPublicV1Oauth2TokenParams, authInfo runtime.ClientAuthInfoWriter) (*PostLearnAPIPublicV1Oauth2TokenOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostLearnAPIPublicV1Oauth2TokenParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostLearnAPIPublicV1Oauth2Token",
		Method:             "POST",
		PathPattern:        "/learn/api/public/v1/oauth2/token",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/x-www-form-urlencoded"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostLearnAPIPublicV1Oauth2TokenReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostLearnAPIPublicV1Oauth2TokenOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostLearnAPIPublicV1Oauth2Token: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
