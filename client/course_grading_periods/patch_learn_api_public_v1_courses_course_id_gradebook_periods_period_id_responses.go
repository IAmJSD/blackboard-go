// Code generated by go-swagger; DO NOT EDIT.

package course_grading_periods

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/jakemakesstuff/blackboard-go/models"
)

// PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDReader is a Reader for the PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodID structure.
type PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDOK creates a PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDOK with default headers values
func NewPatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDOK() *PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDOK {
	return &PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDOK{}
}

/*PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDOK handles this case with default header values.

OK
*/
type PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDOK struct {
	Payload *models.GradingPeriod
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDOK) Error() string {
	return fmt.Sprintf("[PATCH /learn/api/public/v1/courses/{courseId}/gradebook/periods/{periodId}][%d] patchLearnApiPublicV1CoursesCourseIdGradebookPeriodsPeriodIdOK  %+v", 200, o.Payload)
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDOK) GetPayload() *models.GradingPeriod {
	return o.Payload
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GradingPeriod)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDBadRequest creates a PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDBadRequest with default headers values
func NewPatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDBadRequest() *PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDBadRequest {
	return &PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDBadRequest{}
}

/*PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDBadRequest handles this case with default header values.

Bad Request
*/
type PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDBadRequest struct {
	Payload *models.RestException
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /learn/api/public/v1/courses/{courseId}/gradebook/periods/{periodId}][%d] patchLearnApiPublicV1CoursesCourseIdGradebookPeriodsPeriodIdBadRequest  %+v", 400, o.Payload)
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDBadRequest) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDForbidden creates a PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDForbidden with default headers values
func NewPatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDForbidden() *PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDForbidden {
	return &PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDForbidden{}
}

/*PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDForbidden handles this case with default header values.

Forbidden
*/
type PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDForbidden struct {
	Payload *models.RestException
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDForbidden) Error() string {
	return fmt.Sprintf("[PATCH /learn/api/public/v1/courses/{courseId}/gradebook/periods/{periodId}][%d] patchLearnApiPublicV1CoursesCourseIdGradebookPeriodsPeriodIdForbidden  %+v", 403, o.Payload)
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDForbidden) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDNotFound creates a PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDNotFound with default headers values
func NewPatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDNotFound() *PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDNotFound {
	return &PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDNotFound{}
}

/*PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDNotFound handles this case with default header values.

Not Found
*/
type PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDNotFound struct {
	Payload *models.RestException
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /learn/api/public/v1/courses/{courseId}/gradebook/periods/{periodId}][%d] patchLearnApiPublicV1CoursesCourseIdGradebookPeriodsPeriodIdNotFound  %+v", 404, o.Payload)
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDNotFound) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDBody patch learn API public v1 courses course ID gradebook periods period ID body
swagger:model PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDBody
*/
type PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDBody struct {

	// Property may be set to DoNotUseDates to explicitly blank dates,  in which case startDate and endDate are ignored; otherwise set to  UseDates; in this case startDate and endDate must be included and valid.
	//
	//
	// | Type      | Description
	//  | --------- | --------- |
	// | DoNotUseDates | Do not use dates |
	// | UseDates | Use dates |
	//
	// Enum: [DoNotUseDates UseDates]
	DateMode string `json:"dateMode,omitempty"`

	// The description of the grading period. Length is limited to 1000 characters.
	Description string `json:"description,omitempty"`

	// If start and end are set, and start is before end, these define temporal  coverage of grading period which may be used to associate GradableItems (Columns) by due date. End dates will be persisted as ending at  23:59:59 on the submitted day.
	// Format: date-time
	End strfmt.DateTime `json:"end,omitempty"`

	// The relative position of the grading period to other grading periods when viewed in the grade book.
	Position int32 `json:"position,omitempty"`

	// If start and end are set, and start is before end, these define temporal  coverage of grading period which may be used to associate GradableItems (Columns) by due date. Start dates will be persisted as starting at  00:00:00 on the submitted day.
	// Format: date-time
	Start strfmt.DateTime `json:"start,omitempty"`

	// The title of the grading period. Length is limited to 64 characters.
	Title string `json:"title,omitempty"`
}

// Validate validates this patch learn API public v1 courses course ID gradebook periods period ID body
func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDateMode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEnd(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStart(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var patchLearnApiPublicV1CoursesCourseIdGradebookPeriodsPeriodIdBodyTypeDateModePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DoNotUseDates","UseDates"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		patchLearnApiPublicV1CoursesCourseIdGradebookPeriodsPeriodIdBodyTypeDateModePropEnum = append(patchLearnApiPublicV1CoursesCourseIdGradebookPeriodsPeriodIdBodyTypeDateModePropEnum, v)
	}
}

const (

	// PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDBodyDateModeDoNotUseDates captures enum value "DoNotUseDates"
	PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDBodyDateModeDoNotUseDates string = "DoNotUseDates"

	// PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDBodyDateModeUseDates captures enum value "UseDates"
	PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDBodyDateModeUseDates string = "UseDates"
)

// prop value enum
func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDBody) validateDateModeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, patchLearnApiPublicV1CoursesCourseIdGradebookPeriodsPeriodIdBodyTypeDateModePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDBody) validateDateMode(formats strfmt.Registry) error {

	if swag.IsZero(o.DateMode) { // not required
		return nil
	}

	// value enum
	if err := o.validateDateModeEnum("input"+"."+"dateMode", "body", o.DateMode); err != nil {
		return err
	}

	return nil
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDBody) validateEnd(formats strfmt.Registry) error {

	if swag.IsZero(o.End) { // not required
		return nil
	}

	if err := validate.FormatOf("input"+"."+"end", "body", "date-time", o.End.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDBody) validateStart(formats strfmt.Registry) error {

	if swag.IsZero(o.Start) { // not required
		return nil
	}

	if err := validate.FormatOf("input"+"."+"start", "body", "date-time", o.Start.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDBody) UnmarshalBinary(b []byte) error {
	var res PatchLearnAPIPublicV1CoursesCourseIDGradebookPeriodsPeriodIDBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
