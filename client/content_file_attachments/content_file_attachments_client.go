// Code generated by go-swagger; DO NOT EDIT.

package content_file_attachments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new content file attachments API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for content file attachments API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentID(params *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentIDNoContent, error)

	GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachments(params *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsOK, error)

	GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentID(params *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentIDOK, error)

	GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentIDDownload(params *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentIDDownloadParams, authInfo runtime.ClientAuthInfoWriter) error

	PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachments(params *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams, authInfo runtime.ClientAuthInfoWriter) (*PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsCreated, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentID deletes file attachment

  Delete file attachment meta data by attachment ID

Supported Content Item Types: Content File (resource/x-bb-file), Document (resource/x-bb-document), Classic Assignment(resource/x-bb-assignment) for a Classic Course

**Since**: 3400.9.0
*/
func (a *Client) DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentID(params *DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentIDNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentID",
		Method:             "DELETE",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/contents/{contentId}/attachments/{attachmentId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentIDNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachments gets file attachments

  Get the file attachment meta data associated to the Content Item

Supported Content Item Types: Content File (resource/x-bb-file), Document (resource/x-bb-document), Classic Assignment (resource/x-bb-assignment) (Since 3400.9.0) for a Classic Course

**Since**: 3200.8.0
*/
func (a *Client) GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachments(params *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachments",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/contents/{contentId}/attachments",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachments: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentID gets file attachment

  Get the file attachment meta data by an attachment ID

Supported Content Item Types: Content File (resource/x-bb-file), Document (resource/x-bb-document), Classic Assignment(resource/x-bb-assignment) (Since 3400.9.0) for a Classic Course

**Since**: 3200.8.0
*/
func (a *Client) GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentID(params *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentID",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/contents/{contentId}/attachments/{attachmentId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentIDDownload downloads

  Download the contents of a Content Item.

Supported Content Item Types: Content File (resource/x-bb-file), Document (resource/x-bb-document), Classic Assignment (resource/x-bb-assignment) (Since 3400.9.0) for a Classic Course

**Since**: 3200.8.0
*/
func (a *Client) GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentIDDownload(params *GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentIDDownloadParams, authInfo runtime.ClientAuthInfoWriter) error {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentIDDownloadParams()
	}

	_, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentIDDownload",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/contents/{contentId}/attachments/{attachmentId}/download",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsAttachmentIDDownloadReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return err
	}
	return nil
}

/*
  PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachments creates file attachment

  Attach an uploaded file to a Content item.

Supported Content Item Types: Content File (resource/x-bb-file), Document (resource/x-bb-document), Classic Assignment (resource/x-bb-assignment) for a Classic Course

**Since**: 3400.9.0
*/
func (a *Client) PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachments(params *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams, authInfo runtime.ClientAuthInfoWriter) (*PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachments",
		Method:             "POST",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/contents/{contentId}/attachments",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachments: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
