// Code generated by go-swagger; DO NOT EDIT.

package content_file_attachments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams creates a new PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams object
// with the default values initialized.
func NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams() *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams {
	var ()
	return &PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParamsWithTimeout creates a new PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParamsWithTimeout(timeout time.Duration) *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams {
	var ()
	return &PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams{

		timeout: timeout,
	}
}

// NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParamsWithContext creates a new PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParamsWithContext(ctx context.Context) *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams {
	var ()
	return &PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams{

		Context: ctx,
	}
}

// NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParamsWithHTTPClient creates a new PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParamsWithHTTPClient(client *http.Client) *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams {
	var ()
	return &PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams{
		HTTPClient: client,
	}
}

/*PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams contains all the parameters to send to the API endpoint
for the post learn API public v1 courses course ID contents content ID attachments operation typically these are written to a http.Request
*/
type PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams struct {

	/*ContentID
	 The Content ID.  This may be the primary ID, or any of the following keywords: interactive, indirect, root.

	| ID type    | Example                               |
	|------------|---------------------------------------|
	| primary    | _123_1                                |
	| keyword    | root                                  |


	*/
	ContentID string
	/*CourseID
	 The course or organization ID.  This may be the primary ID, or any of the secondary IDs prefixed with the ID type.

	| ID type    | Example                               |
	|------------|---------------------------------------|
	| primary    | _123_1                                |
	| externalId | externalId:math101                    |
	| courseId   | courseId:math101                      |
	| uuid       | uuid:915c7567d76d444abf1eed56aad3beb5 |


	*/
	CourseID string
	/*InputFileAttachment*/
	InputFileAttachment interface{}

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post learn API public v1 courses course ID contents content ID attachments params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams) WithTimeout(timeout time.Duration) *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post learn API public v1 courses course ID contents content ID attachments params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post learn API public v1 courses course ID contents content ID attachments params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams) WithContext(ctx context.Context) *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post learn API public v1 courses course ID contents content ID attachments params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post learn API public v1 courses course ID contents content ID attachments params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams) WithHTTPClient(client *http.Client) *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post learn API public v1 courses course ID contents content ID attachments params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithContentID adds the contentID to the post learn API public v1 courses course ID contents content ID attachments params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams) WithContentID(contentID string) *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams {
	o.SetContentID(contentID)
	return o
}

// SetContentID adds the contentId to the post learn API public v1 courses course ID contents content ID attachments params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams) SetContentID(contentID string) {
	o.ContentID = contentID
}

// WithCourseID adds the courseID to the post learn API public v1 courses course ID contents content ID attachments params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams) WithCourseID(courseID string) *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams {
	o.SetCourseID(courseID)
	return o
}

// SetCourseID adds the courseId to the post learn API public v1 courses course ID contents content ID attachments params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams) SetCourseID(courseID string) {
	o.CourseID = courseID
}

// WithInputFileAttachment adds the inputFileAttachment to the post learn API public v1 courses course ID contents content ID attachments params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams) WithInputFileAttachment(inputFileAttachment interface{}) *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams {
	o.SetInputFileAttachment(inputFileAttachment)
	return o
}

// SetInputFileAttachment adds the inputFileAttachment to the post learn API public v1 courses course ID contents content ID attachments params
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams) SetInputFileAttachment(inputFileAttachment interface{}) {
	o.InputFileAttachment = inputFileAttachment
}

// WriteToRequest writes these params to a swagger request
func (o *PostLearnAPIPublicV1CoursesCourseIDContentsContentIDAttachmentsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param contentId
	if err := r.SetPathParam("contentId", o.ContentID); err != nil {
		return err
	}

	// path param courseId
	if err := r.SetPathParam("courseId", o.CourseID); err != nil {
		return err
	}

	if o.InputFileAttachment != nil {
		if err := r.SetBodyParam(o.InputFileAttachment); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
