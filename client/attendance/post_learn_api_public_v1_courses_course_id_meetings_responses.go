// Code generated by go-swagger; DO NOT EDIT.

package attendance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/jakemakesstuff/blackboard-go/models"
)

// PostLearnAPIPublicV1CoursesCourseIDMeetingsReader is a Reader for the PostLearnAPIPublicV1CoursesCourseIDMeetings structure.
type PostLearnAPIPublicV1CoursesCourseIDMeetingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostLearnAPIPublicV1CoursesCourseIDMeetingsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostLearnAPIPublicV1CoursesCourseIDMeetingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostLearnAPIPublicV1CoursesCourseIDMeetingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostLearnAPIPublicV1CoursesCourseIDMeetingsCreated creates a PostLearnAPIPublicV1CoursesCourseIDMeetingsCreated with default headers values
func NewPostLearnAPIPublicV1CoursesCourseIDMeetingsCreated() *PostLearnAPIPublicV1CoursesCourseIDMeetingsCreated {
	return &PostLearnAPIPublicV1CoursesCourseIDMeetingsCreated{}
}

/*PostLearnAPIPublicV1CoursesCourseIDMeetingsCreated handles this case with default header values.

Created
*/
type PostLearnAPIPublicV1CoursesCourseIDMeetingsCreated struct {
	Payload *models.CourseMeeting
}

func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsCreated) Error() string {
	return fmt.Sprintf("[POST /learn/api/public/v1/courses/{courseId}/meetings][%d] postLearnApiPublicV1CoursesCourseIdMeetingsCreated  %+v", 201, o.Payload)
}

func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsCreated) GetPayload() *models.CourseMeeting {
	return o.Payload
}

func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CourseMeeting)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearnAPIPublicV1CoursesCourseIDMeetingsBadRequest creates a PostLearnAPIPublicV1CoursesCourseIDMeetingsBadRequest with default headers values
func NewPostLearnAPIPublicV1CoursesCourseIDMeetingsBadRequest() *PostLearnAPIPublicV1CoursesCourseIDMeetingsBadRequest {
	return &PostLearnAPIPublicV1CoursesCourseIDMeetingsBadRequest{}
}

/*PostLearnAPIPublicV1CoursesCourseIDMeetingsBadRequest handles this case with default header values.

The request did not specify valid data
*/
type PostLearnAPIPublicV1CoursesCourseIDMeetingsBadRequest struct {
	Payload *models.RestException
}

func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsBadRequest) Error() string {
	return fmt.Sprintf("[POST /learn/api/public/v1/courses/{courseId}/meetings][%d] postLearnApiPublicV1CoursesCourseIdMeetingsBadRequest  %+v", 400, o.Payload)
}

func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsBadRequest) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLearnAPIPublicV1CoursesCourseIDMeetingsForbidden creates a PostLearnAPIPublicV1CoursesCourseIDMeetingsForbidden with default headers values
func NewPostLearnAPIPublicV1CoursesCourseIDMeetingsForbidden() *PostLearnAPIPublicV1CoursesCourseIDMeetingsForbidden {
	return &PostLearnAPIPublicV1CoursesCourseIDMeetingsForbidden{}
}

/*PostLearnAPIPublicV1CoursesCourseIDMeetingsForbidden handles this case with default header values.

The user does not have entitlements to create Meetings
*/
type PostLearnAPIPublicV1CoursesCourseIDMeetingsForbidden struct {
	Payload *models.RestException
}

func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsForbidden) Error() string {
	return fmt.Sprintf("[POST /learn/api/public/v1/courses/{courseId}/meetings][%d] postLearnApiPublicV1CoursesCourseIdMeetingsForbidden  %+v", 403, o.Payload)
}

func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsForbidden) GetPayload() *models.RestException {
	return o.Payload
}

func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostLearnAPIPublicV1CoursesCourseIDMeetingsBody post learn API public v1 courses course ID meetings body
swagger:model PostLearnAPIPublicV1CoursesCourseIDMeetingsBody
*/
type PostLearnAPIPublicV1CoursesCourseIDMeetingsBody struct {

	// The primary ID of the course.
	// Required: true
	CourseID *string `json:"courseId"`

	// The description of the meeting
	// Required: true
	Description *string `json:"description"`

	// The end time of meeting
	// Required: true
	// Format: date-time
	End *strfmt.DateTime `json:"end"`

	// The externalLink of course meeting
	ExternalLink string `json:"externalLink,omitempty"`

	// The start time of meeting
	// Required: true
	// Format: date-time
	Start *strfmt.DateTime `json:"start"`

	// The title of the meeting
	// Required: true
	Title *string `json:"title"`
}

// Validate validates this post learn API public v1 courses course ID meetings body
func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCourseID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDescription(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEnd(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStart(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTitle(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsBody) validateCourseID(formats strfmt.Registry) error {

	if err := validate.Required("input"+"."+"courseId", "body", o.CourseID); err != nil {
		return err
	}

	return nil
}

func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsBody) validateDescription(formats strfmt.Registry) error {

	if err := validate.Required("input"+"."+"description", "body", o.Description); err != nil {
		return err
	}

	return nil
}

func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsBody) validateEnd(formats strfmt.Registry) error {

	if err := validate.Required("input"+"."+"end", "body", o.End); err != nil {
		return err
	}

	if err := validate.FormatOf("input"+"."+"end", "body", "date-time", o.End.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsBody) validateStart(formats strfmt.Registry) error {

	if err := validate.Required("input"+"."+"start", "body", o.Start); err != nil {
		return err
	}

	if err := validate.FormatOf("input"+"."+"start", "body", "date-time", o.Start.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsBody) validateTitle(formats strfmt.Registry) error {

	if err := validate.Required("input"+"."+"title", "body", o.Title); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsBody) UnmarshalBinary(b []byte) error {
	var res PostLearnAPIPublicV1CoursesCourseIDMeetingsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
