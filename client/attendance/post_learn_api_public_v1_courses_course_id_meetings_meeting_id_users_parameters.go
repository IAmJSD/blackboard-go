// Code generated by go-swagger; DO NOT EDIT.

package attendance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams creates a new PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams object
// with the default values initialized.
func NewPostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams() *PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams {
	var ()
	return &PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParamsWithTimeout creates a new PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParamsWithTimeout(timeout time.Duration) *PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams {
	var ()
	return &PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams{

		timeout: timeout,
	}
}

// NewPostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParamsWithContext creates a new PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParamsWithContext(ctx context.Context) *PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams {
	var ()
	return &PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams{

		Context: ctx,
	}
}

// NewPostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParamsWithHTTPClient creates a new PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParamsWithHTTPClient(client *http.Client) *PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams {
	var ()
	return &PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams{
		HTTPClient: client,
	}
}

/*PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams contains all the parameters to send to the API endpoint
for the post learn API public v1 courses course ID meetings meeting ID users operation typically these are written to a http.Request
*/
type PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams struct {

	/*CourseID
	 The course or organization ID.  This may be the primary ID, or any of the secondary IDs prefixed with the ID type.

	| ID type    | Example                               |
	|------------|---------------------------------------|
	| primary    | _123_1                                |
	| externalId | externalId:math101                    |
	| courseId   | courseId:math101                      |
	| uuid       | uuid:915c7567d76d444abf1eed56aad3beb5 |


	*/
	CourseID string
	/*Fields
	  A comma-delimited list of fields to include in the response. If not specified, all fields will be returned.

	*/
	Fields *string
	/*Input
	  JSON input object.

	*/
	Input PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersBody
	/*MeetingID*/
	MeetingID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post learn API public v1 courses course ID meetings meeting ID users params
func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams) WithTimeout(timeout time.Duration) *PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post learn API public v1 courses course ID meetings meeting ID users params
func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post learn API public v1 courses course ID meetings meeting ID users params
func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams) WithContext(ctx context.Context) *PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post learn API public v1 courses course ID meetings meeting ID users params
func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post learn API public v1 courses course ID meetings meeting ID users params
func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams) WithHTTPClient(client *http.Client) *PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post learn API public v1 courses course ID meetings meeting ID users params
func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCourseID adds the courseID to the post learn API public v1 courses course ID meetings meeting ID users params
func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams) WithCourseID(courseID string) *PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams {
	o.SetCourseID(courseID)
	return o
}

// SetCourseID adds the courseId to the post learn API public v1 courses course ID meetings meeting ID users params
func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams) SetCourseID(courseID string) {
	o.CourseID = courseID
}

// WithFields adds the fields to the post learn API public v1 courses course ID meetings meeting ID users params
func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams) WithFields(fields *string) *PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the post learn API public v1 courses course ID meetings meeting ID users params
func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams) SetFields(fields *string) {
	o.Fields = fields
}

// WithInput adds the input to the post learn API public v1 courses course ID meetings meeting ID users params
func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams) WithInput(input PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersBody) *PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams {
	o.SetInput(input)
	return o
}

// SetInput adds the input to the post learn API public v1 courses course ID meetings meeting ID users params
func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams) SetInput(input PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersBody) {
	o.Input = input
}

// WithMeetingID adds the meetingID to the post learn API public v1 courses course ID meetings meeting ID users params
func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams) WithMeetingID(meetingID string) *PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams {
	o.SetMeetingID(meetingID)
	return o
}

// SetMeetingID adds the meetingId to the post learn API public v1 courses course ID meetings meeting ID users params
func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams) SetMeetingID(meetingID string) {
	o.MeetingID = meetingID
}

// WriteToRequest writes these params to a swagger request
func (o *PostLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDUsersParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param courseId
	if err := r.SetPathParam("courseId", o.CourseID); err != nil {
		return err
	}

	if o.Fields != nil {

		// query param fields
		var qrFields string
		if o.Fields != nil {
			qrFields = *o.Fields
		}
		qFields := qrFields
		if qFields != "" {
			if err := r.SetQueryParam("fields", qFields); err != nil {
				return err
			}
		}

	}

	if err := r.SetBodyParam(o.Input); err != nil {
		return err
	}

	// path param meetingId
	if err := r.SetPathParam("meetingId", o.MeetingID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
