// Code generated by go-swagger; DO NOT EDIT.

package attendance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jakemakesstuff/blackboard-go/models"
)

// GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDReader is a Reader for the GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingID structure.
type GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDOK creates a GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDOK with default headers values
func NewGetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDOK() *GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDOK {
	return &GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDOK{}
}

/*GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDOK handles this case with default header values.

OK
*/
type GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDOK struct {
	Payload *models.CourseMeeting
}

func (o *GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDOK) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/courses/{courseId}/meetings/{meetingId}][%d] getLearnApiPublicV1CoursesCourseIdMeetingsMeetingIdOK  %+v", 200, o.Payload)
}

func (o *GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDOK) GetPayload() *models.CourseMeeting {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CourseMeeting)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDBadRequest creates a GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDBadRequest with default headers values
func NewGetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDBadRequest() *GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDBadRequest {
	return &GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDBadRequest{}
}

/*GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDBadRequest handles this case with default header values.

Failed to get meeting; or The request did not specify a valid meetingId
*/
type GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDBadRequest struct {
	Payload *models.RestException
}

func (o *GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/courses/{courseId}/meetings/{meetingId}][%d] getLearnApiPublicV1CoursesCourseIdMeetingsMeetingIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDBadRequest) GetPayload() *models.RestException {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDNotFound creates a GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDNotFound with default headers values
func NewGetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDNotFound() *GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDNotFound {
	return &GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDNotFound{}
}

/*GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDNotFound handles this case with default header values.

The meeting is not found
*/
type GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDNotFound struct {
	Payload *models.RestException
}

func (o *GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDNotFound) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/courses/{courseId}/meetings/{meetingId}][%d] getLearnApiPublicV1CoursesCourseIdMeetingsMeetingIdNotFound  %+v", 404, o.Payload)
}

func (o *GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDNotFound) GetPayload() *models.RestException {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CoursesCourseIDMeetingsMeetingIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
