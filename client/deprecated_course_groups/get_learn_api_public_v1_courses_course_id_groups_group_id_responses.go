// Code generated by go-swagger; DO NOT EDIT.

package deprecated_course_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jakemakesstuff/blackboard-go/models"
)

// GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDReader is a Reader for the GetLearnAPIPublicV1CoursesCourseIDGroupsGroupID structure.
type GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDOK creates a GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDOK with default headers values
func NewGetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDOK() *GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDOK {
	return &GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDOK{}
}

/*GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDOK handles this case with default header values.

OK
*/
type GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDOK struct {
	Payload *models.Group
}

func (o *GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDOK) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/courses/{courseId}/groups/{groupId}][%d] getLearnApiPublicV1CoursesCourseIdGroupsGroupIdOK  %+v", 200, o.Payload)
}

func (o *GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDOK) GetPayload() *models.Group {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Group)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDBadRequest creates a GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDBadRequest with default headers values
func NewGetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDBadRequest() *GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDBadRequest {
	return &GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDBadRequest{}
}

/*GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDBadRequest handles this case with default header values.

Bad Request
*/
type GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDBadRequest struct {
	Payload *models.RestException
}

func (o *GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/courses/{courseId}/groups/{groupId}][%d] getLearnApiPublicV1CoursesCourseIdGroupsGroupIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDBadRequest) GetPayload() *models.RestException {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDForbidden creates a GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDForbidden with default headers values
func NewGetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDForbidden() *GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDForbidden {
	return &GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDForbidden{}
}

/*GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDForbidden handles this case with default header values.

Forbidden
*/
type GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDForbidden struct {
	Payload *models.RestException
}

func (o *GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDForbidden) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/courses/{courseId}/groups/{groupId}][%d] getLearnApiPublicV1CoursesCourseIdGroupsGroupIdForbidden  %+v", 403, o.Payload)
}

func (o *GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDForbidden) GetPayload() *models.RestException {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDNotFound creates a GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDNotFound with default headers values
func NewGetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDNotFound() *GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDNotFound {
	return &GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDNotFound{}
}

/*GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDNotFound handles this case with default header values.

Not Found
*/
type GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDNotFound struct {
	Payload *models.RestException
}

func (o *GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDNotFound) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/courses/{courseId}/groups/{groupId}][%d] getLearnApiPublicV1CoursesCourseIdGroupsGroupIdNotFound  %+v", 404, o.Payload)
}

func (o *GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDNotFound) GetPayload() *models.RestException {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
