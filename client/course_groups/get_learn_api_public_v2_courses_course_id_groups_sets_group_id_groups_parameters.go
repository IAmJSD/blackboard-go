// Code generated by go-swagger; DO NOT EDIT.

package course_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams creates a new GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams object
// with the default values initialized.
func NewGetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams() *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams {
	var ()
	return &GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParamsWithTimeout creates a new GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParamsWithTimeout(timeout time.Duration) *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams {
	var ()
	return &GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams{

		timeout: timeout,
	}
}

// NewGetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParamsWithContext creates a new GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParamsWithContext(ctx context.Context) *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams {
	var ()
	return &GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams{

		Context: ctx,
	}
}

// NewGetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParamsWithHTTPClient creates a new GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParamsWithHTTPClient(client *http.Client) *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams {
	var ()
	return &GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams{
		HTTPClient: client,
	}
}

/*GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams contains all the parameters to send to the API endpoint
for the get learn API public v2 courses course ID groups sets group ID groups operation typically these are written to a http.Request
*/
type GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams struct {

	/*CourseID
	 The course or organization ID.  This may be the primary ID, or any of the secondary IDs prefixed with the ID type.

	| ID type    | Example                               |
	|------------|---------------------------------------|
	| primary    | _123_1                                |
	| externalId | externalId:math101                    |
	| courseId   | courseId:math101                      |
	| uuid       | uuid:915c7567d76d444abf1eed56aad3beb5 |


	*/
	CourseID string
	/*Created
	  Search for groups with created date relative to this value. 'createdCompare' may also be sent to control search behavior.

	**Since**: 3800.8.0

	*/
	Created *strfmt.DateTime
	/*CreatedCompare
	  Used alongside the 'created' search parameter.

	Defaults to greaterOrEqual if not specified.

	**Since**: 3800.8.0


	| Type      | Description
	 | --------- | --------- |
	| lessThan |  |
	| greaterOrEqual |  |


	*/
	CreatedCompare *string
	/*Fields
	  A comma-delimited list of fields to include in the response. If not specified, all fields will be returned.

	*/
	Fields *string
	/*GroupID
	 The group ID.  This may be the primary ID, or any of the secondary IDs prefixed with the ID type.

	| ID type    | Example                               |
	|------------|---------------------------------------|
	| primary    | _123_1                                |
	| externalId | externalId:breakfastClub              |


	*/
	GroupID string
	/*Limit
	  The maximum number of results to be returned. There may be less if the query returned less than the maximum.

	*/
	Limit *int32
	/*Modified
	  Search for groups with modified date relative to this value. 'modifiedCompare' may also be sent to control search behavior.

	**Since**: 3800.8.0

	*/
	Modified *strfmt.DateTime
	/*ModifiedCompare
	  Used alongside the 'modified' search parameter.

	Defaults to greaterOrEqual if not specified.

	**Since**: 3800.8.0


	| Type      | Description
	 | --------- | --------- |
	| lessThan |  |
	| greaterOrEqual |  |


	*/
	ModifiedCompare *string
	/*Offset
	  The number of rows to skip before beginning to return rows. An offset of 0 is the same as omitting the offset parameter.

	*/
	Offset *int32
	/*Sort
	  Properties to sort by. This is a comma-delimited list of JSON properties, with an optional "(desc)" suffix to request a descending sort for that property. e.g. "name(desc)" Supported fields are:

	- name
	- externalId

	**Since**: 3100.4.0

	*/
	Sort *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get learn API public v2 courses course ID groups sets group ID groups params
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams) WithTimeout(timeout time.Duration) *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get learn API public v2 courses course ID groups sets group ID groups params
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get learn API public v2 courses course ID groups sets group ID groups params
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams) WithContext(ctx context.Context) *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get learn API public v2 courses course ID groups sets group ID groups params
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get learn API public v2 courses course ID groups sets group ID groups params
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams) WithHTTPClient(client *http.Client) *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get learn API public v2 courses course ID groups sets group ID groups params
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCourseID adds the courseID to the get learn API public v2 courses course ID groups sets group ID groups params
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams) WithCourseID(courseID string) *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams {
	o.SetCourseID(courseID)
	return o
}

// SetCourseID adds the courseId to the get learn API public v2 courses course ID groups sets group ID groups params
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams) SetCourseID(courseID string) {
	o.CourseID = courseID
}

// WithCreated adds the created to the get learn API public v2 courses course ID groups sets group ID groups params
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams) WithCreated(created *strfmt.DateTime) *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams {
	o.SetCreated(created)
	return o
}

// SetCreated adds the created to the get learn API public v2 courses course ID groups sets group ID groups params
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams) SetCreated(created *strfmt.DateTime) {
	o.Created = created
}

// WithCreatedCompare adds the createdCompare to the get learn API public v2 courses course ID groups sets group ID groups params
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams) WithCreatedCompare(createdCompare *string) *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams {
	o.SetCreatedCompare(createdCompare)
	return o
}

// SetCreatedCompare adds the createdCompare to the get learn API public v2 courses course ID groups sets group ID groups params
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams) SetCreatedCompare(createdCompare *string) {
	o.CreatedCompare = createdCompare
}

// WithFields adds the fields to the get learn API public v2 courses course ID groups sets group ID groups params
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams) WithFields(fields *string) *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the get learn API public v2 courses course ID groups sets group ID groups params
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams) SetFields(fields *string) {
	o.Fields = fields
}

// WithGroupID adds the groupID to the get learn API public v2 courses course ID groups sets group ID groups params
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams) WithGroupID(groupID string) *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams {
	o.SetGroupID(groupID)
	return o
}

// SetGroupID adds the groupId to the get learn API public v2 courses course ID groups sets group ID groups params
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams) SetGroupID(groupID string) {
	o.GroupID = groupID
}

// WithLimit adds the limit to the get learn API public v2 courses course ID groups sets group ID groups params
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams) WithLimit(limit *int32) *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get learn API public v2 courses course ID groups sets group ID groups params
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams) SetLimit(limit *int32) {
	o.Limit = limit
}

// WithModified adds the modified to the get learn API public v2 courses course ID groups sets group ID groups params
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams) WithModified(modified *strfmt.DateTime) *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams {
	o.SetModified(modified)
	return o
}

// SetModified adds the modified to the get learn API public v2 courses course ID groups sets group ID groups params
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams) SetModified(modified *strfmt.DateTime) {
	o.Modified = modified
}

// WithModifiedCompare adds the modifiedCompare to the get learn API public v2 courses course ID groups sets group ID groups params
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams) WithModifiedCompare(modifiedCompare *string) *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams {
	o.SetModifiedCompare(modifiedCompare)
	return o
}

// SetModifiedCompare adds the modifiedCompare to the get learn API public v2 courses course ID groups sets group ID groups params
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams) SetModifiedCompare(modifiedCompare *string) {
	o.ModifiedCompare = modifiedCompare
}

// WithOffset adds the offset to the get learn API public v2 courses course ID groups sets group ID groups params
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams) WithOffset(offset *int32) *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the get learn API public v2 courses course ID groups sets group ID groups params
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams) SetOffset(offset *int32) {
	o.Offset = offset
}

// WithSort adds the sort to the get learn API public v2 courses course ID groups sets group ID groups params
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams) WithSort(sort *string) *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams {
	o.SetSort(sort)
	return o
}

// SetSort adds the sort to the get learn API public v2 courses course ID groups sets group ID groups params
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams) SetSort(sort *string) {
	o.Sort = sort
}

// WriteToRequest writes these params to a swagger request
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDGroupsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param courseId
	if err := r.SetPathParam("courseId", o.CourseID); err != nil {
		return err
	}

	if o.Created != nil {

		// query param created
		var qrCreated strfmt.DateTime
		if o.Created != nil {
			qrCreated = *o.Created
		}
		qCreated := qrCreated.String()
		if qCreated != "" {
			if err := r.SetQueryParam("created", qCreated); err != nil {
				return err
			}
		}

	}

	if o.CreatedCompare != nil {

		// query param createdCompare
		var qrCreatedCompare string
		if o.CreatedCompare != nil {
			qrCreatedCompare = *o.CreatedCompare
		}
		qCreatedCompare := qrCreatedCompare
		if qCreatedCompare != "" {
			if err := r.SetQueryParam("createdCompare", qCreatedCompare); err != nil {
				return err
			}
		}

	}

	if o.Fields != nil {

		// query param fields
		var qrFields string
		if o.Fields != nil {
			qrFields = *o.Fields
		}
		qFields := qrFields
		if qFields != "" {
			if err := r.SetQueryParam("fields", qFields); err != nil {
				return err
			}
		}

	}

	// path param groupId
	if err := r.SetPathParam("groupId", o.GroupID); err != nil {
		return err
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int32
		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt32(qrLimit)
		if qLimit != "" {
			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}

	}

	if o.Modified != nil {

		// query param modified
		var qrModified strfmt.DateTime
		if o.Modified != nil {
			qrModified = *o.Modified
		}
		qModified := qrModified.String()
		if qModified != "" {
			if err := r.SetQueryParam("modified", qModified); err != nil {
				return err
			}
		}

	}

	if o.ModifiedCompare != nil {

		// query param modifiedCompare
		var qrModifiedCompare string
		if o.ModifiedCompare != nil {
			qrModifiedCompare = *o.ModifiedCompare
		}
		qModifiedCompare := qrModifiedCompare
		if qModifiedCompare != "" {
			if err := r.SetQueryParam("modifiedCompare", qModifiedCompare); err != nil {
				return err
			}
		}

	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int32
		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt32(qrOffset)
		if qOffset != "" {
			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}

	}

	if o.Sort != nil {

		// query param sort
		var qrSort string
		if o.Sort != nil {
			qrSort = *o.Sort
		}
		qSort := qrSort
		if qSort != "" {
			if err := r.SetQueryParam("sort", qSort); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
