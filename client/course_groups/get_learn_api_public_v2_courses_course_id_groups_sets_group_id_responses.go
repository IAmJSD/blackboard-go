// Code generated by go-swagger; DO NOT EDIT.

package course_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jakemakesstuff/blackboard-go/models"
)

// GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDReader is a Reader for the GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupID structure.
type GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDOK creates a GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDOK with default headers values
func NewGetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDOK() *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDOK {
	return &GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDOK{}
}

/*GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDOK handles this case with default header values.

OK
*/
type GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDOK struct {
	Payload *models.GroupV2
}

func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDOK) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v2/courses/{courseId}/groups/sets/{groupId}][%d] getLearnApiPublicV2CoursesCourseIdGroupsSetsGroupIdOK  %+v", 200, o.Payload)
}

func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDOK) GetPayload() *models.GroupV2 {
	return o.Payload
}

func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GroupV2)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDBadRequest creates a GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDBadRequest with default headers values
func NewGetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDBadRequest() *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDBadRequest {
	return &GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDBadRequest{}
}

/*GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDBadRequest handles this case with default header values.

Bad Request
*/
type GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDBadRequest struct {
	Payload *models.RestException
}

func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v2/courses/{courseId}/groups/sets/{groupId}][%d] getLearnApiPublicV2CoursesCourseIdGroupsSetsGroupIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDBadRequest) GetPayload() *models.RestException {
	return o.Payload
}

func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDForbidden creates a GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDForbidden with default headers values
func NewGetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDForbidden() *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDForbidden {
	return &GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDForbidden{}
}

/*GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDForbidden handles this case with default header values.

Forbidden
*/
type GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDForbidden struct {
	Payload *models.RestException
}

func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDForbidden) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v2/courses/{courseId}/groups/sets/{groupId}][%d] getLearnApiPublicV2CoursesCourseIdGroupsSetsGroupIdForbidden  %+v", 403, o.Payload)
}

func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDForbidden) GetPayload() *models.RestException {
	return o.Payload
}

func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDNotFound creates a GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDNotFound with default headers values
func NewGetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDNotFound() *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDNotFound {
	return &GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDNotFound{}
}

/*GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDNotFound handles this case with default header values.

Not Found
*/
type GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDNotFound struct {
	Payload *models.RestException
}

func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDNotFound) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v2/courses/{courseId}/groups/sets/{groupId}][%d] getLearnApiPublicV2CoursesCourseIdGroupsSetsGroupIdNotFound  %+v", 404, o.Payload)
}

func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDNotFound) GetPayload() *models.RestException {
	return o.Payload
}

func (o *GetLearnAPIPublicV2CoursesCourseIDGroupsSetsGroupIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
