// Code generated by go-swagger; DO NOT EDIT.

package course_assessments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jakemakesstuff/blackboard-go/models"
)

// GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDReader is a Reader for the GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionID structure.
type GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDOK creates a GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDOK with default headers values
func NewGetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDOK() *GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDOK {
	return &GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDOK{}
}

/*GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDOK handles this case with default header values.

OK
*/
type GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDOK struct {
	Payload *models.Question
}

func (o *GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDOK) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/courses/{courseId}/assessments/{assessmentId}/questions/{questionId}][%d] getLearnApiPublicV1CoursesCourseIdAssessmentsAssessmentIdQuestionsQuestionIdOK  %+v", 200, o.Payload)
}

func (o *GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDOK) GetPayload() *models.Question {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Question)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDBadRequest creates a GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDBadRequest with default headers values
func NewGetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDBadRequest() *GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDBadRequest {
	return &GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDBadRequest{}
}

/*GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDBadRequest handles this case with default header values.

Bad Request
*/
type GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDBadRequest struct {
	Payload *models.RestException
}

func (o *GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/courses/{courseId}/assessments/{assessmentId}/questions/{questionId}][%d] getLearnApiPublicV1CoursesCourseIdAssessmentsAssessmentIdQuestionsQuestionIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDBadRequest) GetPayload() *models.RestException {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDForbidden creates a GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDForbidden with default headers values
func NewGetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDForbidden() *GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDForbidden {
	return &GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDForbidden{}
}

/*GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDForbidden handles this case with default header values.

Access Denied
*/
type GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDForbidden struct {
	Payload *models.RestException
}

func (o *GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDForbidden) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/courses/{courseId}/assessments/{assessmentId}/questions/{questionId}][%d] getLearnApiPublicV1CoursesCourseIdAssessmentsAssessmentIdQuestionsQuestionIdForbidden  %+v", 403, o.Payload)
}

func (o *GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDForbidden) GetPayload() *models.RestException {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDNotFound creates a GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDNotFound with default headers values
func NewGetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDNotFound() *GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDNotFound {
	return &GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDNotFound{}
}

/*GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDNotFound handles this case with default header values.

Question is not found
*/
type GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDNotFound struct {
	Payload *models.RestException
}

func (o *GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDNotFound) Error() string {
	return fmt.Sprintf("[GET /learn/api/public/v1/courses/{courseId}/assessments/{assessmentId}/questions/{questionId}][%d] getLearnApiPublicV1CoursesCourseIdAssessmentsAssessmentIdQuestionsQuestionIdNotFound  %+v", 404, o.Payload)
}

func (o *GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDNotFound) GetPayload() *models.RestException {
	return o.Payload
}

func (o *GetLearnAPIPublicV1CoursesCourseIDAssessmentsAssessmentIDQuestionsQuestionIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
