// Code generated by go-swagger; DO NOT EDIT.

package deprecated_course_group_users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new deprecated course group users API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for deprecated course group users API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserID(params *DeleteLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserIDNoContent, error)

	GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsers(params *GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersOK, error)

	GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserID(params *GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserIDOK, error)

	PutLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserID(params *PutLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserIDParams, authInfo runtime.ClientAuthInfoWriter) (*PutLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserIDCreated, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserID deletes group membership

  Deletes a group from the specified course.

Required entitlements:

- course.group.MODIFY

**Since**: 3100.6.0

**Deprecated**: since 3600.0.0; use the v2 end-point instead
*/
func (a *Client) DeleteLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserID(params *DeleteLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserIDNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserID",
		Method:             "DELETE",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/groups/{groupId}/users/{userId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserIDNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsers gets group memberships

  Returns a list of group memberships objects for the specified group.

Callers not enrolled in the group must have at least one of the following entitlements:

- course.group.VIEW

**Since**: 3100.6.0

**Deprecated**: since 3600.0.0; use the v2 end-point instead
*/
func (a *Client) GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsers(params *GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsers",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/groups/{groupId}/users",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsers: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserID gets group membership

  Loads a group membership in the specified group.

Callers not enrolled in the group must have at least one of the following entitlements:

- course.group.VIEW

**Since**: 3100.6.0

**Deprecated**: since 3600.0.0; use the v2 end-point instead
*/
func (a *Client) GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserID(params *GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserID",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/groups/{groupId}/users/{userId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PutLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserID creates group membership

  Creates a group membership in the specified group.

Minimal entitlements required:

- course.group.MODIFY

**Since**: 3100.6.0

**Deprecated**: since 3600.0.0; use the v2 end-point instead
*/
func (a *Client) PutLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserID(params *PutLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserIDParams, authInfo runtime.ClientAuthInfoWriter) (*PutLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserIDCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPutLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PutLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserID",
		Method:             "PUT",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/groups/{groupId}/users/{userId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PutLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PutLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserIDCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PutLearnAPIPublicV1CoursesCourseIDGroupsGroupIDUsersUserID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
