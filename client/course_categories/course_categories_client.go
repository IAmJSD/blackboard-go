// Code generated by go-swagger; DO NOT EDIT.

package course_categories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new course categories API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for course categories API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryID(params *DeleteLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDNoContent, error)

	DeleteLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesCourseID(params *DeleteLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesCourseIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesCourseIDNoContent, error)

	GetLearnAPIPublicV1CatalogCategoriesCategoryType(params *GetLearnAPIPublicV1CatalogCategoriesCategoryTypeParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CatalogCategoriesCategoryTypeOK, error)

	GetLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryID(params *GetLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDOK, error)

	GetLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCourses(params *GetLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesOK, error)

	GetLearnAPIPublicV1CatalogCategoriesCategoryTypeParentIDChildren(params *GetLearnAPIPublicV1CatalogCategoriesCategoryTypeParentIDChildrenParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CatalogCategoriesCategoryTypeParentIDChildrenOK, error)

	GetLearnAPIPublicV1CoursesCourseIDCategories(params *GetLearnAPIPublicV1CoursesCourseIDCategoriesParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDCategoriesOK, error)

	PatchLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryID(params *PatchLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDParams, authInfo runtime.ClientAuthInfoWriter) (*PatchLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDOK, error)

	PostLearnAPIPublicV1CatalogCategoriesCategoryType(params *PostLearnAPIPublicV1CatalogCategoriesCategoryTypeParams, authInfo runtime.ClientAuthInfoWriter) (*PostLearnAPIPublicV1CatalogCategoriesCategoryTypeCreated, error)

	PutLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesCourseID(params *PutLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesCourseIDParams, authInfo runtime.ClientAuthInfoWriter) (*PutLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesCourseIDCreated, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryID deletes category

  Deletes the category corresponding to the provided type and id

Entitlement system.course.categories.MODIFY required to delete a course category Entitlement system.org.categories.MODIFY required to delete an organization category

**Since**: 3600.0.0
*/
func (a *Client) DeleteLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryID(params *DeleteLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryID",
		Method:             "DELETE",
		PathPattern:        "/learn/api/public/v1/catalog/categories/{categoryType}/{categoryId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesCourseID deletes membership

  Deletes a category/course association

The 'admin.course.categorize.MODIFY' entitlement is needed for course associations The 'admin.org.categorize.MODIFY' entitlement is needed for organization associations

**Since**: 3600.0.0
*/
func (a *Client) DeleteLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesCourseID(params *DeleteLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesCourseIDParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesCourseIDNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesCourseIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesCourseID",
		Method:             "DELETE",
		PathPattern:        "/learn/api/public/v1/catalog/categories/{categoryType}/{categoryId}/courses/{courseId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesCourseIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesCourseIDNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesCourseID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV1CatalogCategoriesCategoryType gets categories

  Returns a list of categories of the provided type (course or organization)

Entitlement system.course-categories.VIEW required

Users with entitlement "system.course.categories.MODIFY" for course categories, or "system.org.categories.MODIFY" for organization categories can view all fields and all categories.

Users with system.course-categories.VIEW but not the corresponding MODIFY entitlements have read access to all properties except:

- restricted
- institutionRoleIds
In addition, users without the corresponding MODIFY entitlement have access to a restricted category only if their institution role matches one of the roles in the institutionRoleIds list for that category.

**Since**: 3600.0.0
*/
func (a *Client) GetLearnAPIPublicV1CatalogCategoriesCategoryType(params *GetLearnAPIPublicV1CatalogCategoriesCategoryTypeParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CatalogCategoriesCategoryTypeOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1CatalogCategoriesCategoryTypeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1CatalogCategoriesCategoryType",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/catalog/categories/{categoryType}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1CatalogCategoriesCategoryTypeReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1CatalogCategoriesCategoryTypeOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1CatalogCategoriesCategoryType: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryID gets category

  Returns the category corresponding the provided type (course or organization) and ID

Entitlement system.course-categories.VIEW required

Users with entitlement "system.course.categories.MODIFY" for course categories, or "system.org.categories.MODIFY" for organization categories can view all fields and all categories.

Users with system.course-categories.VIEW but not the corresponding MODIFY entitlements have read access to all properties except:

- restricted
- institutionRoleIds
In addition, users without the corresponding MODIFY entitlement have access to a restricted category only if their institution role matches one of the roles in the institutionRoleIds list for that category.

**Since**: 3600.0.0
*/
func (a *Client) GetLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryID(params *GetLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryID",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/catalog/categories/{categoryType}/{categoryId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCourses gets memberships

  Get courses associated with the provided category. Entitlement system.course-categories.VIEW required

**Since**: 3600.0.0
*/
func (a *Client) GetLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCourses(params *GetLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCourses",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/catalog/categories/{categoryType}/{categoryId}/courses",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCourses: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV1CatalogCategoriesCategoryTypeParentIDChildren gets child categories

  Returns a list of categories which are children of the category corresponding to the provided type (course or organization) and Id

Entitlement system.course-categories.VIEW required

Users with entitlement "system.course.categories.MODIFY" for course categories, or "system.org.categories.MODIFY" for organization categories can view all fields and all categories.

Users with system.course-categories.VIEW but not the corresponding MODIFY entitlements have read access to all properties except:

- restricted
- institutionRoleIds
In addition, users without the corresponding MODIFY entitlement have access to a restricted category only if their institution role matches one of the roles in the institutionRoleIds list for that category.

**Since**: 3600.0.0
*/
func (a *Client) GetLearnAPIPublicV1CatalogCategoriesCategoryTypeParentIDChildren(params *GetLearnAPIPublicV1CatalogCategoriesCategoryTypeParentIDChildrenParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CatalogCategoriesCategoryTypeParentIDChildrenOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1CatalogCategoriesCategoryTypeParentIDChildrenParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1CatalogCategoriesCategoryTypeParentIDChildren",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/catalog/categories/{categoryType}/{parentId}/children",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1CatalogCategoriesCategoryTypeParentIDChildrenReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1CatalogCategoriesCategoryTypeParentIDChildrenOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1CatalogCategoriesCategoryTypeParentIDChildren: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLearnAPIPublicV1CoursesCourseIDCategories gets memberships

  Get categories associated with the provided course. Entitlement system.course-categories.VIEW required

**Since**: 3600.0.0
*/
func (a *Client) GetLearnAPIPublicV1CoursesCourseIDCategories(params *GetLearnAPIPublicV1CoursesCourseIDCategoriesParams, authInfo runtime.ClientAuthInfoWriter) (*GetLearnAPIPublicV1CoursesCourseIDCategoriesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLearnAPIPublicV1CoursesCourseIDCategoriesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetLearnAPIPublicV1CoursesCourseIDCategories",
		Method:             "GET",
		PathPattern:        "/learn/api/public/v1/courses/{courseId}/categories",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLearnAPIPublicV1CoursesCourseIDCategoriesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLearnAPIPublicV1CoursesCourseIDCategoriesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetLearnAPIPublicV1CoursesCourseIDCategories: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryID updates category

  Updates the category corresponding to the provided type and id.

Entitlement system.course.categories.MODIFY required to modify course categories Entitlement system.org.categories.MODIFY required to modify organization categories

**Since**: 3600.0.0
*/
func (a *Client) PatchLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryID(params *PatchLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDParams, authInfo runtime.ClientAuthInfoWriter) (*PatchLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryID",
		Method:             "PATCH",
		PathPattern:        "/learn/api/public/v1/catalog/categories/{categoryType}/{categoryId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PatchLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostLearnAPIPublicV1CatalogCategoriesCategoryType creates category

  Creates a new category of the provided type as defined in the request body

Entitlement system.course.categories.MODIFY required to create course categories Entitlement system.org.categories.MODIFY required to create organization categories

**Since**: 3600.0.0
*/
func (a *Client) PostLearnAPIPublicV1CatalogCategoriesCategoryType(params *PostLearnAPIPublicV1CatalogCategoriesCategoryTypeParams, authInfo runtime.ClientAuthInfoWriter) (*PostLearnAPIPublicV1CatalogCategoriesCategoryTypeCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostLearnAPIPublicV1CatalogCategoriesCategoryTypeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostLearnAPIPublicV1CatalogCategoriesCategoryType",
		Method:             "POST",
		PathPattern:        "/learn/api/public/v1/catalog/categories/{categoryType}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostLearnAPIPublicV1CatalogCategoriesCategoryTypeReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostLearnAPIPublicV1CatalogCategoriesCategoryTypeCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostLearnAPIPublicV1CatalogCategoriesCategoryType: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PutLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesCourseID creates membership

  Creates a category/course association. The course defined by courseId must match the categoryType.

The 'admin.course.categorize.MODIFY' entitlement is needed for course associations The 'admin.org.categorize.MODIFY' entitlement is needed for organization associations

**Since**: 3600.0.0
*/
func (a *Client) PutLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesCourseID(params *PutLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesCourseIDParams, authInfo runtime.ClientAuthInfoWriter) (*PutLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesCourseIDCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPutLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesCourseIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PutLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesCourseID",
		Method:             "PUT",
		PathPattern:        "/learn/api/public/v1/catalog/categories/{categoryType}/{categoryId}/courses/{courseId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PutLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesCourseIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PutLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesCourseIDCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PutLearnAPIPublicV1CatalogCategoriesCategoryTypeCategoryIDCoursesCourseID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
