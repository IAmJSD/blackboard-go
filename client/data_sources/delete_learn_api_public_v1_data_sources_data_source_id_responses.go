// Code generated by go-swagger; DO NOT EDIT.

package data_sources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jakemakesstuff/blackboard-go/models"
)

// DeleteLearnAPIPublicV1DataSourcesDataSourceIDReader is a Reader for the DeleteLearnAPIPublicV1DataSourcesDataSourceID structure.
type DeleteLearnAPIPublicV1DataSourcesDataSourceIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteLearnAPIPublicV1DataSourcesDataSourceIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteLearnAPIPublicV1DataSourcesDataSourceIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteLearnAPIPublicV1DataSourcesDataSourceIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteLearnAPIPublicV1DataSourcesDataSourceIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteLearnAPIPublicV1DataSourcesDataSourceIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteLearnAPIPublicV1DataSourcesDataSourceIDNoContent creates a DeleteLearnAPIPublicV1DataSourcesDataSourceIDNoContent with default headers values
func NewDeleteLearnAPIPublicV1DataSourcesDataSourceIDNoContent() *DeleteLearnAPIPublicV1DataSourcesDataSourceIDNoContent {
	return &DeleteLearnAPIPublicV1DataSourcesDataSourceIDNoContent{}
}

/*DeleteLearnAPIPublicV1DataSourcesDataSourceIDNoContent handles this case with default header values.

No Content
*/
type DeleteLearnAPIPublicV1DataSourcesDataSourceIDNoContent struct {
}

func (o *DeleteLearnAPIPublicV1DataSourcesDataSourceIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /learn/api/public/v1/dataSources/{dataSourceId}][%d] deleteLearnApiPublicV1DataSourcesDataSourceIdNoContent ", 204)
}

func (o *DeleteLearnAPIPublicV1DataSourcesDataSourceIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteLearnAPIPublicV1DataSourcesDataSourceIDBadRequest creates a DeleteLearnAPIPublicV1DataSourcesDataSourceIDBadRequest with default headers values
func NewDeleteLearnAPIPublicV1DataSourcesDataSourceIDBadRequest() *DeleteLearnAPIPublicV1DataSourcesDataSourceIDBadRequest {
	return &DeleteLearnAPIPublicV1DataSourcesDataSourceIDBadRequest{}
}

/*DeleteLearnAPIPublicV1DataSourcesDataSourceIDBadRequest handles this case with default header values.

Bad Request
*/
type DeleteLearnAPIPublicV1DataSourcesDataSourceIDBadRequest struct {
	Payload *models.RestException
}

func (o *DeleteLearnAPIPublicV1DataSourcesDataSourceIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /learn/api/public/v1/dataSources/{dataSourceId}][%d] deleteLearnApiPublicV1DataSourcesDataSourceIdBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteLearnAPIPublicV1DataSourcesDataSourceIDBadRequest) GetPayload() *models.RestException {
	return o.Payload
}

func (o *DeleteLearnAPIPublicV1DataSourcesDataSourceIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLearnAPIPublicV1DataSourcesDataSourceIDForbidden creates a DeleteLearnAPIPublicV1DataSourcesDataSourceIDForbidden with default headers values
func NewDeleteLearnAPIPublicV1DataSourcesDataSourceIDForbidden() *DeleteLearnAPIPublicV1DataSourcesDataSourceIDForbidden {
	return &DeleteLearnAPIPublicV1DataSourcesDataSourceIDForbidden{}
}

/*DeleteLearnAPIPublicV1DataSourcesDataSourceIDForbidden handles this case with default header values.

Forbidden
*/
type DeleteLearnAPIPublicV1DataSourcesDataSourceIDForbidden struct {
	Payload *models.RestException
}

func (o *DeleteLearnAPIPublicV1DataSourcesDataSourceIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /learn/api/public/v1/dataSources/{dataSourceId}][%d] deleteLearnApiPublicV1DataSourcesDataSourceIdForbidden  %+v", 403, o.Payload)
}

func (o *DeleteLearnAPIPublicV1DataSourcesDataSourceIDForbidden) GetPayload() *models.RestException {
	return o.Payload
}

func (o *DeleteLearnAPIPublicV1DataSourcesDataSourceIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLearnAPIPublicV1DataSourcesDataSourceIDNotFound creates a DeleteLearnAPIPublicV1DataSourcesDataSourceIDNotFound with default headers values
func NewDeleteLearnAPIPublicV1DataSourcesDataSourceIDNotFound() *DeleteLearnAPIPublicV1DataSourcesDataSourceIDNotFound {
	return &DeleteLearnAPIPublicV1DataSourcesDataSourceIDNotFound{}
}

/*DeleteLearnAPIPublicV1DataSourcesDataSourceIDNotFound handles this case with default header values.

Not Found
*/
type DeleteLearnAPIPublicV1DataSourcesDataSourceIDNotFound struct {
	Payload *models.RestException
}

func (o *DeleteLearnAPIPublicV1DataSourcesDataSourceIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /learn/api/public/v1/dataSources/{dataSourceId}][%d] deleteLearnApiPublicV1DataSourcesDataSourceIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteLearnAPIPublicV1DataSourcesDataSourceIDNotFound) GetPayload() *models.RestException {
	return o.Payload
}

func (o *DeleteLearnAPIPublicV1DataSourcesDataSourceIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestException)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
